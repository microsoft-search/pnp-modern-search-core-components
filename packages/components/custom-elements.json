{
  "schemaVersion": "1.0.0",
  "readme": "",
  "modules": [
    {
      "kind": "javascript-module",
      "path": "src/bundle/index.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/common/Constants.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "EventConstants",
          "members": [
            {
              "kind": "field",
              "name": "SEARCH_FILTER_EVENT",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "static": true,
              "readonly": true,
              "default": "\"PnPModernSearchCoreComponents:Search:Filter\"",
              "description": "Event name when filters are submitted"
            },
            {
              "kind": "field",
              "name": "SEARCH_RESULTS_EVENT",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "static": true,
              "readonly": true,
              "default": "\"PnPModernSearchCoreComponents:Search:Results\"",
              "description": "Event name when results are retrieved"
            },
            {
              "kind": "field",
              "name": "SEARCH_INPUT_EVENT",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "static": true,
              "readonly": true,
              "default": "\"PnPModernSearchCoreComponents:Search:Input\"",
              "description": "Event name when input is sent"
            },
            {
              "kind": "field",
              "name": "SEARCH_VERTICAL_EVENT",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "static": true,
              "readonly": true,
              "default": "\"PnPModernSearchCoreComponents:Search:Verticals\"",
              "description": "Event name when tab change is retrieved"
            },
            {
              "kind": "field",
              "name": "SEARCH_SORT_EVENT",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "static": true,
              "readonly": true,
              "default": "\"PnPModernSearchCoreComponents:Search:Sort\"",
              "description": "Event name when sort field is updated"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "EventConstants",
          "declaration": {
            "name": "EventConstants",
            "module": "src/common/Constants.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/loc/strings.default.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "SearchResultsStrings",
          "type": {
            "text": "object"
          },
          "default": "{\r\n    seeAllLink: \"See all\",\r\n    results: \"results\"\r\n}"
        },
        {
          "kind": "variable",
          "name": "PaginationStrings",
          "type": {
            "text": "object"
          },
          "default": "{\r\n    nextBtn: \"Next\",\r\n    previousBtn: \"Previous\",\r\n    tooManyPages: \"Too many pages!\",\r\n    screenTipContent: `It seems your search returned a lot of pages!\r\nTry to narrow down your scope by specifying more precise keywords🙏`\r\n}"
        },
        {
          "kind": "variable",
          "name": "FilterDateStrings",
          "type": {
            "text": "object"
          },
          "default": "{\r\n    anyTime: \"Any time\",\r\n    today: \"Today\",\r\n    past24: \"Past 24 hours\",\r\n    pastWeek: \"Past week\",\r\n    pastMonth: \"Past month\",\r\n    past3Months: \"Past 3 months\",\r\n    pastYear: \"Past year\",\r\n    olderThanAYear: \"Older than a year\",\r\n    reset: \"Reset\",\r\n    from: \"From\",\r\n    to: \"To\",\r\n    applyDates: \"Apply dates\",\r\n    selections: \"selection(s)\"\r\n}"
        },
        {
          "kind": "variable",
          "name": "FilterCheckboxStrings",
          "type": {
            "text": "object"
          },
          "default": "{\r\n    reset: \"Reset\",\r\n    searchPlaceholder: \"Search for values...\",\r\n    apply: \"Apply\",\r\n    cancel: \"Cancel\",\r\n    selections: \"selection(s)\"\r\n}"
        },
        {
          "kind": "variable",
          "name": "SearchFiltersStrings",
          "type": {
            "text": "object"
          },
          "default": "{\r\n    resetAllFilters: \"Reset filters\",\r\n    noFilters: \"No filter to display\"\r\n}"
        },
        {
          "kind": "variable",
          "name": "SearchSortStrings",
          "type": {
            "text": "object"
          },
          "default": "{\r\n    sortedByRelevance: \"Sorted by relevance\",\r\n    sortDefault:\"Relevance\",\r\n    sortAscending: \"Sort ascending\",\r\n    sortDescending: \"Sort descending\",\r\n}"
        },
        {
          "kind": "variable",
          "name": "SearchInputStrings",
          "type": {
            "text": "object"
          },
          "default": "{\r\n    searchPlaceholder: \"Search for values...\",\r\n    clearSearch: \"Clear searchbox\",\r\n    previousSearches: \"Previous searches\"\r\n}"
        },
        {
          "kind": "variable",
          "name": "LanguageProviderStrings",
          "type": {
            "text": "object"
          },
          "default": "{}"
        },
        {
          "kind": "variable",
          "name": "SearchInfosStrings",
          "type": {
            "text": "object"
          },
          "default": "{\r\n    searchQueryResultText: (keywords) : string => `Here's what we found for \"${keywords}\"`,\r\n    resultCountText: (count): string  => `Found ${count} results you have permissions to see.`,\r\n    notFoundSuggestions: (keywords) => html`\r\n                    <h2 class=\"font-primary text-3xl mb-4\">Your search for \"${keywords}\" did not match any content.</h2>\r\n                    <p>Some suggestions:</p>\r\n                    <ul class=\"list-disc pl-8\">\r\n                        <li>Make sure all words are spelled correctly</li>\r\n                        <li>Try entering different keywords, more general keywords or less keywords</li>\r\n                        <li>Maybe what you were looking for is not in the scope of the Enterprise Search? Check all the sources we index in our <a href=\"https://goto..org/SearchFAQ\" target=\"_blank\" class=\"text-primary font-bold hover:underline\">FAQ page</a>.</li>\r\n                        <li>... Or ask for help by submitting a <a href=\"https://goto..org/SearchSOS\" target=\"_blank\" class=\"text-primary font-bold hover:underline\">SOS ticket</a> and our colleagues will try their best to help you.</li>\r\n                    </ul>\r\n    `,\r\n    didYouMean: (handlerFunction, updatedQueryString) => html`\r\n        <p>Did you mean: \"<a href=\"#\" @click=${handlerFunction}>${unsafeHTML(updatedQueryString)}\"?</a></p> \r\n    `\r\n}"
        },
        {
          "kind": "variable",
          "name": "ErrorMessageStrings",
          "type": {
            "text": "object"
          },
          "default": "{\r\n    errorMessage: \"Error\"\r\n}"
        },
        {
          "kind": "variable",
          "name": "strings",
          "type": {
            "text": "object"
          },
          "default": "{ \r\n    language: \"en-us\",\r\n    _components: {\r\n        [ComponentElements.SearchResultsComponent]: {...SearchResultsStrings},\r\n        [ComponentElements.PaginationComponent]: {...PaginationStrings},\r\n        [ComponentElements.DateFilterComponent]: {...FilterDateStrings},\r\n        [ComponentElements.CheckboxFilterComponent]: {...FilterCheckboxStrings},\r\n        [ComponentElements.SearchFiltersComponent]: {...SearchFiltersStrings},\r\n        [ComponentElements.SearchInputComponent]: {...SearchInputStrings},\r\n        [ComponentElements.LanguageProviderComponent]: {...LanguageProviderStrings},\r\n        [ComponentElements.SearchInfosComponent]: {...SearchInfosStrings},\r\n        [ComponentElements.ErrorMessageComponent]: {...ErrorMessageStrings},\r\n        [ComponentElements.SearchSortComponent]: {...SearchSortStrings}\r\n    }\r\n}"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "SearchResultsStrings",
          "declaration": {
            "name": "SearchResultsStrings",
            "module": "src/loc/strings.default.ts"
          }
        },
        {
          "kind": "js",
          "name": "PaginationStrings",
          "declaration": {
            "name": "PaginationStrings",
            "module": "src/loc/strings.default.ts"
          }
        },
        {
          "kind": "js",
          "name": "FilterDateStrings",
          "declaration": {
            "name": "FilterDateStrings",
            "module": "src/loc/strings.default.ts"
          }
        },
        {
          "kind": "js",
          "name": "FilterCheckboxStrings",
          "declaration": {
            "name": "FilterCheckboxStrings",
            "module": "src/loc/strings.default.ts"
          }
        },
        {
          "kind": "js",
          "name": "SearchFiltersStrings",
          "declaration": {
            "name": "SearchFiltersStrings",
            "module": "src/loc/strings.default.ts"
          }
        },
        {
          "kind": "js",
          "name": "SearchSortStrings",
          "declaration": {
            "name": "SearchSortStrings",
            "module": "src/loc/strings.default.ts"
          }
        },
        {
          "kind": "js",
          "name": "SearchInputStrings",
          "declaration": {
            "name": "SearchInputStrings",
            "module": "src/loc/strings.default.ts"
          }
        },
        {
          "kind": "js",
          "name": "LanguageProviderStrings",
          "declaration": {
            "name": "LanguageProviderStrings",
            "module": "src/loc/strings.default.ts"
          }
        },
        {
          "kind": "js",
          "name": "SearchInfosStrings",
          "declaration": {
            "name": "SearchInfosStrings",
            "module": "src/loc/strings.default.ts"
          }
        },
        {
          "kind": "js",
          "name": "ErrorMessageStrings",
          "declaration": {
            "name": "ErrorMessageStrings",
            "module": "src/loc/strings.default.ts"
          }
        },
        {
          "kind": "js",
          "name": "strings",
          "declaration": {
            "name": "strings",
            "module": "src/loc/strings.default.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/loc/strings.fr-fr.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "strings",
          "type": {
            "text": "object"
          },
          "default": "{ \r\n    language: \"fr-fr\",\r\n    _components: {\r\n        \"pnp-search-results\": {\r\n            seeAllLink: \"Voir tout\",\r\n            results: \"résultats\"\r\n        },\r\n        \"pnp-pagination\": {\r\n            nextBtn: \"Suivant\",\r\n            previousBtn: \"Précédent\",\r\n            tooManyPages: \"Trop de pages!\",\r\n            screenTipContent: `Il semble que ta recherche ait retourné beaucoup trop de pages!\r\nEssaye de restreindre le périmètre de ta recherche en utilisant des mots-clés plus précis🙏\r\n            `\r\n        },\r\n        \"pnp-filter-date\": {\r\n            anyTime: \"N'importe quand\",\r\n            today: \"Aujourd'hui\",\r\n            past24: \"Dernières 24h\",\r\n            pastWeek: \"Semaine dernière\",\r\n            pastMonth: \"Mois dernier\",\r\n            past3Months: \"Derniers 3 mois\",\r\n            pastYear: \"Année dernière\",\r\n            olderThanAYear: \"Au delà d'un an\",\r\n            reset: \"Réinitialiser\",\r\n            from: \"À partir du\",\r\n            to: \"Au\",\r\n            applyDates: \"Appliquer\",\r\n            selections: \"sélection(s)\"\r\n        },\r\n        \"pnp-filter-checkbox\": {\r\n            reset: \"Réinitialiser\",\r\n            searchPlaceholder: \"Rechercher une valeur...\",\r\n            apply: \"Appliquer\",\r\n            cancel: \"Annuler\",\r\n            selections: \"sélection(s)\"\r\n        },\r\n        \"pnp-search-filters\": {\r\n            resetAllFilters: \"Réinitialiser les filtres\",\r\n            noFilters: \"Aucun filtre à afficher\"\r\n        },\r\n        \"pnp-search-input\": {\r\n            searchPlaceholder: \"Rechercher un mot clé...\",\r\n            clearSearch: \"Réinitialiser la boîte de recherche\",\r\n            previousSearches: \"Recherche(s) précédente(s)\"\r\n        },\r\n        \"pnp-search-infos\": {\r\n            searchQueryResultText: (keywords) : string => `Voici ce que nous avons trouvé pour \"${keywords}\"`,\r\n            resultCountText: (count): string  => `${count} résultats trouvés auxquels vous avez accès.`,\r\n            notFoundSuggestions: (keywords) => html`\r\n                        <h2 class=\"font-primary text-3xl mb-4\">Votre recherche pour \"${keywords}\" n'a retourné aucun résultat.</h2>\r\n                        <p>Quelques suggestions:</p>\r\n                        <ul class=\"list-disc pl-8\">\r\n                            <li>Vérifiez que l'orthographe est correcte.</li>\r\n                            <li>Essayer de spécifier d'autres mots clés.</li>\r\n                        </ul>\r\n            `,\r\n            didYouMean: (handlerFunction, updatedQueryString) => html`\r\n                <p>Vouliez-vous dire: \"<a href=\"#\" @click=${handlerFunction}>${unsafeHTML(updatedQueryString)}\"?</a></p> \r\n            `\r\n        },\r\n        \"pnp-error-message\": {\r\n            errorMessage:\"Erreur\"\r\n        },\r\n        \"pnp-search-sort\":{\r\n            sortedByRelevance: \"Trier par pertinence\",\r\n            sortDefault:\"Pertinence\",\r\n            sortAscending: \"Tri ascendant\",\r\n            sortDescending: \"Tri descendant\",\r\n        }\r\n    }\r\n}"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "strings",
          "declaration": {
            "name": "strings",
            "module": "src/loc/strings.fr-fr.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/exports/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "SearchResultsComponent",
          "declaration": {
            "name": "SearchResultsComponent",
            "module": "\"../components/search-results/SearchResultsComponent\""
          }
        },
        {
          "kind": "js",
          "name": "SearchInputComponent",
          "declaration": {
            "name": "SearchInputComponent",
            "module": "\"../components/search-input/SearchInputComponent\""
          }
        },
        {
          "kind": "js",
          "name": "SearchVerticalsComponent",
          "declaration": {
            "name": "SearchVerticalsComponent",
            "module": "\"../components/search-verticals/SearchVerticalsComponent\""
          }
        },
        {
          "kind": "js",
          "name": "SearchFiltersComponent",
          "declaration": {
            "name": "SearchFiltersComponent",
            "module": "\"../components/search-filters/SearchFiltersComponent\""
          }
        },
        {
          "kind": "js",
          "name": "LanguageProvider",
          "declaration": {
            "name": "LanguageProvider",
            "module": "\"../components/language-provider/LanguageProvider\""
          }
        },
        {
          "kind": "js",
          "name": "AdaptiveCardComponent",
          "declaration": {
            "name": "AdaptiveCardComponent",
            "module": "\"../components/adaptive-card/AdaptiveCardComponent\""
          }
        },
        {
          "kind": "js",
          "name": "VideoPlayerComponent",
          "declaration": {
            "name": "VideoPlayerComponent",
            "module": "\"../components/video-player/VideoPlayerComponent\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"@microsoft/mgt-sharepoint-provider\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"@microsoft/mgt-element/dist/es6/utils/TemplateHelper\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"@microsoft/mgt-element/dist/es6/providers/IProvider\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"@microsoft/mgt-element/dist/es6/providers/Providers\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"@microsoft/mgt-element/dist/es6/utils/LocalizationHelper\""
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/BaseComponent.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "MgtTemplatedComponentBase",
          "superclass": {
            "name": "MgtTemplatedComponent",
            "package": "@microsoft/mgt-element"
          }
        },
        {
          "kind": "class",
          "description": "",
          "name": "BaseComponent",
          "members": [
            {
              "kind": "field",
              "name": "theme",
              "attribute": "theme",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "enableDebugMode",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Enable the debug to explore data from context",
              "attribute": "enable-debug"
            },
            {
              "kind": "field",
              "name": "renderedOnce",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Flag indicating if data have been rendered at least once"
            },
            {
              "kind": "field",
              "name": "showDebugData",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "isInitialized",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Property indicating the component has finished its initialization squence, for instance setting default values than can be read from other component\r\nThis property is set as reflected attribute to be able to trigger a mutation for consumer components",
              "attribute": "initialized",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "_eventHanlders",
              "type": {
                "text": "Map<string, {component: HTMLElement, event: string, handler: EventHandler<any>}>"
              },
              "privacy": "public",
              "default": "new Map<string, {component: HTMLElement, event: string, handler: EventHandler<any>}>()"
            },
            {
              "kind": "field",
              "name": "componentError",
              "type": {
                "text": "Error"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "scopedElements",
              "static": true,
              "readonly": true
            },
            {
              "kind": "field",
              "name": "themeStyles",
              "static": true,
              "description": "Returns styles from theme (i.e. define CSS variables)",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "renderDebugMode",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "renderDebugData",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "toggleDebugData",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "bindComponents",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "parameters": [
                {
                  "name": "bindings",
                  "type": {
                    "text": "IComponentBinding[]"
                  },
                  "description": "the bindings to perform"
                }
              ],
              "description": "Binds all connected to the current one by listening all required events.\r\nThe method will wait for the component to be present on the page after a predefined timeout (default 5000ms)"
            },
            {
              "kind": "method",
              "name": "unbindComponents",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "bindings",
                  "type": {
                    "text": "IComponentBinding[]"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getTheme",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "description": "Get CSS variables values for the component predefined variables"
            },
            {
              "kind": "method",
              "name": "getLocalizedString",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "string",
                  "type": {
                    "text": "ILocalizedString | string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "setFASTColors",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "hasPropertyUpdated",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "changedProperties",
                  "type": {
                    "text": "PropertyValueMap<any>"
                  }
                },
                {
                  "name": "propertyName",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "fireCustomEvent",
              "return": {
                "type": {
                  "text": "*"
                }
              },
              "parameters": [
                {
                  "name": "eventName",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "detail",
                  "optional": true,
                  "type": {
                    "text": "*"
                  }
                },
                {
                  "name": "bubbles",
                  "default": "false",
                  "optional": true,
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "name": "cancelable",
                  "default": "false",
                  "optional": true,
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "name": "composed",
                  "default": "false",
                  "optional": true,
                  "type": {
                    "text": "boolean"
                  }
                }
              ],
              "description": "Override of default method to support 'composed' flag",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "timeoutPromise",
              "privacy": "private",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "promise",
                  "type": {
                    "text": "Promise<unknown>"
                  },
                  "description": "the promise to timeout"
                },
                {
                  "name": "timeout",
                  "type": {
                    "text": "number"
                  },
                  "description": "the timeout delay"
                },
                {
                  "name": "exception",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "the exception raised if any error occures"
                }
              ],
              "description": "Allows a promise to be timeout \r\nhttps://advancedweb.hu/how-to-add-timeout-to-a-promise-in-javascript/"
            },
            {
              "kind": "method",
              "name": "waitForElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "binding",
                  "type": {
                    "text": "IComponentBinding"
                  },
                  "description": "the binding detail"
                },
                {
                  "name": "timeout",
                  "optional": true,
                  "type": {
                    "text": "number"
                  }
                }
              ],
              "description": "Waits for a component to be present on the page and initialized to perform event binding"
            }
          ],
          "attributes": [
            {
              "name": "theme",
              "fieldName": "theme"
            },
            {
              "name": "enable-debug",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Enable the debug to explore data from context",
              "fieldName": "enableDebugMode"
            },
            {
              "name": "initialized",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Property indicating the component has finished its initialization squence, for instance setting default values than can be read from other component\r\nThis property is set as reflected attribute to be able to trigger a mutation for consumer components",
              "fieldName": "isInitialized"
            }
          ],
          "mixins": [
            {
              "name": "ScopedElementsMixin",
              "package": "@open-wc/scoped-elements"
            }
          ],
          "superclass": {
            "name": "MgtTemplatedComponentBase",
            "module": "src/components/BaseComponent.ts"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "MgtTemplatedComponentBase",
          "declaration": {
            "name": "MgtTemplatedComponentBase",
            "module": "src/components/BaseComponent.ts"
          }
        },
        {
          "kind": "js",
          "name": "BaseComponent",
          "declaration": {
            "name": "BaseComponent",
            "module": "src/components/BaseComponent.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/helpers/DataFilterHelper.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "DataFilterHelper",
          "members": [
            {
              "kind": "field",
              "name": "dayJs",
              "type": {
                "text": "any"
              },
              "static": true
            },
            {
              "kind": "method",
              "name": "buildFqlRefinementString",
              "privacy": "public",
              "static": true,
              "return": {
                "type": {
                  "text": "string[]"
                }
              },
              "parameters": [
                {
                  "name": "selectedFilters",
                  "type": {
                    "text": "IDataFilter[]"
                  },
                  "description": "The selected filter array"
                },
                {
                  "name": "encodeTokens",
                  "optional": true,
                  "type": {
                    "text": "boolean"
                  },
                  "description": "If true, encodes the taxonomy refinement tokens in UTF-8 to work with GET requests. Javascript encodes natively in UTF-16 by default."
                },
                {
                  "description": "The dayJs instance to resolve dates",
                  "name": "dayJs"
                }
              ],
              "description": "Build the refinement condition in FQL format"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "DataFilterHelper",
          "declaration": {
            "name": "DataFilterHelper",
            "module": "src/helpers/DataFilterHelper.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/helpers/DateHelper.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "DateHelper",
          "members": [
            {
              "kind": "field",
              "name": "dayJsLibrary",
              "type": {
                "text": "any"
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "dayJs",
              "privacy": "public",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "culture",
                  "optional": true,
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "description": "Creates or returns instance of the dayJs library"
            },
            {
              "kind": "method",
              "name": "setLocale",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "parameters": [
                {
                  "name": "locale",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "isDST",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "addMinutes",
              "privacy": "public",
              "parameters": [
                {
                  "name": "isDst",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "name": "date",
                  "type": {
                    "text": "Date"
                  }
                },
                {
                  "name": "minutes",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "dst",
                  "type": {
                    "text": "number"
                  }
                }
              ]
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "DateHelper",
          "declaration": {
            "name": "DateHelper",
            "module": "src/helpers/DateHelper.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/helpers/LocalizedStringHelper.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "LocalizedStringHelper",
          "members": [
            {
              "kind": "method",
              "name": "isLocalizedString",
              "privacy": "public",
              "static": true,
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "value",
                  "type": {
                    "text": "string | ILocalizedString"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getDefaultValue",
              "privacy": "public",
              "static": true,
              "return": {
                "type": {
                  "text": "string"
                }
              },
              "parameters": [
                {
                  "name": "value",
                  "type": {
                    "text": "string | ILocalizedString"
                  }
                }
              ]
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "LocalizedStringHelper",
          "declaration": {
            "name": "LocalizedStringHelper",
            "module": "src/helpers/LocalizedStringHelper.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/helpers/ObjectHelper.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ObjectHelper",
          "members": [
            {
              "kind": "method",
              "name": "byPath",
              "privacy": "public",
              "static": true,
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "object",
                  "type": {
                    "text": "any"
                  },
                  "description": "the object containg the property path"
                },
                {
                  "name": "path",
                  "type": {
                    "text": "string"
                  },
                  "description": "the property path to get"
                },
                {
                  "name": "delimiter",
                  "optional": true,
                  "type": {
                    "text": "string"
                  },
                  "description": "if multiple matches are found, specifiy the delimiter character to use to separate values in the returned string"
                }
              ],
              "description": "Get object property value by its deep path using jsPath predicate."
            },
            {
              "kind": "method",
              "name": "setPropertyByPath",
              "privacy": "public",
              "static": true,
              "parameters": [
                {
                  "name": "object",
                  "type": {
                    "text": "any"
                  }
                },
                {
                  "name": "path",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "value",
                  "type": {
                    "text": "unknown"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getPropertyByPath",
              "privacy": "public",
              "static": true,
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "object",
                  "type": {
                    "text": "any"
                  },
                  "description": "the source object"
                },
                {
                  "name": "path",
                  "type": {
                    "text": "string"
                  },
                  "description": "the property path"
                }
              ],
              "description": "Returns the property with original type according to the provided object path"
            },
            {
              "kind": "method",
              "name": "flatten",
              "privacy": "public",
              "static": true,
              "return": {
                "type": {
                  "text": "any"
                }
              },
              "parameters": [
                {
                  "name": "object",
                  "type": {
                    "text": "any"
                  },
                  "description": "the object to flatten"
                },
                {
                  "name": "prefix",
                  "default": "\"\"",
                  "description": "the prefix to use"
                }
              ],
              "description": "Flatten object properties\r\nExample: input = { \"a\":{ \"b\":{ \"b2\":2 }, \"c\":{ \"c2\":2, \"c3\":3 } } }\r\nResult: { a.b.b2: 2, a.c.c2: 2, a.c.c3: 3 }\r\nReference: https://gist.github.com/penguinboy/762197"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ObjectHelper",
          "declaration": {
            "name": "ObjectHelper",
            "module": "src/helpers/ObjectHelper.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/helpers/SearchResultsHelper.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "sanitizeSummary",
          "parameters": [
            {
              "name": "summary",
              "type": {
                "text": "string"
              }
            }
          ]
        },
        {
          "kind": "class",
          "description": "",
          "name": "SearchResultsHelper",
          "members": [
            {
              "kind": "field",
              "name": "controller",
              "type": {
                "text": "AbortController"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "FileTypeAssociations",
              "type": {
                "text": "object"
              },
              "privacy": "public",
              "static": true,
              "readonly": true,
              "default": "{\r\n        \"word\": [\"doc\",\"docx\",\"docm\",\"dot\",\"dotx\",\"dotm\"],\r\n        \"excel\": [\"xls\",\"xlsx\",\"csv\",\"xlsm\",\"xlsb\",\"xlx\",\"xml\",\"csv\",\"xltm\",\"xlt\",\"xltx\"],\r\n        \"powerpoint\": [\"ppt\",\"pptx\",\"pptm\",\"pps\",\"ppsm\",\"ppsx\",\"potx\",\"potm\",\"pot\"],\r\n        \"onenote\": [\"one\"],\r\n        \"text\": [\"txt\",\"rtf\"],\r\n        \"visio\": [\"vsd\",\"vsdx\",\"vsdm\"],\r\n        \"webpage\": [\"aspx\",\"html\"],\r\n        \"pdf\": [\"pdf\",\"application/pdf\"],\r\n        \"archive\": [\"zip\",\"7z\",\"rar\"],\r\n        \"video\": [\"mp4\",\"avi\",\"mov\",\"flv\",\"wmv\",\"webm\",\"ogg\"]\r\n    }"
            },
            {
              "kind": "method",
              "name": "getFileIconType",
              "privacy": "private",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "fileExtension",
                  "type": {
                    "text": "string"
                  },
                  "description": "the file extension"
                }
              ],
              "description": "Get the file famnily for its extension"
            },
            {
              "kind": "method",
              "name": "enhanceResults",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "Promise<any[]>"
                }
              },
              "parameters": [
                {
                  "name": "items",
                  "type": {
                    "text": "{ [key: string]:any }[]"
                  }
                },
                {
                  "name": "selectedFields",
                  "type": {
                    "text": "string[]"
                  }
                },
                {
                  "name": "isWildcard",
                  "optional": true,
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "abortRequest",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "getThumbnailUrls",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Promise<Map<string,string>>"
                }
              },
              "parameters": [
                {
                  "name": "items",
                  "type": {
                    "text": "{[key: string]: string}[]"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getPreviewUrls",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Promise<Map<string,string>>"
                }
              },
              "parameters": [
                {
                  "name": "items",
                  "type": {
                    "text": "{[key: string]: string}[]"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getItemsByBatch",
              "privacy": "private",
              "parameters": [
                {
                  "name": "items",
                  "type": {
                    "text": "{[key: string]: string}[]"
                  },
                  "description": "items data to build the batch requests"
                },
                {
                  "name": "batchRequestConditionCallback",
                  "type": {
                    "text": "(item) => boolean"
                  },
                  "description": "the condition for a batch request to be perfomed (ex. required fields on a item)"
                },
                {
                  "name": "batchRequestBodyCallabck",
                  "type": {
                    "text": "(item) => IGraphBatchRequest"
                  },
                  "description": "the batch request body to pass according to item"
                },
                {
                  "name": "batchResponseValueCallback",
                  "type": {
                    "text": "(batchResponse) => string"
                  },
                  "description": "the property to use as returned value from the batch HTTP call response. This callback is only called when the HTTP response succeedeed (i.e. HTTP 200)."
                }
              ],
              "description": "Build and send a Microsoft Graph batch request from items data",
              "return": {
                "type": {
                  "text": ""
                }
              }
            },
            {
              "kind": "method",
              "name": "isCustomApp",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "boolean"
                }
              }
            },
            {
              "kind": "method",
              "name": "getAvailableFieldsFromResults",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "string[]"
                }
              },
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "IDataSourceData"
                  },
                  "description": "the current data"
                }
              ],
              "description": "Retrieves the available fields from results"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "sanitizeSummary",
          "declaration": {
            "name": "sanitizeSummary",
            "module": "src/helpers/SearchResultsHelper.ts"
          }
        },
        {
          "kind": "js",
          "name": "SearchResultsHelper",
          "declaration": {
            "name": "SearchResultsHelper",
            "module": "src/helpers/SearchResultsHelper.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/helpers/SearchSvgHelper.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "getInternalSvg",
          "parameters": [
            {
              "name": "svgIcon",
              "type": {
                "text": "SearchSvgIcon"
              },
              "description": "defined by name"
            },
            {
              "description": "hex value",
              "name": "color"
            }
          ],
          "description": "returns an svg"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "getInternalSvg",
          "declaration": {
            "name": "getInternalSvg",
            "module": "src/helpers/SearchSvgHelper.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/helpers/StringHelper.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "StringHelper",
          "members": [
            {
              "kind": "method",
              "name": "escapeRegExp",
              "privacy": "public",
              "static": true,
              "parameters": [
                {
                  "name": "string"
                }
              ]
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "StringHelper",
          "declaration": {
            "name": "StringHelper",
            "module": "src/helpers/StringHelper.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/helpers/TemplateHelper.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "TemplateHelper",
          "members": [
            {
              "kind": "method",
              "name": "normalizeHtmlTemplate",
              "privacy": "public",
              "static": true,
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "template",
                  "type": {
                    "text": "HTMLTemplateElement"
                  },
                  "description": "the HTML template to normalize"
                }
              ],
              "description": "Normalizes an HTML template by fixing wrong constructed document fragment"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TemplateHelper",
          "declaration": {
            "name": "TemplateHelper",
            "module": "src/helpers/TemplateHelper.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/helpers/TestsHelper.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "TestsHelper",
          "members": [
            {
              "kind": "method",
              "name": "getTestProvider",
              "privacy": "public",
              "static": true,
              "return": {
                "type": {
                  "text": "IProvider"
                }
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TestsHelper",
          "declaration": {
            "name": "TestsHelper",
            "module": "src/helpers/TestsHelper.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/helpers/UrlHelper.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "UrlHelper",
          "members": [
            {
              "kind": "method",
              "name": "isValidUrl",
              "privacy": "public",
              "static": true,
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "url",
                  "type": {
                    "text": "string"
                  },
                  "description": "the URL to check"
                }
              ],
              "description": "Test if the provided string is a valid URL"
            },
            {
              "kind": "method",
              "name": "getQueryStringParam",
              "privacy": "public",
              "static": true,
              "return": {
                "type": {
                  "text": "String"
                }
              },
              "parameters": [
                {
                  "name": "field",
                  "type": {
                    "text": "String"
                  },
                  "description": "The field to get the value of"
                },
                {
                  "name": "url",
                  "type": {
                    "text": "String"
                  },
                  "description": "The URL to get the value from (optional)"
                }
              ],
              "description": "Get the value of a querystring"
            },
            {
              "kind": "method",
              "name": "removeQueryStringParam",
              "privacy": "public",
              "static": true,
              "return": {
                "type": {
                  "text": "String"
                }
              },
              "parameters": [
                {
                  "name": "field",
                  "type": {
                    "text": "String"
                  },
                  "description": "The field name of the query string to remove"
                },
                {
                  "name": "sourceURL",
                  "type": {
                    "text": "String"
                  },
                  "description": "The source URL"
                }
              ]
            },
            {
              "kind": "method",
              "name": "addOrReplaceQueryStringParam",
              "privacy": "public",
              "static": true,
              "return": {
                "type": {
                  "text": "string"
                }
              },
              "parameters": [
                {
                  "name": "url",
                  "type": {
                    "text": "string"
                  },
                  "description": "The current URL"
                },
                {
                  "name": "param",
                  "type": {
                    "text": "string"
                  },
                  "description": "The query string parameter to add or replace"
                },
                {
                  "name": "value",
                  "type": {
                    "text": "string"
                  },
                  "description": "The new value"
                }
              ],
              "description": "Add or replace a query string parameter"
            },
            {
              "kind": "method",
              "name": "getQueryStringParams",
              "privacy": "public",
              "static": true,
              "return": {
                "type": {
                  "text": ""
                }
              },
              "description": "Gets the current query string parameters"
            },
            {
              "kind": "method",
              "name": "decode",
              "privacy": "public",
              "static": true,
              "parameters": [
                {
                  "name": "encodedStr",
                  "type": {
                    "text": "string"
                  },
                  "description": "the string to decode"
                }
              ],
              "description": "Decodes a provided string"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "UrlHelper",
          "declaration": {
            "name": "UrlHelper",
            "module": "src/helpers/UrlHelper.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/utils/version.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "PACKAGE_VERSION",
          "type": {
            "text": "string"
          },
          "default": "\"[VERSION]\""
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PACKAGE_VERSION",
          "declaration": {
            "name": "PACKAGE_VERSION",
            "module": "src/utils/version.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/styles/tailwind-styles-css.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "styles",
          "type": {
            "text": "CSSResult[]"
          },
          "default": "[\r\n  css`\r/* ! tailwindcss v3.2.4 | MIT License | https://tailwindcss.com */*,:after,:before{border:0 solid #e5e7eb;box-sizing:border-box}:after,:before{--tw-content:\"\"}html{-webkit-text-size-adjust:100%;font-feature-settings:normal;font-family:var(--pnpsearch-internal-fontFamilySecondary),Roboto,ui-sans-serif,system-ui,-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,\"Noto Sans\",sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\",\"Noto Color Emoji\";line-height:1.5;-moz-tab-size:4;-o-tab-size:4;tab-size:4}body{line-height:inherit;margin:0}hr{border-top-width:1px;color:inherit;height:0}abbr:where([title]){-webkit-text-decoration:underline dotted;text-decoration:underline dotted}h1,h2,h3,h4,h5,h6{font-size:inherit;font-weight:inherit}a{color:inherit;text-decoration:inherit}b,strong{font-weight:bolder}code,kbd,pre,samp{font-family:ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,Liberation Mono,Courier New,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}table{border-collapse:collapse;border-color:inherit;text-indent:0}button,input,optgroup,select,textarea{color:inherit;font-family:inherit;font-size:100%;font-weight:inherit;line-height:inherit;margin:0;padding:0}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button;background-color:transparent;background-image:none}:-moz-focusring{outline:auto}:-moz-ui-invalid{box-shadow:none}progress{vertical-align:baseline}::-webkit-inner-spin-button,::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}blockquote,dd,dl,figure,h1,h2,h3,h4,h5,h6,hr,p,pre{margin:0}fieldset{margin:0}fieldset,legend{padding:0}menu,ol,ul{list-style:none;margin:0;padding:0}textarea{resize:vertical}input::-moz-placeholder,textarea::-moz-placeholder{color:#9ca3af;opacity:1}input::placeholder,textarea::placeholder{color:#9ca3af;opacity:1}[role=button],button{cursor:pointer}:disabled{cursor:default}audio,canvas,embed,iframe,img,object,svg,video{display:block;vertical-align:middle}img,video{height:auto;max-width:100%}[hidden]{display:none}\n\n[multiple],[type=date],[type=datetime-local],[type=email],[type=month],[type=number],[type=password],[type=search],[type=tel],[type=text],[type=time],[type=url],[type=week],select,textarea{\n  --tw-shadow:0 0 #0000;-webkit-appearance:none;-moz-appearance:none;appearance:none;\n  background-color:#fff;\n  border-color:#6b7280;\n  border-radius:0;\n  border-width:1px;\n  font-size:1rem;\n  line-height:1.5rem;\n  padding:.5rem .75rem}\n\n[multiple]:focus,[type=date]:focus,[type=datetime-local]:focus,[type=email]:focus,[type=month]:focus,[type=number]:focus,[type=password]:focus,[type=search]:focus,[type=tel]:focus,[type=text]:focus,[type=time]:focus,[type=url]:focus,[type=week]:focus,select:focus,textarea:focus{\n  --tw-ring-inset:var(--tw-empty,/*!*/ /*!*/);\n  --tw-ring-offset-width:0px;\n  --tw-ring-offset-color:#fff;\n  --tw-ring-color:#2563eb;\n  --tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);\n  --tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);\n  border-color:#2563eb;\n  box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow);\n  outline:2px solid transparent;\n  outline-offset:2px}\n\ninput::-moz-placeholder,textarea::-moz-placeholder{\n  color:#6b7280;\n  opacity:1}\n\ninput::placeholder,textarea::placeholder{\n  color:#6b7280;\n  opacity:1}\n\n::-webkit-datetime-edit-fields-wrapper{\n  padding:0}\n\n::-webkit-date-and-time-value{\n  min-height:1.5em}\n\n::-webkit-datetime-edit,::-webkit-datetime-edit-day-field,::-webkit-datetime-edit-hour-field,::-webkit-datetime-edit-meridiem-field,::-webkit-datetime-edit-millisecond-field,::-webkit-datetime-edit-minute-field,::-webkit-datetime-edit-month-field,::-webkit-datetime-edit-second-field,::-webkit-datetime-edit-year-field{\n  padding-bottom:0;\n  padding-top:0}\n\nselect{\n  background-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3E%3Cpath stroke='%236b7280' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='m6 8 4 4 4-4'/%3E%3C/svg%3E\");\n  background-position:right .5rem center;\n  background-repeat:no-repeat;\n  background-size:1.5em 1.5em;\n  padding-right:2.5rem;-webkit-print-color-adjust:exact;print-color-adjust:exact}\n\n[multiple]{\n  background-image:none;\n  background-position:0 0;\n  background-repeat:unset;\n  background-size:initial;\n  padding-right:.75rem;-webkit-print-color-adjust:unset;print-color-adjust:unset}\n\n[type=checkbox],[type=radio]{\n  --tw-shadow:0 0 #0000;-webkit-appearance:none;-moz-appearance:none;appearance:none;\n  background-color:#fff;\n  background-origin:border-box;\n  border-color:#6b7280;\n  border-width:1px;\n  color:#2563eb;\n  display:inline-block;\n  flex-shrink:0;\n  height:1rem;\n  padding:0;-webkit-print-color-adjust:exact;print-color-adjust:exact;-webkit-user-select:none;-moz-user-select:none;user-select:none;\n  vertical-align:middle;\n  width:1rem}\n\n[type=checkbox]{\n  border-radius:0}\n\n[type=radio]{\n  border-radius:100%}\n\n[type=checkbox]:focus,[type=radio]:focus{\n  --tw-ring-inset:var(--tw-empty,/*!*/ /*!*/);\n  --tw-ring-offset-width:2px;\n  --tw-ring-offset-color:#fff;\n  --tw-ring-color:#2563eb;\n  --tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);\n  --tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);\n  box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow);\n  outline:2px solid transparent;\n  outline-offset:2px}\n\n[type=checkbox]:checked,[type=radio]:checked{\n  background-color:currentColor;\n  background-position:50%;\n  background-repeat:no-repeat;\n  background-size:100% 100%;\n  border-color:transparent}\n\n[type=checkbox]:checked{\n  background-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='%23fff' viewBox='0 0 16 16'%3E%3Cpath d='M12.207 4.793a1 1 0 0 1 0 1.414l-5 5a1 1 0 0 1-1.414 0l-2-2a1 1 0 0 1 1.414-1.414L6.5 9.086l4.293-4.293a1 1 0 0 1 1.414 0z'/%3E%3C/svg%3E\")}\n\n[type=radio]:checked{\n  background-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='%23fff' viewBox='0 0 16 16'%3E%3Ccircle cx='8' cy='8' r='3'/%3E%3C/svg%3E\")}\n\n[type=checkbox]:checked:focus,[type=checkbox]:checked:hover,[type=radio]:checked:focus,[type=radio]:checked:hover{\n  background-color:currentColor;\n  border-color:transparent}\n\n[type=checkbox]:indeterminate{\n  background-color:currentColor;\n  background-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 16 16'%3E%3Cpath stroke='%23fff' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M4 8h8'/%3E%3C/svg%3E\");\n  background-position:50%;\n  background-repeat:no-repeat;\n  background-size:100% 100%;\n  border-color:transparent}\n\n[type=checkbox]:indeterminate:focus,[type=checkbox]:indeterminate:hover{\n  background-color:currentColor;\n  border-color:transparent}\n\n[type=file]{\n  background:unset;\n  border-color:inherit;\n  border-radius:0;\n  border-width:0;\n  font-size:unset;\n  line-height:inherit;\n  padding:0}\n\n[type=file]:focus{\n  outline:1px solid ButtonText;\n  outline:1px auto -webkit-focus-ring-color}\n\n*,:after,:before{\n  --tw-border-spacing-x:0;\n  --tw-border-spacing-y:0;\n  --tw-translate-x:0;\n  --tw-translate-y:0;\n  --tw-rotate:0;\n  --tw-skew-x:0;\n  --tw-skew-y:0;\n  --tw-scale-x:1;\n  --tw-scale-y:1;\n  --tw-pan-x: ;\n  --tw-pan-y: ;\n  --tw-pinch-zoom: ;\n  --tw-scroll-snap-strictness:proximity;\n  --tw-ordinal: ;\n  --tw-slashed-zero: ;\n  --tw-numeric-figure: ;\n  --tw-numeric-spacing: ;\n  --tw-numeric-fraction: ;\n  --tw-ring-inset: ;\n  --tw-ring-offset-width:0px;\n  --tw-ring-offset-color:#fff;\n  --tw-ring-color:rgba(59,130,246,.5);\n  --tw-ring-offset-shadow:0 0 #0000;\n  --tw-ring-shadow:0 0 #0000;\n  --tw-shadow:0 0 #0000;\n  --tw-shadow-colored:0 0 #0000;\n  --tw-blur: ;\n  --tw-brightness: ;\n  --tw-contrast: ;\n  --tw-grayscale: ;\n  --tw-hue-rotate: ;\n  --tw-invert: ;\n  --tw-saturate: ;\n  --tw-sepia: ;\n  --tw-drop-shadow: ;\n  --tw-backdrop-blur: ;\n  --tw-backdrop-brightness: ;\n  --tw-backdrop-contrast: ;\n  --tw-backdrop-grayscale: ;\n  --tw-backdrop-hue-rotate: ;\n  --tw-backdrop-invert: ;\n  --tw-backdrop-opacity: ;\n  --tw-backdrop-saturate: ;\n  --tw-backdrop-sepia: }\n\n::backdrop{\n  --tw-border-spacing-x:0;\n  --tw-border-spacing-y:0;\n  --tw-translate-x:0;\n  --tw-translate-y:0;\n  --tw-rotate:0;\n  --tw-skew-x:0;\n  --tw-skew-y:0;\n  --tw-scale-x:1;\n  --tw-scale-y:1;\n  --tw-pan-x: ;\n  --tw-pan-y: ;\n  --tw-pinch-zoom: ;\n  --tw-scroll-snap-strictness:proximity;\n  --tw-ordinal: ;\n  --tw-slashed-zero: ;\n  --tw-numeric-figure: ;\n  --tw-numeric-spacing: ;\n  --tw-numeric-fraction: ;\n  --tw-ring-inset: ;\n  --tw-ring-offset-width:0px;\n  --tw-ring-offset-color:#fff;\n  --tw-ring-color:rgba(59,130,246,.5);\n  --tw-ring-offset-shadow:0 0 #0000;\n  --tw-ring-shadow:0 0 #0000;\n  --tw-shadow:0 0 #0000;\n  --tw-shadow-colored:0 0 #0000;\n  --tw-blur: ;\n  --tw-brightness: ;\n  --tw-contrast: ;\n  --tw-grayscale: ;\n  --tw-hue-rotate: ;\n  --tw-invert: ;\n  --tw-saturate: ;\n  --tw-sepia: ;\n  --tw-drop-shadow: ;\n  --tw-backdrop-blur: ;\n  --tw-backdrop-brightness: ;\n  --tw-backdrop-contrast: ;\n  --tw-backdrop-grayscale: ;\n  --tw-backdrop-hue-rotate: ;\n  --tw-backdrop-invert: ;\n  --tw-backdrop-opacity: ;\n  --tw-backdrop-saturate: ;\n  --tw-backdrop-sepia: }.container{\n  width:100%}@media (min-width:640px){\n\n  .container{\n    max-width:640px}}@media (min-width:768px){\n\n  .container{\n    max-width:768px}}@media (min-width:1024px){\n\n  .container{\n    max-width:1024px}}@media (min-width:1280px){\n\n  .container{\n    max-width:1280px}}@media (min-width:1536px){\n\n  .container{\n    max-width:1536px}}.sr-only{\n  clip:rect(0,0,0,0);\n  border-width:0;\n  height:1px;\n  margin:-1px;\n  overflow:hidden;\n  padding:0;\n  position:absolute;\n  white-space:nowrap;\n  width:1px}.pointer-events-none{\n  pointer-events:none}.visible{\n  visibility:visible}.invisible{\n  visibility:hidden}.static{\n  position:static}.absolute{\n  position:absolute}.relative{\n  position:relative}.sticky{\n  position:sticky}.top-\\\\[10px\\\\]{\n  top:10px}.right-\\\\[10px\\\\]{\n  right:10px}.top-0{\n  top:0}.bottom-0{\n  bottom:0}.z-10{\n  z-index:10}.mb-2{\n  margin-bottom:.5rem}.mb-4{\n  margin-bottom:1rem}.mb-8{\n  margin-bottom:2rem}.ml-auto{\n  margin-left:auto}.mr-auto{\n  margin-right:auto}.ml-4{\n  margin-left:1rem}.mt-6{\n  margin-top:1.5rem}.mb-6{\n  margin-bottom:1.5rem}.mt-4{\n  margin-top:1rem}.ml-1{\n  margin-left:.25rem}.mr-1{\n  margin-right:.25rem}.mt-1{\n  margin-top:.25rem}.mb-1{\n  margin-bottom:.25rem}.ml-0{\n  margin-left:0}.mr-0{\n  margin-right:0}.mr-0\\\\.5{\n  margin-right:.125rem}.mt-2{\n  margin-top:.5rem}.ml-3{\n  margin-left:.75rem}.block{\n  display:block}.inline-block{\n  display:inline-block}.flex{\n  display:flex}.inline-flex{\n  display:inline-flex}.table{\n  display:table}.grid{\n  display:grid}.h-\\\\[65vh\\\\]{\n  height:65vh}.h-1{\n  height:.25rem}.h-full{\n  height:100%}.h-3{\n  height:.75rem}.h-9{\n  height:2.25rem}.h-5{\n  height:1.25rem}.h-8{\n  height:2rem}.h-7{\n  height:1.75rem}.h-\\\\[72px\\\\]{\n  height:72px}.h-6{\n  height:1.5rem}.h-\\\\[22px\\\\]{\n  height:22px}.max-h-80{\n  max-height:20rem}.min-h-\\\\[176px\\\\]{\n  min-height:176px}.min-h-\\\\[48px\\\\]{\n  min-height:48px}.w-full{\n  width:100%}.w-1{\n  width:.25rem}.w-14{\n  width:3.5rem}.w-96{\n  width:24rem}.w-40{\n  width:10rem}.w-8{\n  width:2rem}.w-7{\n  width:1.75rem}.w-\\\\[126px\\\\]{\n  width:126px}.w-6{\n  width:1.5rem}.w-\\\\[22px\\\\]{\n  width:22px}.w-3{\n  width:.75rem}.w-44{\n  width:11rem}.w-\\\\[16px\\\\]{\n  width:16px}.w-\\\\[24px\\\\]{\n  width:24px}.min-w-full{\n  min-width:100%}.min-w-min{\n  min-width:-moz-min-content;\n  min-width:min-content}.min-w-\\\\[140px\\\\]{\n  min-width:140px}.max-w-7xl{\n  max-width:80rem}.max-w-\\\\[126px\\\\]{\n  max-width:126px}@keyframes fadein{\n\n  0%{\n    opacity:0}\n\n  to{\n    opacity:1}}.animate-fadein{\n  animation:fadein .8s ease}@keyframes bounce{\n\n  0%,to{\n    animation-timing-function:cubic-bezier(.8,0,1,1);\n    transform:translateY(-25%)}\n\n  50%{\n    animation-timing-function:cubic-bezier(0,0,.2,1);\n    transform:none}}.animate-bounce{\n  animation:bounce 1s infinite}@keyframes shimmer{\n\n  0%,to{\n    opacity:1}\n\n  50%{\n    opacity:.5}}.animate-shimmer{\n  animation:shimmer 2s cubic-bezier(.4,0,.6,1) infinite}.cursor-pointer{\n  cursor:pointer}.cursor-not-allowed{\n  cursor:not-allowed}.list-disc{\n  list-style-type:disc}.grid-flow-col{\n  grid-auto-flow:column}.grid-cols-searchResult{\n  grid-template-columns:32px 2fr 0fr}.flex-col{\n  flex-direction:column}.flex-wrap{\n  flex-wrap:wrap}.items-start{\n  align-items:flex-start}.items-end{\n  align-items:flex-end}.items-center{\n  align-items:center}.justify-end{\n  justify-content:flex-end}.justify-center{\n  justify-content:center}.justify-between{\n  justify-content:space-between}.justify-around{\n  justify-content:space-around}.gap-2{\n  gap:.5rem}.space-x-1>:not([hidden])~:not([hidden]){\n  --tw-space-x-reverse:0;\n  margin-left:calc(.25rem*(1 - var(--tw-space-x-reverse)));\n  margin-right:calc(.25rem*var(--tw-space-x-reverse))}.space-x-2>:not([hidden])~:not([hidden]){\n  --tw-space-x-reverse:0;\n  margin-left:calc(.5rem*(1 - var(--tw-space-x-reverse)));\n  margin-right:calc(.5rem*var(--tw-space-x-reverse))}.space-y-2>:not([hidden])~:not([hidden]){\n  --tw-space-y-reverse:0;\n  margin-bottom:calc(.5rem*var(--tw-space-y-reverse));\n  margin-top:calc(.5rem*(1 - var(--tw-space-y-reverse)))}.space-x-3>:not([hidden])~:not([hidden]){\n  --tw-space-x-reverse:0;\n  margin-left:calc(.75rem*(1 - var(--tw-space-x-reverse)));\n  margin-right:calc(.75rem*var(--tw-space-x-reverse))}.space-x-4>:not([hidden])~:not([hidden]){\n  --tw-space-x-reverse:0;\n  margin-left:calc(1rem*(1 - var(--tw-space-x-reverse)));\n  margin-right:calc(1rem*var(--tw-space-x-reverse))}.overflow-auto{\n  overflow:auto}.rounded{\n  border-radius:.25rem}.rounded-full{\n  border-radius:9999px}.rounded-lg{\n  border-radius:.5rem}.rounded-\\\\[50\\\\%\\\\]{\n  border-radius:50%}.rounded-none{\n  border-radius:0}.border-0{\n  border-width:0}.border-t-\\\\[1px\\\\]{\n  border-top-width:1px}.border-l-2{\n  border-left-width:2px}.border-b{\n  border-bottom-width:1px}.border-t{\n  border-top-width:1px}.border-red-500{\n  --tw-border-opacity:1;\n  border-color:rgb(239 68 68/var(--tw-border-opacity))}.border-gray-400{\n  --tw-border-opacity:1;\n  border-color:rgb(156 163 175/var(--tw-border-opacity))}.border-l-red-600{\n  --tw-border-opacity:1;\n  border-left-color:rgb(220 38 38/var(--tw-border-opacity))}.border-opacity-25{\n  --tw-border-opacity:0.25}.bg-primary{\n  background-color:var(--pnpsearch-internal-colorPrimary,#7c4dff)}.bg-slate-200{\n  --tw-bg-opacity:1;\n  background-color:rgb(226 232 240/var(--tw-bg-opacity))}.bg-\\\\[var\\\\(--gray200\\\\)\\\\]{\n  background-color:var(--gray200)}.bg-transparent{\n  background-color:transparent}.bg-white{\n  --tw-bg-opacity:1;\n  background-color:rgb(255 255 255/var(--tw-bg-opacity))}.bg-black\\\\/\\\\[0\\\\.02\\\\]{\n  background-color:rgba(0,0,0,.02)}.bg-opacity-60{\n  --tw-bg-opacity:0.6}.bg-gradient-to-r{\n  background-image:linear-gradient(to right,var(--tw-gradient-stops))}.bg-cover{\n  background-size:cover}.bg-clip-text{-webkit-background-clip:text;background-clip:text}.bg-center{\n  background-position:50%}.fill-current{\n  fill:currentColor}.object-cover{-o-object-fit:cover;object-fit:cover}.p-2{\n  padding:.5rem}.p-1{\n  padding:.25rem}.p-4{\n  padding:1rem}.p-8{\n  padding:2rem}.p-5{\n  padding:1.25rem}.p-0{\n  padding:0}.px-2\\\\.5{\n  padding-left:.625rem;\n  padding-right:.625rem}.px-2{\n  padding-left:.5rem;\n  padding-right:.5rem}.px-4{\n  padding-left:1rem;\n  padding-right:1rem}.py-\\\\[18px\\\\]{\n  padding-bottom:18px;\n  padding-top:18px}.px-3{\n  padding-left:.75rem;\n  padding-right:.75rem}.py-1{\n  padding-bottom:.25rem;\n  padding-top:.25rem}.px-6{\n  padding-left:1.5rem;\n  padding-right:1.5rem}.py-3{\n  padding-bottom:.75rem;\n  padding-top:.75rem}.py-2{\n  padding-bottom:.5rem;\n  padding-top:.5rem}.pl-8{\n  padding-left:2rem}.pt-12{\n  padding-top:3rem}.pb-14{\n  padding-bottom:3.5rem}.pt-2{\n  padding-top:.5rem}.pb-2{\n  padding-bottom:.5rem}.pt-\\\\[3px\\\\]{\n  padding-top:3px}.pb-8{\n  padding-bottom:2rem}.pl-3{\n  padding-left:.75rem}.font-primary{\n  font-family:var(--pnpsearch-internal-fontFamilyPrimary),\"Segoe  UI\",\"Arial, sans-serif\"}.font-sans{\n  font-family:var(--pnpsearch-internal-fontFamilySecondary),Roboto,ui-sans-serif,system-ui,-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,\"Noto Sans\",sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\",\"Noto Color Emoji\"}.text-sm{\n  font-size:.875rem;\n  line-height:1.25rem}.text-3xl{\n  font-size:1.875rem;\n  line-height:2.25rem}.text-xl{\n  font-size:1.25rem;\n  line-height:1.75rem}.text-base{\n  font-size:1rem;\n  line-height:1.5rem}.font-bold{\n  font-weight:700}.font-normal{\n  font-weight:400}.font-semibold{\n  font-weight:600}.font-medium{\n  font-weight:500}.text-primary{\n  color:var(--pnpsearch-internal-colorPrimary,#7c4dff)}.text-textColor{\n  color:var(--pnpsearch-internal-textColor,#1e252b)}.text-transparent{\n  color:transparent}.text-white{\n  --tw-text-opacity:1;\n  color:rgb(255 255 255/var(--tw-text-opacity))}.text-black{\n  --tw-text-opacity:1;\n  color:rgb(0 0 0/var(--tw-text-opacity))}.text-textColorDark{\n  color:var(--pnpsearch-internal-textColorDark,#fff)}.opacity-75{\n  opacity:.75}.opacity-\\\\[0\\\\.20\\\\]{\n  opacity:.2}.opacity-25{\n  opacity:.25}.opacity-50{\n  opacity:.5}.outline-none{\n  outline:2px solid transparent;\n  outline-offset:2px}.outline{\n  outline-style:solid}.blur{\n  --tw-blur:blur(8px)}.blur,.filter{\n  filter:var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow)}.transition{\n  transition-duration:.15s;\n  transition-property:color,background-color,border-color,text-decoration-color,fill,stroke,opacity,box-shadow,transform,filter,-webkit-backdrop-filter;\n  transition-property:color,background-color,border-color,text-decoration-color,fill,stroke,opacity,box-shadow,transform,filter,backdrop-filter;\n  transition-property:color,background-color,border-color,text-decoration-color,fill,stroke,opacity,box-shadow,transform,filter,backdrop-filter,-webkit-backdrop-filter;\n  transition-timing-function:cubic-bezier(.4,0,.2,1)}.transition-all{\n  transition-duration:.15s;\n  transition-property:all;\n  transition-timing-function:cubic-bezier(.4,0,.2,1)}.selection\\\\:tracking-\\\\[0\\\\.0012em\\\\] ::-moz-selection{\n  letter-spacing:.0012em}.selection\\\\:tracking-\\\\[0\\\\.0012em\\\\] ::selection{\n  letter-spacing:.0012em}.selection\\\\:tracking-\\\\[0\\\\.0012em\\\\]::-moz-selection{\n  letter-spacing:.0012em}.selection\\\\:tracking-\\\\[0\\\\.0012em\\\\]::selection{\n  letter-spacing:.0012em}.last\\\\:p-0:last-child{\n  padding:0}.hover\\\\:rounded-lg:hover{\n  border-radius:.5rem}.hover\\\\:bg-black\\\\/\\\\[0\\\\.02\\\\]:hover{\n  background-color:rgba(0,0,0,.02)}.hover\\\\:text-primary:hover{\n  color:var(--pnpsearch-internal-colorPrimary,#7c4dff)}.hover\\\\:text-primaryHover:hover{\n  color:var(--pnpsearch-internal-colorPrimaryHover,#651fff)}.hover\\\\:underline:hover{\n  text-decoration-line:underline}.focus\\\\:shadow-none:focus{\n  --tw-shadow:0 0 #0000;\n  --tw-shadow-colored:0 0 #0000;\n  box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.focus\\\\:outline:focus{\n  outline-style:solid}.focus\\\\:outline-2:focus{\n  outline-width:2px}.focus\\\\:ring-transparent:focus{\n  --tw-ring-color:transparent}.focus\\\\:ring-offset-0:focus{\n  --tw-ring-offset-width:0px}.focus\\\\:ring-offset-inherit:focus{\n  --tw-ring-offset-color:inherit}.focus-visible\\\\:outline:focus-visible{\n  outline-style:solid}.focus-visible\\\\:outline-2:focus-visible{\n  outline-width:2px}.aria-selected\\\\:font-bold[aria-selected=true]{\n  font-weight:700}.dark .dark\\\\:bg-primaryBackgroundColorDark{\n  background-color:var(--pnpsearch-internal-colorBackgroundDarkPrimary,#202831)}.dark .dark\\\\:bg-opacity-0{\n  --tw-bg-opacity:0}.dark .dark\\\\:fill-textColorDark{\n  fill:var(--pnpsearch-internal-textColorDark,#fff)}.dark .dark\\\\:text-textColorDark{\n  color:var(--pnpsearch-internal-textColorDark,#fff)}.dark .dark\\\\:text-textColor{\n  color:var(--pnpsearch-internal-textColor,#1e252b)}.dark .dark\\\\:placeholder-textColorDark::-moz-placeholder{\n  color:var(--pnpsearch-internal-textColorDark,#fff)}.dark .dark\\\\:placeholder-textColorDark::placeholder{\n  color:var(--pnpsearch-internal-textColorDark,#fff)}.dark .dark\\\\:placeholder-opacity-50::-moz-placeholder{\n  --tw-placeholder-opacity:0.5}.dark .dark\\\\:placeholder-opacity-50::placeholder{\n  --tw-placeholder-opacity:0.5}.dark .dark\\\\:opacity-\\\\[1\\\\]{\n  opacity:1}.dark .dark\\\\:hover\\\\:text-black:hover{\n  --tw-text-opacity:1;\n  color:rgb(0 0 0/var(--tw-text-opacity))}.dark .dark\\\\:active\\\\:text-textColor:active,.dark .dark\\\\:hover\\\\:aria-selected\\\\:text-textColor[aria-selected=true]:hover,.dark .dark\\\\:hover\\\\:text-textColor:hover{\n  color:var(--pnpsearch-internal-textColor,#1e252b)}  \n`]",
          "description": "exports lit-element css"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "styles",
          "declaration": {
            "name": "styles",
            "module": "src/styles/tailwind-styles-css.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/styles/tailwind-styles.module.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "styles",
          "type": {
            "text": "CSSResult[]"
          },
          "default": "[\r\n  css`\r\n    @tailwind base;\r\n    @tailwind components;\r\n    @tailwind utilities;\r\n    @tailwind screens;  \r\n`]",
          "description": "exports lit-element css"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "styles",
          "declaration": {
            "name": "styles",
            "module": "src/styles/tailwind-styles.module.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/exports/define/pnp-adaptive-card.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "custom-element-definition",
          "declaration": {
            "name": "AdaptiveCardComponent",
            "module": "/src/components/adaptive-card/AdaptiveCardComponent"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/exports/define/pnp-checkbox-filter.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "custom-element-definition",
          "declaration": {
            "name": "CheckboxFilterComponent",
            "module": "/src/components/search-filters/sub-components/filters/checkbox-filter/CheckboxFilterComponent"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/exports/define/pnp-date-filter.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "custom-element-definition",
          "declaration": {
            "name": "DateFilterComponent",
            "module": "/src/components/search-filters/sub-components/filters/date-filter/DateFilterComponent"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/exports/define/pnp-error-message.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "custom-element-definition",
          "declaration": {
            "name": "ErrorMessageComponent",
            "module": "/src/components/search-results/sub-components/error-message/ErrorMessageComponent"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/exports/define/pnp-language-provider.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "custom-element-definition",
          "declaration": {
            "name": "LanguageProviderComponent",
            "module": "/src/components/language-provider/LanguageProviderComponent"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/exports/define/pnp-pagination.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "custom-element-definition",
          "declaration": {
            "name": "PaginationComponent",
            "module": "/src/components/search-results/sub-components/pagination/PaginationComponent"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/exports/define/pnp-search-filters.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "custom-element-definition",
          "declaration": {
            "name": "SearchFiltersComponent",
            "module": "/src/components/search-filters/SearchFiltersComponent"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/exports/define/pnp-search-infos.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "custom-element-definition",
          "declaration": {
            "name": "SearchInfosComponents",
            "module": "/src/components/search-infos/SearchInfosComponents"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/exports/define/pnp-search-input.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "custom-element-definition",
          "declaration": {
            "name": "SearchInputComponent",
            "module": "/src/components/search-input/SearchInputComponent"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/exports/define/pnp-search-results.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "custom-element-definition",
          "declaration": {
            "name": "SearchResultsComponent",
            "module": "/src/components/search-results/SearchResultsComponent"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/exports/define/pnp-search-sort.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "custom-element-definition",
          "declaration": {
            "name": "SearchSortComponent",
            "module": "/src/components/search-filters/sub-components/search-sort/SearchSortComponent"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/exports/define/pnp-search-verticals.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "custom-element-definition",
          "declaration": {
            "name": "SearchVerticalsComponent",
            "module": "/src/components/search-verticals/SearchVerticalsComponent"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/exports/define/pnp-video-player.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "custom-element-definition",
          "declaration": {
            "name": "VideoPlayerComponent",
            "module": "/src/components/video-player/VideoPlayerComponent"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/models/common/BuiltinTemplate.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/models/common/IComponentBinding.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/models/common/IDataFilter.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/models/common/IDataFilterConfiguration.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/models/common/IDataSourceData.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/models/common/IDataVertical.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/models/common/IDataVerticalConfiguration.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/models/common/IGraphBatch.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "BATCH_SIZE_LIMIT",
          "type": {
            "text": "number"
          },
          "default": "20"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BATCH_SIZE_LIMIT",
          "declaration": {
            "name": "BATCH_SIZE_LIMIT",
            "module": "src/models/common/IGraphBatch.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/models/common/ILocalizedString.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/models/common/ISearchedItem.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/models/common/ISortFieldConfiguration.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/models/common/IThemeDefinition.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/models/events/EventType.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/models/events/ISearchFiltersEventData.ts.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/models/events/ISearchInputEventData.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/models/events/ISearchResultsEventData.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/models/events/ISearchSortEventData.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/models/events/ISearchVerticalEventData.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ISearchVerticalEventData",
          "members": [
            {
              "kind": "field",
              "name": "selectedVertical",
              "type": {
                "text": "IDataVertical"
              },
              "description": "Current selected vertical key"
            },
            {
              "kind": "field",
              "name": "eventType",
              "type": {
                "text": "ComponentEventType"
              },
              "description": "Type of this event"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ISearchVerticalEventData",
          "declaration": {
            "name": "ISearchVerticalEventData",
            "module": "src/models/events/ISearchVerticalEventData.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/models/search/IMicrosoftSearchDataSourceData.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/models/search/IMicrosoftSearchRequest.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/models/search/IMicrosoftSearchResponse.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/models/search/IResultTemplates.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/adaptive-card/AdaptiveCardComponent.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Process adaptive card content from an external file",
          "name": "AdaptiveCardComponent",
          "members": [
            {
              "kind": "field",
              "name": "fileUrl",
              "type": {
                "text": "string"
              },
              "description": "The file URL to fetch",
              "attribute": "url"
            },
            {
              "kind": "field",
              "name": "fileFormat",
              "type": {
                "text": "FileFormat"
              },
              "description": "The file format to load",
              "attribute": "format"
            },
            {
              "kind": "field",
              "name": "fallbackImageUrl",
              "type": {
                "text": "string"
              },
              "description": "The fallback image URL",
              "attribute": "fallback-img-url"
            },
            {
              "kind": "field",
              "name": "cardContext",
              "type": {
                "text": "object"
              },
              "description": "The data context to use to render the card",
              "attribute": "context"
            },
            {
              "kind": "field",
              "name": "cardContent",
              "type": {
                "text": "string"
              },
              "description": "The raw adaptive card content as string (i.e. JSON stringified)",
              "attribute": "content"
            },
            {
              "kind": "field",
              "name": "content",
              "type": {
                "text": "HTMLElement"
              },
              "description": "The file content to display\r\nIMPORTANT: This must be an HTMLElement instead of a string to be able to render event listeners added dynamically by the adaptivecards library (ex: play videos)."
            },
            {
              "kind": "method",
              "name": "_processAdaptiveCard",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "theme",
              "attribute": "theme",
              "reflects": true,
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "enableDebugMode",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Enable the debug to explore data from context",
              "attribute": "enable-debug",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "renderedOnce",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Flag indicating if data have been rendered at least once",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "showDebugData",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "isInitialized",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Property indicating the component has finished its initialization squence, for instance setting default values than can be read from other component\r\nThis property is set as reflected attribute to be able to trigger a mutation for consumer components",
              "attribute": "initialized",
              "reflects": true,
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "_eventHanlders",
              "type": {
                "text": "Map<string, {component: HTMLElement, event: string, handler: EventHandler<any>}>"
              },
              "privacy": "public",
              "default": "new Map<string, {component: HTMLElement, event: string, handler: EventHandler<any>}>()",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "componentError",
              "type": {
                "text": "Error"
              },
              "privacy": "public",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "scopedElements",
              "static": true,
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "themeStyles",
              "static": true,
              "description": "Returns styles from theme (i.e. define CSS variables)",
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderDebugMode",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderDebugData",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "any"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "toggleDebugData",
              "privacy": "private",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "bindComponents",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "parameters": [
                {
                  "name": "bindings",
                  "type": {
                    "text": "IComponentBinding[]"
                  },
                  "description": "the bindings to perform"
                }
              ],
              "description": "Binds all connected to the current one by listening all required events.\r\nThe method will wait for the component to be present on the page after a predefined timeout (default 5000ms)",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "unbindComponents",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "bindings",
                  "type": {
                    "text": "IComponentBinding[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "getTheme",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "description": "Get CSS variables values for the component predefined variables",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "getLocalizedString",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "string",
                  "type": {
                    "text": "ILocalizedString | string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "setFASTColors",
              "privacy": "private",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasPropertyUpdated",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "changedProperties",
                  "type": {
                    "text": "PropertyValueMap<any>"
                  }
                },
                {
                  "name": "propertyName",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "fireCustomEvent",
              "return": {
                "type": {
                  "text": "*"
                }
              },
              "parameters": [
                {
                  "name": "eventName",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "detail",
                  "optional": true,
                  "type": {
                    "text": "*"
                  }
                },
                {
                  "name": "bubbles",
                  "default": "false",
                  "optional": true,
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "name": "cancelable",
                  "default": "false",
                  "optional": true,
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "name": "composed",
                  "default": "false",
                  "optional": true,
                  "type": {
                    "text": "boolean"
                  }
                }
              ],
              "description": "Override of default method to support 'composed' flag",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "timeoutPromise",
              "privacy": "private",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "promise",
                  "type": {
                    "text": "Promise<unknown>"
                  },
                  "description": "the promise to timeout"
                },
                {
                  "name": "timeout",
                  "type": {
                    "text": "number"
                  },
                  "description": "the timeout delay"
                },
                {
                  "name": "exception",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "the exception raised if any error occures"
                }
              ],
              "description": "Allows a promise to be timeout \r\nhttps://advancedweb.hu/how-to-add-timeout-to-a-promise-in-javascript/",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "waitForElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "binding",
                  "type": {
                    "text": "IComponentBinding"
                  },
                  "description": "the binding detail"
                },
                {
                  "name": "timeout",
                  "optional": true,
                  "type": {
                    "text": "number"
                  }
                }
              ],
              "description": "Waits for a component to be present on the page and initialized to perform event binding",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            }
          ],
          "attributes": [
            {
              "name": "url",
              "type": {
                "text": "string"
              },
              "description": "The file URL to fetch",
              "fieldName": "fileUrl"
            },
            {
              "name": "format",
              "type": {
                "text": "FileFormat"
              },
              "description": "The file format to load",
              "fieldName": "fileFormat"
            },
            {
              "name": "fallback-img-url",
              "type": {
                "text": "string"
              },
              "description": "The fallback image URL",
              "fieldName": "fallbackImageUrl"
            },
            {
              "name": "context",
              "type": {
                "text": "object"
              },
              "description": "The data context to use to render the card",
              "fieldName": "cardContext"
            },
            {
              "name": "content",
              "type": {
                "text": "string"
              },
              "description": "The raw adaptive card content as string (i.e. JSON stringified)",
              "fieldName": "cardContent"
            },
            {
              "name": "theme",
              "fieldName": "theme",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "name": "enable-debug",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Enable the debug to explore data from context",
              "fieldName": "enableDebugMode",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "name": "initialized",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Property indicating the component has finished its initialization squence, for instance setting default values than can be read from other component\r\nThis property is set as reflected attribute to be able to trigger a mutation for consumer components",
              "fieldName": "isInitialized",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            }
          ],
          "superclass": {
            "name": "BaseComponent",
            "module": "/src/components/BaseComponent"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AdaptiveCardComponent",
          "declaration": {
            "name": "AdaptiveCardComponent",
            "module": "src/components/adaptive-card/AdaptiveCardComponent.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/language-provider/LanguageProvider.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "LanguageProvider",
          "members": [
            {
              "kind": "field",
              "name": "dateHelper",
              "type": {
                "text": "DateHelper"
              },
              "privacy": "private",
              "default": "new DateHelper()"
            },
            {
              "kind": "method",
              "name": "setLanguage",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "parameters": [
                {
                  "name": "locale",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "LanguageProvider",
          "declaration": {
            "name": "LanguageProvider",
            "module": "src/components/language-provider/LanguageProvider.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/language-provider/LanguageProviderComponent.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "LanguageProviderComponent",
          "members": [
            {
              "kind": "field",
              "name": "defaultLocale",
              "type": {
                "text": "string"
              },
              "description": "The default locale to use for components on the page",
              "attribute": "locale",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "showLanguagePicker",
              "type": {
                "text": "boolean"
              },
              "description": "Use this property for testing purpose to select a specific locale",
              "attribute": "show-picker"
            },
            {
              "kind": "field",
              "name": "languageProvider",
              "type": {
                "text": "LanguageProvider"
              },
              "default": "new LanguageProvider()"
            },
            {
              "kind": "method",
              "name": "_onSelectLanguage",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "theme",
              "attribute": "theme",
              "reflects": true,
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "enableDebugMode",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Enable the debug to explore data from context",
              "attribute": "enable-debug",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "renderedOnce",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Flag indicating if data have been rendered at least once",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "showDebugData",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "isInitialized",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Property indicating the component has finished its initialization squence, for instance setting default values than can be read from other component\r\nThis property is set as reflected attribute to be able to trigger a mutation for consumer components",
              "attribute": "initialized",
              "reflects": true,
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "_eventHanlders",
              "type": {
                "text": "Map<string, {component: HTMLElement, event: string, handler: EventHandler<any>}>"
              },
              "privacy": "public",
              "default": "new Map<string, {component: HTMLElement, event: string, handler: EventHandler<any>}>()",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "componentError",
              "type": {
                "text": "Error"
              },
              "privacy": "public",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "scopedElements",
              "static": true,
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "themeStyles",
              "static": true,
              "description": "Returns styles from theme (i.e. define CSS variables)",
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderDebugMode",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderDebugData",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "any"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "toggleDebugData",
              "privacy": "private",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "bindComponents",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "parameters": [
                {
                  "name": "bindings",
                  "type": {
                    "text": "IComponentBinding[]"
                  },
                  "description": "the bindings to perform"
                }
              ],
              "description": "Binds all connected to the current one by listening all required events.\r\nThe method will wait for the component to be present on the page after a predefined timeout (default 5000ms)",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "unbindComponents",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "bindings",
                  "type": {
                    "text": "IComponentBinding[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "getTheme",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "description": "Get CSS variables values for the component predefined variables",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "getLocalizedString",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "string",
                  "type": {
                    "text": "ILocalizedString | string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "setFASTColors",
              "privacy": "private",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasPropertyUpdated",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "changedProperties",
                  "type": {
                    "text": "PropertyValueMap<any>"
                  }
                },
                {
                  "name": "propertyName",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "fireCustomEvent",
              "return": {
                "type": {
                  "text": "*"
                }
              },
              "parameters": [
                {
                  "name": "eventName",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "detail",
                  "optional": true,
                  "type": {
                    "text": "*"
                  }
                },
                {
                  "name": "bubbles",
                  "default": "false",
                  "optional": true,
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "name": "cancelable",
                  "default": "false",
                  "optional": true,
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "name": "composed",
                  "default": "false",
                  "optional": true,
                  "type": {
                    "text": "boolean"
                  }
                }
              ],
              "description": "Override of default method to support 'composed' flag",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "timeoutPromise",
              "privacy": "private",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "promise",
                  "type": {
                    "text": "Promise<unknown>"
                  },
                  "description": "the promise to timeout"
                },
                {
                  "name": "timeout",
                  "type": {
                    "text": "number"
                  },
                  "description": "the timeout delay"
                },
                {
                  "name": "exception",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "the exception raised if any error occures"
                }
              ],
              "description": "Allows a promise to be timeout \r\nhttps://advancedweb.hu/how-to-add-timeout-to-a-promise-in-javascript/",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "waitForElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "binding",
                  "type": {
                    "text": "IComponentBinding"
                  },
                  "description": "the binding detail"
                },
                {
                  "name": "timeout",
                  "optional": true,
                  "type": {
                    "text": "number"
                  }
                }
              ],
              "description": "Waits for a component to be present on the page and initialized to perform event binding",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            }
          ],
          "attributes": [
            {
              "name": "locale",
              "type": {
                "text": "string"
              },
              "description": "The default locale to use for components on the page",
              "fieldName": "defaultLocale"
            },
            {
              "name": "show-picker",
              "type": {
                "text": "boolean"
              },
              "description": "Use this property for testing purpose to select a specific locale",
              "fieldName": "showLanguagePicker"
            },
            {
              "name": "theme",
              "fieldName": "theme",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "name": "enable-debug",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Enable the debug to explore data from context",
              "fieldName": "enableDebugMode",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "name": "initialized",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Property indicating the component has finished its initialization squence, for instance setting default values than can be read from other component\r\nThis property is set as reflected attribute to be able to trigger a mutation for consumer components",
              "fieldName": "isInitialized",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            }
          ],
          "superclass": {
            "name": "BaseComponent",
            "module": "/src/components/BaseComponent"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "LanguageProviderComponent",
          "declaration": {
            "name": "LanguageProviderComponent",
            "module": "src/components/language-provider/LanguageProviderComponent.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/monaco-editor/MonacoEditorComponent.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "MonacoEditorComponent",
          "members": [
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "IDataSourceData"
              },
              "attribute": "value"
            },
            {
              "kind": "field",
              "name": "editor",
              "type": {
                "text": "editor.IStandaloneCodeEditor"
              },
              "default": "null"
            },
            {
              "kind": "method",
              "name": "createEditor",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "theme",
              "attribute": "theme",
              "reflects": true,
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "enableDebugMode",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Enable the debug to explore data from context",
              "attribute": "enable-debug",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "renderedOnce",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Flag indicating if data have been rendered at least once",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "showDebugData",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "isInitialized",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Property indicating the component has finished its initialization squence, for instance setting default values than can be read from other component\r\nThis property is set as reflected attribute to be able to trigger a mutation for consumer components",
              "attribute": "initialized",
              "reflects": true,
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "_eventHanlders",
              "type": {
                "text": "Map<string, {component: HTMLElement, event: string, handler: EventHandler<any>}>"
              },
              "privacy": "public",
              "default": "new Map<string, {component: HTMLElement, event: string, handler: EventHandler<any>}>()",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "componentError",
              "type": {
                "text": "Error"
              },
              "privacy": "public",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "scopedElements",
              "static": true,
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "themeStyles",
              "static": true,
              "description": "Returns styles from theme (i.e. define CSS variables)",
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderDebugMode",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderDebugData",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "any"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "toggleDebugData",
              "privacy": "private",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "bindComponents",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "parameters": [
                {
                  "name": "bindings",
                  "type": {
                    "text": "IComponentBinding[]"
                  },
                  "description": "the bindings to perform"
                }
              ],
              "description": "Binds all connected to the current one by listening all required events.\r\nThe method will wait for the component to be present on the page after a predefined timeout (default 5000ms)",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "unbindComponents",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "bindings",
                  "type": {
                    "text": "IComponentBinding[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "getTheme",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "description": "Get CSS variables values for the component predefined variables",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "getLocalizedString",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "string",
                  "type": {
                    "text": "ILocalizedString | string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "setFASTColors",
              "privacy": "private",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasPropertyUpdated",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "changedProperties",
                  "type": {
                    "text": "PropertyValueMap<any>"
                  }
                },
                {
                  "name": "propertyName",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "fireCustomEvent",
              "return": {
                "type": {
                  "text": "*"
                }
              },
              "parameters": [
                {
                  "name": "eventName",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "detail",
                  "optional": true,
                  "type": {
                    "text": "*"
                  }
                },
                {
                  "name": "bubbles",
                  "default": "false",
                  "optional": true,
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "name": "cancelable",
                  "default": "false",
                  "optional": true,
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "name": "composed",
                  "default": "false",
                  "optional": true,
                  "type": {
                    "text": "boolean"
                  }
                }
              ],
              "description": "Override of default method to support 'composed' flag",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "timeoutPromise",
              "privacy": "private",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "promise",
                  "type": {
                    "text": "Promise<unknown>"
                  },
                  "description": "the promise to timeout"
                },
                {
                  "name": "timeout",
                  "type": {
                    "text": "number"
                  },
                  "description": "the timeout delay"
                },
                {
                  "name": "exception",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "the exception raised if any error occures"
                }
              ],
              "description": "Allows a promise to be timeout \r\nhttps://advancedweb.hu/how-to-add-timeout-to-a-promise-in-javascript/",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "waitForElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "binding",
                  "type": {
                    "text": "IComponentBinding"
                  },
                  "description": "the binding detail"
                },
                {
                  "name": "timeout",
                  "optional": true,
                  "type": {
                    "text": "number"
                  }
                }
              ],
              "description": "Waits for a component to be present on the page and initialized to perform event binding",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            }
          ],
          "attributes": [
            {
              "name": "value",
              "type": {
                "text": "IDataSourceData"
              },
              "fieldName": "value"
            },
            {
              "name": "theme",
              "fieldName": "theme",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "name": "enable-debug",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Enable the debug to explore data from context",
              "fieldName": "enableDebugMode",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "name": "initialized",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Property indicating the component has finished its initialization squence, for instance setting default values than can be read from other component\r\nThis property is set as reflected attribute to be able to trigger a mutation for consumer components",
              "fieldName": "isInitialized",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            }
          ],
          "superclass": {
            "name": "BaseComponent",
            "module": "/src/components/BaseComponent"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "MonacoEditorComponent",
          "declaration": {
            "name": "MonacoEditorComponent",
            "module": "src/components/monaco-editor/MonacoEditorComponent.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/search-filters/SearchFiltersComponent.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "SearchFiltersComponent",
          "members": [
            {
              "kind": "field",
              "name": "searchResultsComponentIds",
              "type": {
                "text": "string[]"
              },
              "default": "[]",
              "description": "The connected search results component ids",
              "attribute": "search-results-ids"
            },
            {
              "kind": "field",
              "name": "searchVerticalsComponentId",
              "type": {
                "text": "string"
              },
              "description": "The search verticals component ID if connected to a search verticals",
              "attribute": "search-verticals-id",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "filterConfiguration",
              "type": {
                "text": "IDataFilterConfiguration[]"
              },
              "default": "[]",
              "description": "The filters configration",
              "attribute": "settings"
            },
            {
              "kind": "field",
              "name": "operator",
              "type": {
                "text": "FilterConditionOperator"
              },
              "description": "The default logical operator to use between filters",
              "attribute": "operator"
            },
            {
              "kind": "field",
              "name": "availableFilters",
              "type": {
                "text": "IDataFilterResult[]"
              },
              "default": "[]",
              "description": "Available filters received from connected search results component"
            },
            {
              "kind": "field",
              "name": "allSelectedFilters",
              "type": {
                "text": "IDataFilter[]"
              },
              "default": "[]",
              "description": "All selected values from all filters combined (not necessarily submitted)"
            },
            {
              "kind": "field",
              "name": "selectedVertical",
              "type": {
                "text": "IDataVertical"
              }
            },
            {
              "kind": "field",
              "name": "disabledFilters",
              "type": {
                "text": "string[]"
              },
              "privacy": "private",
              "description": "The list of disabled filters",
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "allSubmittedFilters",
              "type": {
                "text": "IDataFilter[]"
              },
              "privacy": "public",
              "description": "All submitted values from all filters combined",
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "previousAvailableFilters",
              "type": {
                "text": "IDataFilterResult[]"
              },
              "privacy": "private",
              "description": "The previous applied filters"
            },
            {
              "kind": "field",
              "name": "submittedQueryText",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "description": "The current query submitted"
            },
            {
              "kind": "field",
              "name": "searchResultsEventData",
              "type": {
                "text": "ISearchResultsEventData"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "scopedElements",
              "static": true,
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "strings",
              "type": {
                "text": "{ [x: string]: string; }"
              },
              "privacy": "protected",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "handleSearchResultsFilters",
              "privacy": "public",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CustomEvent<ISearchResultsEventData>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleSearchVertical",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CustomEvent<ISearchVerticalEventData>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "initVerticalSelectedKeys",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "onFilterUpdated",
              "privacy": "private",
              "parameters": [
                {
                  "name": "filterName",
                  "type": {
                    "text": "string"
                  },
                  "description": "the filter name from where values has been applied"
                },
                {
                  "name": "filterValue",
                  "type": {
                    "text": "IDataFilterValue"
                  },
                  "description": "the filter value that has been updated"
                },
                {
                  "name": "selected",
                  "type": {
                    "text": "boolean"
                  }
                }
              ],
              "description": "Handler when a value is updated (selected/unselected)from a specific filter"
            },
            {
              "kind": "method",
              "name": "onApplyFilters",
              "privacy": "private",
              "parameters": [
                {
                  "name": "filterName",
                  "type": {
                    "text": "string"
                  },
                  "description": "the filter name from where values has been applied"
                }
              ],
              "description": "Handler when values are applied from a specific filter"
            },
            {
              "kind": "method",
              "name": "onSort",
              "privacy": "private",
              "parameters": [
                {
                  "name": "sortProperties",
                  "type": {
                    "text": "ISearchSortProperty[]"
                  },
                  "description": "the sort properties"
                }
              ],
              "description": "Handler when sort properties are updated"
            },
            {
              "kind": "method",
              "name": "applyFilters",
              "privacy": "private",
              "description": "Send filters to connected search results component"
            },
            {
              "kind": "method",
              "name": "getFilterConfiguration",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "IDataFilterConfiguration"
                }
              },
              "parameters": [
                {
                  "name": "filterName",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "mergeFilters",
              "privacy": "private",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "availableFilters",
                  "type": {
                    "text": "IDataFilterResult[]"
                  },
                  "description": "the available filters returned from the search response"
                }
              ],
              "description": "Merges filter values having the same filter name"
            },
            {
              "kind": "method",
              "name": "clearAllSelectedValues",
              "privacy": "public",
              "parameters": [
                {
                  "name": "preventApply",
                  "optional": true,
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getFilterComponents",
              "privacy": "private",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "filterName",
                  "optional": true,
                  "type": {
                    "text": "string"
                  },
                  "description": "Optionnal. A specific filter name to retrieve"
                }
              ],
              "description": "Retrieved the list of child filters"
            },
            {
              "kind": "method",
              "name": "getSearchResultsBindings",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "IComponentBinding[]"
                }
              },
              "parameters": [
                {
                  "name": "ids",
                  "type": {
                    "text": "string[]"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getSearchVerticalsBinding",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "IComponentBinding[]"
                }
              },
              "parameters": [
                {
                  "name": "ids",
                  "type": {
                    "text": "string[]"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "updateBinding",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventConstants"
                  }
                },
                {
                  "name": "newValue",
                  "type": {
                    "text": "string | string[]"
                  }
                },
                {
                  "name": "previousValue",
                  "type": {
                    "text": "string | string[]"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "theme",
              "attribute": "theme",
              "reflects": true,
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "enableDebugMode",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Enable the debug to explore data from context",
              "attribute": "enable-debug",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "renderedOnce",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Flag indicating if data have been rendered at least once",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "showDebugData",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "isInitialized",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Property indicating the component has finished its initialization squence, for instance setting default values than can be read from other component\r\nThis property is set as reflected attribute to be able to trigger a mutation for consumer components",
              "attribute": "initialized",
              "reflects": true,
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "_eventHanlders",
              "type": {
                "text": "Map<string, {component: HTMLElement, event: string, handler: EventHandler<any>}>"
              },
              "privacy": "public",
              "default": "new Map<string, {component: HTMLElement, event: string, handler: EventHandler<any>}>()",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "componentError",
              "type": {
                "text": "Error"
              },
              "privacy": "public",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "themeStyles",
              "static": true,
              "description": "Returns styles from theme (i.e. define CSS variables)",
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderDebugMode",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderDebugData",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "any"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "toggleDebugData",
              "privacy": "private",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "bindComponents",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "parameters": [
                {
                  "name": "bindings",
                  "type": {
                    "text": "IComponentBinding[]"
                  },
                  "description": "the bindings to perform"
                }
              ],
              "description": "Binds all connected to the current one by listening all required events.\r\nThe method will wait for the component to be present on the page after a predefined timeout (default 5000ms)",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "unbindComponents",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "bindings",
                  "type": {
                    "text": "IComponentBinding[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "getTheme",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "description": "Get CSS variables values for the component predefined variables",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "getLocalizedString",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "string",
                  "type": {
                    "text": "ILocalizedString | string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "setFASTColors",
              "privacy": "private",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasPropertyUpdated",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "changedProperties",
                  "type": {
                    "text": "PropertyValueMap<any>"
                  }
                },
                {
                  "name": "propertyName",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "fireCustomEvent",
              "return": {
                "type": {
                  "text": "*"
                }
              },
              "parameters": [
                {
                  "name": "eventName",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "detail",
                  "optional": true,
                  "type": {
                    "text": "*"
                  }
                },
                {
                  "name": "bubbles",
                  "default": "false",
                  "optional": true,
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "name": "cancelable",
                  "default": "false",
                  "optional": true,
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "name": "composed",
                  "default": "false",
                  "optional": true,
                  "type": {
                    "text": "boolean"
                  }
                }
              ],
              "description": "Override of default method to support 'composed' flag",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "timeoutPromise",
              "privacy": "private",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "promise",
                  "type": {
                    "text": "Promise<unknown>"
                  },
                  "description": "the promise to timeout"
                },
                {
                  "name": "timeout",
                  "type": {
                    "text": "number"
                  },
                  "description": "the timeout delay"
                },
                {
                  "name": "exception",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "the exception raised if any error occures"
                }
              ],
              "description": "Allows a promise to be timeout \r\nhttps://advancedweb.hu/how-to-add-timeout-to-a-promise-in-javascript/",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "waitForElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "binding",
                  "type": {
                    "text": "IComponentBinding"
                  },
                  "description": "the binding detail"
                },
                {
                  "name": "timeout",
                  "optional": true,
                  "type": {
                    "text": "number"
                  }
                }
              ],
              "description": "Waits for a component to be present on the page and initialized to perform event binding",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            }
          ],
          "attributes": [
            {
              "name": "search-results-ids",
              "type": {
                "text": "string[]"
              },
              "default": "[]",
              "description": "The connected search results component ids",
              "fieldName": "searchResultsComponentIds"
            },
            {
              "name": "search-verticals-id",
              "type": {
                "text": "string"
              },
              "description": "The search verticals component ID if connected to a search verticals",
              "fieldName": "searchVerticalsComponentId"
            },
            {
              "name": "settings",
              "type": {
                "text": "IDataFilterConfiguration[]"
              },
              "default": "[]",
              "description": "The filters configration",
              "fieldName": "filterConfiguration"
            },
            {
              "name": "operator",
              "type": {
                "text": "FilterConditionOperator"
              },
              "description": "The default logical operator to use between filters",
              "fieldName": "operator"
            },
            {
              "name": "theme",
              "fieldName": "theme",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "name": "enable-debug",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Enable the debug to explore data from context",
              "fieldName": "enableDebugMode",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "name": "initialized",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Property indicating the component has finished its initialization squence, for instance setting default values than can be read from other component\r\nThis property is set as reflected attribute to be able to trigger a mutation for consumer components",
              "fieldName": "isInitialized",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            }
          ],
          "superclass": {
            "name": "BaseComponent",
            "module": "/src/components/BaseComponent"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "SearchFiltersComponent",
          "declaration": {
            "name": "SearchFiltersComponent",
            "module": "src/components/search-filters/SearchFiltersComponent.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/search-infos/SearchInfosComponents.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "SearchInfosComponents",
          "members": [
            {
              "kind": "field",
              "name": "searchResultsComponentIds",
              "type": {
                "text": "string[]"
              },
              "default": "[]",
              "attribute": "search-results-ids"
            },
            {
              "kind": "field",
              "name": "searchInputComponentId",
              "type": {
                "text": "string"
              },
              "description": "The search input component ID if connected to a search input",
              "attribute": "search-input-id"
            },
            {
              "kind": "field",
              "name": "searchResultsEventData",
              "type": {
                "text": "ISearchResultsEventData"
              },
              "default": "{\r\n        availableFilters: [],\r\n        resultsCount: undefined,\r\n        submittedQueryText: undefined\r\n    }"
            },
            {
              "kind": "field",
              "name": "strings",
              "type": {
                "text": "{ [x: string]: any ; }"
              },
              "privacy": "protected",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "handleSearchResultsInfos",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CustomEvent<ISearchResultsEventData>"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "theme",
              "attribute": "theme",
              "reflects": true,
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "enableDebugMode",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Enable the debug to explore data from context",
              "attribute": "enable-debug",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "renderedOnce",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Flag indicating if data have been rendered at least once",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "showDebugData",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "isInitialized",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Property indicating the component has finished its initialization squence, for instance setting default values than can be read from other component\r\nThis property is set as reflected attribute to be able to trigger a mutation for consumer components",
              "attribute": "initialized",
              "reflects": true,
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "_eventHanlders",
              "type": {
                "text": "Map<string, {component: HTMLElement, event: string, handler: EventHandler<any>}>"
              },
              "privacy": "public",
              "default": "new Map<string, {component: HTMLElement, event: string, handler: EventHandler<any>}>()",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "componentError",
              "type": {
                "text": "Error"
              },
              "privacy": "public",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "scopedElements",
              "static": true,
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "themeStyles",
              "static": true,
              "description": "Returns styles from theme (i.e. define CSS variables)",
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderDebugMode",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderDebugData",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "any"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "toggleDebugData",
              "privacy": "private",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "bindComponents",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "parameters": [
                {
                  "name": "bindings",
                  "type": {
                    "text": "IComponentBinding[]"
                  },
                  "description": "the bindings to perform"
                }
              ],
              "description": "Binds all connected to the current one by listening all required events.\r\nThe method will wait for the component to be present on the page after a predefined timeout (default 5000ms)",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "unbindComponents",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "bindings",
                  "type": {
                    "text": "IComponentBinding[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "getTheme",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "description": "Get CSS variables values for the component predefined variables",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "getLocalizedString",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "string",
                  "type": {
                    "text": "ILocalizedString | string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "setFASTColors",
              "privacy": "private",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasPropertyUpdated",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "changedProperties",
                  "type": {
                    "text": "PropertyValueMap<any>"
                  }
                },
                {
                  "name": "propertyName",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "fireCustomEvent",
              "return": {
                "type": {
                  "text": "*"
                }
              },
              "parameters": [
                {
                  "name": "eventName",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "detail",
                  "optional": true,
                  "type": {
                    "text": "*"
                  }
                },
                {
                  "name": "bubbles",
                  "default": "false",
                  "optional": true,
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "name": "cancelable",
                  "default": "false",
                  "optional": true,
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "name": "composed",
                  "default": "false",
                  "optional": true,
                  "type": {
                    "text": "boolean"
                  }
                }
              ],
              "description": "Override of default method to support 'composed' flag",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "timeoutPromise",
              "privacy": "private",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "promise",
                  "type": {
                    "text": "Promise<unknown>"
                  },
                  "description": "the promise to timeout"
                },
                {
                  "name": "timeout",
                  "type": {
                    "text": "number"
                  },
                  "description": "the timeout delay"
                },
                {
                  "name": "exception",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "the exception raised if any error occures"
                }
              ],
              "description": "Allows a promise to be timeout \r\nhttps://advancedweb.hu/how-to-add-timeout-to-a-promise-in-javascript/",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "waitForElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "binding",
                  "type": {
                    "text": "IComponentBinding"
                  },
                  "description": "the binding detail"
                },
                {
                  "name": "timeout",
                  "optional": true,
                  "type": {
                    "text": "number"
                  }
                }
              ],
              "description": "Waits for a component to be present on the page and initialized to perform event binding",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            }
          ],
          "attributes": [
            {
              "name": "search-results-ids",
              "type": {
                "text": "string[]"
              },
              "default": "[]",
              "fieldName": "searchResultsComponentIds"
            },
            {
              "name": "search-input-id",
              "type": {
                "text": "string"
              },
              "description": "The search input component ID if connected to a search input",
              "fieldName": "searchInputComponentId"
            },
            {
              "name": "theme",
              "fieldName": "theme",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "name": "enable-debug",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Enable the debug to explore data from context",
              "fieldName": "enableDebugMode",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "name": "initialized",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Property indicating the component has finished its initialization squence, for instance setting default values than can be read from other component\r\nThis property is set as reflected attribute to be able to trigger a mutation for consumer components",
              "fieldName": "isInitialized",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            }
          ],
          "superclass": {
            "name": "BaseComponent",
            "module": "/src/components/BaseComponent"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "SearchInfosComponents",
          "declaration": {
            "name": "SearchInfosComponents",
            "module": "src/components/search-infos/SearchInfosComponents.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/search-input/SearchInputComponent.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "SearchInputComponent",
          "members": [
            {
              "kind": "field",
              "name": "defaultQueryStringParameter",
              "type": {
                "text": "string"
              },
              "description": "If specified, get the default query text from this query string parameter name",
              "attribute": "default-query-string-parameter"
            },
            {
              "kind": "field",
              "name": "searchInNewPage",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Flag indicating in the search query text should be sent to an other page",
              "attribute": "search-in-new-page"
            },
            {
              "kind": "field",
              "name": "pageUrl",
              "type": {
                "text": "string"
              },
              "description": "The page URL to send the query text",
              "attribute": "search-page-url"
            },
            {
              "kind": "field",
              "name": "queryPathBehavior",
              "type": {
                "text": "QueryPathBehavior"
              },
              "description": "Whether to use an URL fragment (#) or query string parameter to pass the query text",
              "attribute": "query-behavior"
            },
            {
              "kind": "field",
              "name": "queryStringParameter",
              "type": {
                "text": "string"
              },
              "default": "\"q\"",
              "description": "The query string parameter to use to send the query text",
              "attribute": "query-parameter"
            },
            {
              "kind": "field",
              "name": "openBehavior",
              "type": {
                "text": "PageOpenBehavior"
              },
              "description": "Flag indicating if the search box should open a new tab or use the current page",
              "attribute": "open-behavior"
            },
            {
              "kind": "field",
              "name": "inputPlaceholder",
              "type": {
                "text": "string"
              },
              "description": "Placeholder text for the search box",
              "attribute": "placeholder"
            },
            {
              "kind": "field",
              "name": "searchKeywords",
              "type": {
                "text": "string"
              }
            },
            {
              "kind": "field",
              "name": "hasValidationError",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "_submittedKeywords",
              "type": {
                "text": "string"
              }
            },
            {
              "kind": "field",
              "name": "strings",
              "type": {
                "text": "{ [x: string]: string; }"
              },
              "privacy": "protected",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "onInputChange",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "kind": "method",
              "name": "clearSearchKeywords",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "submitSearch",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "initializeDefaultValue",
              "privacy": "private",
              "description": "Initialize the default search keywords value according to settings"
            },
            {
              "kind": "method",
              "name": "handleQueryStringChange",
              "privacy": "private",
              "description": "Subscribes to URL query string change events using windows state"
            },
            {
              "kind": "field",
              "name": "theme",
              "attribute": "theme",
              "reflects": true,
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "enableDebugMode",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Enable the debug to explore data from context",
              "attribute": "enable-debug",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "renderedOnce",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Flag indicating if data have been rendered at least once",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "showDebugData",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "isInitialized",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Property indicating the component has finished its initialization squence, for instance setting default values than can be read from other component\r\nThis property is set as reflected attribute to be able to trigger a mutation for consumer components",
              "attribute": "initialized",
              "reflects": true,
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "_eventHanlders",
              "type": {
                "text": "Map<string, {component: HTMLElement, event: string, handler: EventHandler<any>}>"
              },
              "privacy": "public",
              "default": "new Map<string, {component: HTMLElement, event: string, handler: EventHandler<any>}>()",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "componentError",
              "type": {
                "text": "Error"
              },
              "privacy": "public",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "scopedElements",
              "static": true,
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "themeStyles",
              "static": true,
              "description": "Returns styles from theme (i.e. define CSS variables)",
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderDebugMode",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderDebugData",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "any"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "toggleDebugData",
              "privacy": "private",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "bindComponents",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "parameters": [
                {
                  "name": "bindings",
                  "type": {
                    "text": "IComponentBinding[]"
                  },
                  "description": "the bindings to perform"
                }
              ],
              "description": "Binds all connected to the current one by listening all required events.\r\nThe method will wait for the component to be present on the page after a predefined timeout (default 5000ms)",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "unbindComponents",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "bindings",
                  "type": {
                    "text": "IComponentBinding[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "getTheme",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "description": "Get CSS variables values for the component predefined variables",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "getLocalizedString",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "string",
                  "type": {
                    "text": "ILocalizedString | string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "setFASTColors",
              "privacy": "private",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasPropertyUpdated",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "changedProperties",
                  "type": {
                    "text": "PropertyValueMap<any>"
                  }
                },
                {
                  "name": "propertyName",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "fireCustomEvent",
              "return": {
                "type": {
                  "text": "*"
                }
              },
              "parameters": [
                {
                  "name": "eventName",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "detail",
                  "optional": true,
                  "type": {
                    "text": "*"
                  }
                },
                {
                  "name": "bubbles",
                  "default": "false",
                  "optional": true,
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "name": "cancelable",
                  "default": "false",
                  "optional": true,
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "name": "composed",
                  "default": "false",
                  "optional": true,
                  "type": {
                    "text": "boolean"
                  }
                }
              ],
              "description": "Override of default method to support 'composed' flag",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "timeoutPromise",
              "privacy": "private",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "promise",
                  "type": {
                    "text": "Promise<unknown>"
                  },
                  "description": "the promise to timeout"
                },
                {
                  "name": "timeout",
                  "type": {
                    "text": "number"
                  },
                  "description": "the timeout delay"
                },
                {
                  "name": "exception",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "the exception raised if any error occures"
                }
              ],
              "description": "Allows a promise to be timeout \r\nhttps://advancedweb.hu/how-to-add-timeout-to-a-promise-in-javascript/",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "waitForElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "binding",
                  "type": {
                    "text": "IComponentBinding"
                  },
                  "description": "the binding detail"
                },
                {
                  "name": "timeout",
                  "optional": true,
                  "type": {
                    "text": "number"
                  }
                }
              ],
              "description": "Waits for a component to be present on the page and initialized to perform event binding",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            }
          ],
          "attributes": [
            {
              "name": "default-query-string-parameter",
              "type": {
                "text": "string"
              },
              "description": "If specified, get the default query text from this query string parameter name",
              "fieldName": "defaultQueryStringParameter"
            },
            {
              "name": "search-in-new-page",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Flag indicating in the search query text should be sent to an other page",
              "fieldName": "searchInNewPage"
            },
            {
              "name": "search-page-url",
              "type": {
                "text": "string"
              },
              "description": "The page URL to send the query text",
              "fieldName": "pageUrl"
            },
            {
              "name": "query-behavior",
              "type": {
                "text": "QueryPathBehavior"
              },
              "description": "Whether to use an URL fragment (#) or query string parameter to pass the query text",
              "fieldName": "queryPathBehavior"
            },
            {
              "name": "query-parameter",
              "type": {
                "text": "string"
              },
              "default": "\"q\"",
              "description": "The query string parameter to use to send the query text",
              "fieldName": "queryStringParameter"
            },
            {
              "name": "open-behavior",
              "type": {
                "text": "PageOpenBehavior"
              },
              "description": "Flag indicating if the search box should open a new tab or use the current page",
              "fieldName": "openBehavior"
            },
            {
              "name": "placeholder",
              "type": {
                "text": "string"
              },
              "description": "Placeholder text for the search box",
              "fieldName": "inputPlaceholder"
            },
            {
              "name": "theme",
              "fieldName": "theme",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "name": "enable-debug",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Enable the debug to explore data from context",
              "fieldName": "enableDebugMode",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "name": "initialized",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Property indicating the component has finished its initialization squence, for instance setting default values than can be read from other component\r\nThis property is set as reflected attribute to be able to trigger a mutation for consumer components",
              "fieldName": "isInitialized",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            }
          ],
          "superclass": {
            "name": "BaseComponent",
            "module": "/src/components/BaseComponent"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "SearchInputComponent",
          "declaration": {
            "name": "SearchInputComponent",
            "module": "src/components/search-input/SearchInputComponent.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/search-verticals/SearchVerticalsComponent.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "SearchVerticalsComponent",
          "members": [
            {
              "kind": "field",
              "name": "verticals",
              "type": {
                "text": "IDataVerticalConfiguration[]"
              },
              "default": "[]",
              "description": "The configured search verticals",
              "attribute": "settings"
            },
            {
              "kind": "field",
              "name": "defaultVerticalQueryStringParam",
              "type": {
                "text": "string"
              },
              "default": "\"v\"",
              "description": "The query string parameter name to use to select a vertical tab by default",
              "attribute": "default-query-string-param"
            },
            {
              "kind": "field",
              "name": "selectedVerticalKey",
              "type": {
                "text": "string"
              },
              "attribute": "selected-key",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "selectedVertical",
              "type": {
                "text": "IDataVertical"
              },
              "description": "The current selected vertical"
            },
            {
              "kind": "method",
              "name": "selectVertical",
              "privacy": "public",
              "parameters": [
                {
                  "name": "verticalKey",
                  "type": {
                    "text": "string"
                  },
                  "description": "the vertical key to select"
                }
              ],
              "description": "Select the vertical and notifies all subscribers"
            },
            {
              "kind": "method",
              "name": "onVerticalSelected",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "vertical",
                  "type": {
                    "text": "IDataVerticalConfiguration"
                  },
                  "description": "the current selected vertical"
                }
              ],
              "description": "Handler when a vertical is slected by an user"
            },
            {
              "kind": "method",
              "name": "initializeDefaultValue",
              "privacy": "private",
              "description": "Initialize the default vertical value according to settings"
            },
            {
              "kind": "method",
              "name": "handleQueryStringChange",
              "privacy": "private",
              "description": "Subscribes to URL query string change events using windows state"
            },
            {
              "kind": "method",
              "name": "toDataVertical",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "IDataVertical"
                }
              },
              "parameters": [
                {
                  "name": "verticalKey",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "theme",
              "attribute": "theme",
              "reflects": true,
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "enableDebugMode",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Enable the debug to explore data from context",
              "attribute": "enable-debug",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "renderedOnce",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Flag indicating if data have been rendered at least once",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "showDebugData",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "isInitialized",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Property indicating the component has finished its initialization squence, for instance setting default values than can be read from other component\r\nThis property is set as reflected attribute to be able to trigger a mutation for consumer components",
              "attribute": "initialized",
              "reflects": true,
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "_eventHanlders",
              "type": {
                "text": "Map<string, {component: HTMLElement, event: string, handler: EventHandler<any>}>"
              },
              "privacy": "public",
              "default": "new Map<string, {component: HTMLElement, event: string, handler: EventHandler<any>}>()",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "componentError",
              "type": {
                "text": "Error"
              },
              "privacy": "public",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "scopedElements",
              "static": true,
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "themeStyles",
              "static": true,
              "description": "Returns styles from theme (i.e. define CSS variables)",
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderDebugMode",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderDebugData",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "any"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "toggleDebugData",
              "privacy": "private",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "bindComponents",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "parameters": [
                {
                  "name": "bindings",
                  "type": {
                    "text": "IComponentBinding[]"
                  },
                  "description": "the bindings to perform"
                }
              ],
              "description": "Binds all connected to the current one by listening all required events.\r\nThe method will wait for the component to be present on the page after a predefined timeout (default 5000ms)",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "unbindComponents",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "bindings",
                  "type": {
                    "text": "IComponentBinding[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "getTheme",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "description": "Get CSS variables values for the component predefined variables",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "getLocalizedString",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "string",
                  "type": {
                    "text": "ILocalizedString | string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "setFASTColors",
              "privacy": "private",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasPropertyUpdated",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "changedProperties",
                  "type": {
                    "text": "PropertyValueMap<any>"
                  }
                },
                {
                  "name": "propertyName",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "fireCustomEvent",
              "return": {
                "type": {
                  "text": "*"
                }
              },
              "parameters": [
                {
                  "name": "eventName",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "detail",
                  "optional": true,
                  "type": {
                    "text": "*"
                  }
                },
                {
                  "name": "bubbles",
                  "default": "false",
                  "optional": true,
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "name": "cancelable",
                  "default": "false",
                  "optional": true,
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "name": "composed",
                  "default": "false",
                  "optional": true,
                  "type": {
                    "text": "boolean"
                  }
                }
              ],
              "description": "Override of default method to support 'composed' flag",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "timeoutPromise",
              "privacy": "private",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "promise",
                  "type": {
                    "text": "Promise<unknown>"
                  },
                  "description": "the promise to timeout"
                },
                {
                  "name": "timeout",
                  "type": {
                    "text": "number"
                  },
                  "description": "the timeout delay"
                },
                {
                  "name": "exception",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "the exception raised if any error occures"
                }
              ],
              "description": "Allows a promise to be timeout \r\nhttps://advancedweb.hu/how-to-add-timeout-to-a-promise-in-javascript/",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "waitForElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "binding",
                  "type": {
                    "text": "IComponentBinding"
                  },
                  "description": "the binding detail"
                },
                {
                  "name": "timeout",
                  "optional": true,
                  "type": {
                    "text": "number"
                  }
                }
              ],
              "description": "Waits for a component to be present on the page and initialized to perform event binding",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            }
          ],
          "attributes": [
            {
              "name": "settings",
              "type": {
                "text": "IDataVerticalConfiguration[]"
              },
              "default": "[]",
              "description": "The configured search verticals",
              "fieldName": "verticals"
            },
            {
              "name": "default-query-string-param",
              "type": {
                "text": "string"
              },
              "default": "\"v\"",
              "description": "The query string parameter name to use to select a vertical tab by default",
              "fieldName": "defaultVerticalQueryStringParam"
            },
            {
              "name": "selected-key",
              "type": {
                "text": "string"
              },
              "fieldName": "selectedVerticalKey"
            },
            {
              "name": "theme",
              "fieldName": "theme",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "name": "enable-debug",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Enable the debug to explore data from context",
              "fieldName": "enableDebugMode",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "name": "initialized",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Property indicating the component has finished its initialization squence, for instance setting default values than can be read from other component\r\nThis property is set as reflected attribute to be able to trigger a mutation for consumer components",
              "fieldName": "isInitialized",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            }
          ],
          "superclass": {
            "name": "BaseComponent",
            "module": "/src/components/BaseComponent"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "SearchVerticalsComponent",
          "declaration": {
            "name": "SearchVerticalsComponent",
            "module": "src/components/search-verticals/SearchVerticalsComponent.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/video-player/VideoPlayerComponent.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "VideoPlayerComponent",
          "members": [
            {
              "kind": "field",
              "name": "videoTitle",
              "type": {
                "text": "string"
              },
              "description": "Title of the video for ARIA screen readers",
              "attribute": "title"
            },
            {
              "kind": "field",
              "name": "videoUrl",
              "type": {
                "text": "string"
              },
              "description": "*\r\nUrl from Microsoft SharePoint",
              "attribute": "video-url"
            },
            {
              "kind": "field",
              "name": "thumbnailUrl",
              "type": {
                "text": "string"
              },
              "description": "Thumbnail URl to use. Only used when 'lazy-loading' is set to true.\r\nIf 'video-url' is set, this thumbnail will be used.",
              "attribute": "thumbnail-url"
            },
            {
              "kind": "field",
              "name": "width",
              "type": {
                "text": "string"
              },
              "description": "Width of the player. If not set, follow width of the parent",
              "attribute": "width"
            },
            {
              "kind": "field",
              "name": "height",
              "type": {
                "text": "string"
              },
              "description": "Height of the player. If not set, follow height of the parent",
              "attribute": "height"
            },
            {
              "kind": "field",
              "name": "autoplay",
              "type": {
                "text": "boolean"
              },
              "description": "Flag indicating if the video should start automatically. \r\nATTENTION: May be blocked by browser evn if true",
              "attribute": "autoplay"
            },
            {
              "kind": "field",
              "name": "allowfullscreen",
              "type": {
                "text": "boolean"
              },
              "description": "Allows fullscreen on the video",
              "attribute": "allowfullscreen"
            },
            {
              "kind": "field",
              "name": "previewUrl",
              "type": {
                "text": "string"
              },
              "description": "The video preview URL to use in the iframe. This URL must be accessible by the current user.",
              "attribute": "preview-url"
            },
            {
              "kind": "field",
              "name": "lazyLoading",
              "type": {
                "text": "boolean"
              },
              "description": "If set to 'true', the component won't load the iframe until a click on a fake play button is performed by the user + the video thumbnail will be displayed\r\nWhen clicked, the iframew is loaded and the video launches in autoplay mode.",
              "attribute": "lazy-loading"
            },
            {
              "kind": "field",
              "name": "renderIFrame",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "error",
              "type": {
                "text": "Error"
              },
              "default": "null"
            },
            {
              "kind": "field",
              "name": "scopedElements",
              "static": true,
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "loadState",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              }
            },
            {
              "kind": "method",
              "name": "getVideoTitle",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "Promise<string>"
                }
              },
              "parameters": [
                {
                  "name": "provider",
                  "type": {
                    "text": "IProvider"
                  }
                },
                {
                  "name": "graphBaseUrl",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getVideoPreviewUrl",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "Promise<string>"
                }
              },
              "parameters": [
                {
                  "name": "provider",
                  "type": {
                    "text": "IProvider"
                  }
                },
                {
                  "name": "graphBaseUrl",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getVideoThumbnailUrl",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "Promise<string>"
                }
              },
              "parameters": [
                {
                  "name": "provider",
                  "type": {
                    "text": "IProvider"
                  }
                },
                {
                  "name": "graphBaseUrl",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handlePlayBtnClick",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "theme",
              "attribute": "theme",
              "reflects": true,
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "enableDebugMode",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Enable the debug to explore data from context",
              "attribute": "enable-debug",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "renderedOnce",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Flag indicating if data have been rendered at least once",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "showDebugData",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "isInitialized",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Property indicating the component has finished its initialization squence, for instance setting default values than can be read from other component\r\nThis property is set as reflected attribute to be able to trigger a mutation for consumer components",
              "attribute": "initialized",
              "reflects": true,
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "_eventHanlders",
              "type": {
                "text": "Map<string, {component: HTMLElement, event: string, handler: EventHandler<any>}>"
              },
              "privacy": "public",
              "default": "new Map<string, {component: HTMLElement, event: string, handler: EventHandler<any>}>()",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "componentError",
              "type": {
                "text": "Error"
              },
              "privacy": "public",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "themeStyles",
              "static": true,
              "description": "Returns styles from theme (i.e. define CSS variables)",
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderDebugMode",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderDebugData",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "any"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "toggleDebugData",
              "privacy": "private",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "bindComponents",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "parameters": [
                {
                  "name": "bindings",
                  "type": {
                    "text": "IComponentBinding[]"
                  },
                  "description": "the bindings to perform"
                }
              ],
              "description": "Binds all connected to the current one by listening all required events.\r\nThe method will wait for the component to be present on the page after a predefined timeout (default 5000ms)",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "unbindComponents",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "bindings",
                  "type": {
                    "text": "IComponentBinding[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "getTheme",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "description": "Get CSS variables values for the component predefined variables",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "getLocalizedString",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "string",
                  "type": {
                    "text": "ILocalizedString | string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "setFASTColors",
              "privacy": "private",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasPropertyUpdated",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "changedProperties",
                  "type": {
                    "text": "PropertyValueMap<any>"
                  }
                },
                {
                  "name": "propertyName",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "fireCustomEvent",
              "return": {
                "type": {
                  "text": "*"
                }
              },
              "parameters": [
                {
                  "name": "eventName",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "detail",
                  "optional": true,
                  "type": {
                    "text": "*"
                  }
                },
                {
                  "name": "bubbles",
                  "default": "false",
                  "optional": true,
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "name": "cancelable",
                  "default": "false",
                  "optional": true,
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "name": "composed",
                  "default": "false",
                  "optional": true,
                  "type": {
                    "text": "boolean"
                  }
                }
              ],
              "description": "Override of default method to support 'composed' flag",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "timeoutPromise",
              "privacy": "private",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "promise",
                  "type": {
                    "text": "Promise<unknown>"
                  },
                  "description": "the promise to timeout"
                },
                {
                  "name": "timeout",
                  "type": {
                    "text": "number"
                  },
                  "description": "the timeout delay"
                },
                {
                  "name": "exception",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "the exception raised if any error occures"
                }
              ],
              "description": "Allows a promise to be timeout \r\nhttps://advancedweb.hu/how-to-add-timeout-to-a-promise-in-javascript/",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "waitForElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "binding",
                  "type": {
                    "text": "IComponentBinding"
                  },
                  "description": "the binding detail"
                },
                {
                  "name": "timeout",
                  "optional": true,
                  "type": {
                    "text": "number"
                  }
                }
              ],
              "description": "Waits for a component to be present on the page and initialized to perform event binding",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            }
          ],
          "attributes": [
            {
              "name": "title",
              "type": {
                "text": "string"
              },
              "description": "Title of the video for ARIA screen readers",
              "fieldName": "videoTitle"
            },
            {
              "name": "video-url",
              "type": {
                "text": "string"
              },
              "description": "*\r\nUrl from Microsoft SharePoint",
              "fieldName": "videoUrl"
            },
            {
              "name": "thumbnail-url",
              "type": {
                "text": "string"
              },
              "description": "Thumbnail URl to use. Only used when 'lazy-loading' is set to true.\r\nIf 'video-url' is set, this thumbnail will be used.",
              "fieldName": "thumbnailUrl"
            },
            {
              "name": "width",
              "type": {
                "text": "string"
              },
              "description": "Width of the player. If not set, follow width of the parent",
              "fieldName": "width"
            },
            {
              "name": "height",
              "type": {
                "text": "string"
              },
              "description": "Height of the player. If not set, follow height of the parent",
              "fieldName": "height"
            },
            {
              "name": "autoplay",
              "type": {
                "text": "boolean"
              },
              "description": "Flag indicating if the video should start automatically. \r\nATTENTION: May be blocked by browser evn if true",
              "fieldName": "autoplay"
            },
            {
              "name": "allowfullscreen",
              "type": {
                "text": "boolean"
              },
              "description": "Allows fullscreen on the video",
              "fieldName": "allowfullscreen"
            },
            {
              "name": "preview-url",
              "type": {
                "text": "string"
              },
              "description": "The video preview URL to use in the iframe. This URL must be accessible by the current user.",
              "fieldName": "previewUrl"
            },
            {
              "name": "lazy-loading",
              "type": {
                "text": "boolean"
              },
              "description": "If set to 'true', the component won't load the iframe until a click on a fake play button is performed by the user + the video thumbnail will be displayed\r\nWhen clicked, the iframew is loaded and the video launches in autoplay mode.",
              "fieldName": "lazyLoading"
            },
            {
              "name": "theme",
              "fieldName": "theme",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "name": "enable-debug",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Enable the debug to explore data from context",
              "fieldName": "enableDebugMode",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "name": "initialized",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Property indicating the component has finished its initialization squence, for instance setting default values than can be read from other component\r\nThis property is set as reflected attribute to be able to trigger a mutation for consumer components",
              "fieldName": "isInitialized",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            }
          ],
          "superclass": {
            "name": "BaseComponent",
            "module": "/src/components/BaseComponent"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "VideoPlayerComponent",
          "declaration": {
            "name": "VideoPlayerComponent",
            "module": "src/components/video-player/VideoPlayerComponent.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/search-results/SearchResultsComponent.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "SearchResultsComponent",
          "members": [
            {
              "kind": "field",
              "name": "useBetaEndpoint",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Flag indicating if the beta endpoint for Microsoft Graph API should be used",
              "attribute": "use-beta"
            },
            {
              "kind": "field",
              "name": "entityTypes",
              "type": {
                "text": "EntityType[]"
              },
              "default": "[EntityType.ListItem]",
              "description": "The Microsoft Search entity types to query",
              "attribute": "entity-types"
            },
            {
              "kind": "field",
              "name": "defaultQueryText",
              "type": {
                "text": "string"
              },
              "description": "The default query text to apply.\r\nQuery string parameter and search box have priority over this value during first load",
              "attribute": "query-text"
            },
            {
              "kind": "field",
              "name": "queryTemplate",
              "type": {
                "text": "string"
              },
              "description": "The search query template to use. Support tokens https://learn.microsoft.com/en-us/graph/search-concept-query-template",
              "attribute": "query-template"
            },
            {
              "kind": "field",
              "name": "defaultQueryStringParameter",
              "type": {
                "text": "string"
              },
              "description": "If specified, get the default query text from this query string parameter name",
              "attribute": "default-query-string-parameter"
            },
            {
              "kind": "field",
              "name": "selectedFields",
              "type": {
                "text": "string[]"
              },
              "default": "[\"name\",\"title\",\"summary\",\"created\",\"createdBy\",\"filetype\",\"defaultEncodingURL\",\"lastModifiedTime\",\"modifiedBy\",\"path\",\"hitHighlightedSummary\",\"SPSiteURL\",\"SiteTitle\"]",
              "description": "Search managed properties to retrieve for results and usable in the results template. \r\nComma separated. Refer to the [Microsoft Search API documentation](https://learn.microsoft.com/en-us/graph/api/resources/search-api-overview?view=graph-rest-1.0&preserve-view=true#scope-search-based-on-entity-types) to know what properties can be used according to entity types.",
              "attribute": "fields"
            },
            {
              "kind": "field",
              "name": "sortFieldsConfiguration",
              "type": {
                "text": "ISortFieldConfiguration[]"
              },
              "default": "[]",
              "description": "Sort properties for the request",
              "attribute": "sort-properties"
            },
            {
              "kind": "field",
              "name": "showPaging",
              "type": {
                "text": "boolean"
              },
              "description": "Flag indicating if the pagination control should be displayed",
              "attribute": "show-paging"
            },
            {
              "kind": "field",
              "name": "pageSize",
              "type": {
                "text": "number"
              },
              "default": "10",
              "description": "The number of results to show per results page",
              "attribute": "page-size"
            },
            {
              "kind": "field",
              "name": "numberOfPagesToDisplay",
              "type": {
                "text": "number"
              },
              "default": "5",
              "description": "The number of pages to display in the pagination control",
              "attribute": "pages-number"
            },
            {
              "kind": "field",
              "name": "enableResultTypes",
              "type": {
                "text": "boolean"
              },
              "description": "Flag indicating if Micrsoft Search result types should be applied in results",
              "attribute": "enable-result-types"
            },
            {
              "kind": "field",
              "name": "connectionIds",
              "type": {
                "text": "string[]"
              },
              "description": "If \"entityTypes\" contains \"externalItem\", specify the connection id of the external source",
              "attribute": "connections"
            },
            {
              "kind": "field",
              "name": "enableModification",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Indicates whether spelling modifications are enabled. If enabled, the user will get the search results for the corrected query in case of no results for the original query with typos.",
              "attribute": "enable-modification"
            },
            {
              "kind": "field",
              "name": "enableSuggestion",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Indicates whether spelling suggestions are enabled. If enabled, the user will get the search results for the original search query and suggestions for spelling correction",
              "attribute": "enable-suggestion"
            },
            {
              "kind": "field",
              "name": "componentTitle",
              "type": {
                "text": "string | ILocalizedString"
              },
              "description": "If specified, shows the title on top of the results",
              "attribute": "comp-title"
            },
            {
              "kind": "field",
              "name": "seeAllLink",
              "type": {
                "text": "string"
              },
              "description": "If specified, shows a \"See all\" link at top top of the results",
              "attribute": "see-all-link"
            },
            {
              "kind": "field",
              "name": "showCount",
              "type": {
                "text": "boolean"
              },
              "description": "If specified, show the results count at the top of the results",
              "attribute": "show-count"
            },
            {
              "kind": "field",
              "name": "searchFiltersComponentId",
              "type": {
                "text": "string"
              },
              "description": "The search filters component ID if connected to a search filters",
              "attribute": "search-filters-id",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "searchInputComponentId",
              "type": {
                "text": "string"
              },
              "description": "The search input component ID if connected to a search input",
              "attribute": "search-input-id",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "searchVerticalsComponentId",
              "type": {
                "text": "string"
              },
              "description": "The search verticals component ID if connected to a search verticals",
              "attribute": "search-verticals-id",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "searchSortComponentId",
              "type": {
                "text": "string"
              },
              "description": "The search sort component ID if connected to a search sort component",
              "attribute": "search-sort-id",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "selectedVerticalKeys",
              "type": {
                "text": "string[]"
              },
              "description": "If connected to a search verticals component on the same page, determines on which keys this component should be displayed",
              "attribute": "verticals-keys"
            },
            {
              "kind": "field",
              "name": "noLoadingIndicator",
              "type": {
                "text": "boolean"
              },
              "description": "Flag indicating if the loading indication (spinner/shimmers) should be displayed when fectching the data",
              "attribute": "no-loading"
            },
            {
              "kind": "field",
              "name": "data",
              "type": {
                "text": "IDataSourceData"
              },
              "default": "{ items: [] }"
            },
            {
              "kind": "field",
              "name": "isLoading",
              "type": {
                "text": "boolean"
              },
              "default": "true"
            },
            {
              "kind": "field",
              "name": "shouldRender",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "error",
              "type": {
                "text": "Error"
              },
              "default": "null"
            },
            {
              "kind": "field",
              "name": "searchQuery",
              "type": {
                "text": "IMicrosoftSearchQuery"
              },
              "privacy": "public",
              "default": "{\r\n            requests: []\r\n        }"
            },
            {
              "kind": "field",
              "name": "msSearchService",
              "type": {
                "text": "IMicrosoftSearchService"
              },
              "privacy": "public",
              "default": "new MicrosoftSearchService()"
            },
            {
              "kind": "field",
              "name": "templateService",
              "type": {
                "text": "ITemplateService"
              },
              "privacy": "private",
              "default": "new TemplateService()"
            },
            {
              "kind": "field",
              "name": "tokenService",
              "type": {
                "text": "ITokenService"
              },
              "privacy": "private",
              "default": "new TokenService()"
            },
            {
              "kind": "field",
              "name": "dateHelper",
              "type": {
                "text": "DateHelper"
              },
              "privacy": "private",
              "default": "new DateHelper()"
            },
            {
              "kind": "field",
              "name": "searchResultsHelper",
              "type": {
                "text": "SearchResultsHelper"
              },
              "privacy": "private",
              "default": "new SearchResultsHelper()"
            },
            {
              "kind": "field",
              "name": "dayJs",
              "type": {
                "text": "any"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "currentLanguage",
              "type": {
                "text": "string"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "sortProperties",
              "type": {
                "text": "ISearchSortProperty[]"
              }
            },
            {
              "kind": "field",
              "name": "_searchRequestAggregations",
              "type": {
                "text": "ISearchRequestAggregation[]"
              }
            },
            {
              "kind": "method",
              "name": "renderDefaultItems",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "renderHeader",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "renderSeeAllLink",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "renderOverlay",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "renderErrorMessage",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "renderPagination",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "renderDriveItem",
              "privacy": "private",
              "parameters": [
                {
                  "name": "result",
                  "type": {
                    "text": "SearchHit"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderSite",
              "privacy": "private",
              "parameters": [
                {
                  "name": "result",
                  "type": {
                    "text": "SearchHit"
                  }
                }
              ],
              "description": "Renders a site entity",
              "return": {
                "type": {
                  "text": ""
                }
              }
            },
            {
              "kind": "method",
              "name": "renderList",
              "privacy": "private",
              "parameters": [
                {
                  "name": "result",
                  "type": {
                    "text": "SearchHit"
                  }
                }
              ],
              "description": "Renders a list entity",
              "return": {
                "type": {
                  "text": ""
                }
              }
            },
            {
              "kind": "method",
              "name": "renderListItem",
              "privacy": "private",
              "parameters": [
                {
                  "name": "result",
                  "type": {
                    "text": "SearchHit"
                  }
                }
              ],
              "description": "Renders a listItem entity",
              "return": {
                "type": {
                  "text": ""
                }
              }
            },
            {
              "kind": "method",
              "name": "renderPerson",
              "privacy": "private",
              "parameters": [
                {
                  "name": "result",
                  "type": {
                    "text": "SearchHit"
                  }
                }
              ],
              "description": "Renders a person entity",
              "return": {
                "type": {
                  "text": ""
                }
              }
            },
            {
              "kind": "method",
              "name": "renderBookmark",
              "privacy": "private",
              "parameters": [
                {
                  "name": "result",
                  "type": {
                    "text": "SearchHit"
                  }
                }
              ],
              "description": "Renders a bookmark entity"
            },
            {
              "kind": "method",
              "name": "renderAcronym",
              "privacy": "private",
              "parameters": [
                {
                  "name": "result",
                  "type": {
                    "text": "SearchHit"
                  }
                }
              ],
              "description": "Renders an acronym entity"
            },
            {
              "kind": "method",
              "name": "renderQnA",
              "privacy": "private",
              "parameters": [
                {
                  "name": "result",
                  "type": {
                    "text": "SearchHit"
                  }
                }
              ],
              "description": "Renders a qna entity"
            },
            {
              "kind": "method",
              "name": "renderAnswer",
              "privacy": "private",
              "parameters": [
                {
                  "name": "result",
                  "type": {
                    "text": "SearchHit"
                  }
                },
                {
                  "name": "icon",
                  "type": {
                    "text": "SvgIcon"
                  }
                }
              ],
              "description": "Renders an answer entity"
            },
            {
              "kind": "method",
              "name": "renderDefault",
              "privacy": "private",
              "parameters": [
                {
                  "name": "result",
                  "type": {
                    "text": "SearchHit"
                  }
                }
              ],
              "description": "Renders any entity"
            },
            {
              "kind": "field",
              "name": "scopedElements",
              "static": true,
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "updateBinding",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "EventConstants"
                  }
                },
                {
                  "name": "newValue",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "previousValue",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "loadState",
              "privacy": "public",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "description": "Only calls when the provider is in ProviderState.SignedIn state"
            },
            {
              "kind": "field",
              "name": "strings",
              "privacy": "protected",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "_search",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "parameters": [
                {
                  "name": "searchQuery",
                  "type": {
                    "text": "IMicrosoftSearchQuery"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "buildAggregationsFromFiltersConfig",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "ISearchRequestAggregation[]"
                }
              }
            },
            {
              "kind": "method",
              "name": "buildSearchQuery",
              "privacy": "private",
              "description": "Builds the search query according to the current component parameters and context"
            },
            {
              "kind": "method",
              "name": "handleSearchFilters",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CustomEvent<ISearchFiltersEventData>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleSearchInput",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CustomEvent<ISearchInputEventData>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleSearchVertical",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CustomEvent<ISearchVerticalEventData>"
                  },
                  "description": "the selected vertical information"
                }
              ],
              "description": "Handler when a new vertical is selected"
            },
            {
              "kind": "method",
              "name": "handleSearchSort",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CustomEvent<ISearchSortEventData>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getSearchInputBinding",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "IComponentBinding"
                }
              },
              "parameters": [
                {
                  "name": "id",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getSearchVerticalsBinding",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "IComponentBinding"
                }
              },
              "parameters": [
                {
                  "name": "id",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getSearchSortBinding",
              "privacy": "private",
              "parameters": [
                {
                  "name": "id",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getSearchFiltersBinding",
              "privacy": "private",
              "parameters": [
                {
                  "name": "id",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getDefaultQueryText",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string"
                }
              }
            },
            {
              "kind": "method",
              "name": "goToPage",
              "privacy": "private",
              "parameters": [
                {
                  "name": "pageNumber",
                  "type": {
                    "text": "number"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "resetPagination",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "resetFilters",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "initSortProperties",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "initVerticalSelectedKeys",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "resetQueryText",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "getResourceIcon",
              "privacy": "private",
              "parameters": [
                {
                  "name": "resource",
                  "type": {
                    "text": "SearchResource"
                  }
                }
              ],
              "description": "Gets default resource icon"
            },
            {
              "kind": "method",
              "name": "getResourceUrl",
              "privacy": "private",
              "parameters": [
                {
                  "name": "resource",
                  "type": {
                    "text": "SearchResource"
                  }
                }
              ],
              "description": "Gets default resource URLs"
            },
            {
              "kind": "method",
              "name": "getResourceName",
              "privacy": "private",
              "parameters": [
                {
                  "name": "resource",
                  "type": {
                    "text": "SearchResource"
                  }
                }
              ],
              "description": "Gets default resource Names"
            },
            {
              "kind": "method",
              "name": "getResultSummary",
              "privacy": "private",
              "parameters": [
                {
                  "name": "result",
                  "type": {
                    "text": "SearchHit"
                  }
                },
                {
                  "name": "resource"
                }
              ],
              "description": "Gets default result summary"
            },
            {
              "kind": "field",
              "name": "theme",
              "attribute": "theme",
              "reflects": true,
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "enableDebugMode",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Enable the debug to explore data from context",
              "attribute": "enable-debug",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "renderedOnce",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Flag indicating if data have been rendered at least once",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "showDebugData",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "isInitialized",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Property indicating the component has finished its initialization squence, for instance setting default values than can be read from other component\r\nThis property is set as reflected attribute to be able to trigger a mutation for consumer components",
              "attribute": "initialized",
              "reflects": true,
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "_eventHanlders",
              "type": {
                "text": "Map<string, {component: HTMLElement, event: string, handler: EventHandler<any>}>"
              },
              "privacy": "public",
              "default": "new Map<string, {component: HTMLElement, event: string, handler: EventHandler<any>}>()",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "componentError",
              "type": {
                "text": "Error"
              },
              "privacy": "public",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "themeStyles",
              "static": true,
              "description": "Returns styles from theme (i.e. define CSS variables)",
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderDebugMode",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderDebugData",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "any"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "toggleDebugData",
              "privacy": "private",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "bindComponents",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "parameters": [
                {
                  "name": "bindings",
                  "type": {
                    "text": "IComponentBinding[]"
                  },
                  "description": "the bindings to perform"
                }
              ],
              "description": "Binds all connected to the current one by listening all required events.\r\nThe method will wait for the component to be present on the page after a predefined timeout (default 5000ms)",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "unbindComponents",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "bindings",
                  "type": {
                    "text": "IComponentBinding[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "getTheme",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "description": "Get CSS variables values for the component predefined variables",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "getLocalizedString",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "string",
                  "type": {
                    "text": "ILocalizedString | string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "setFASTColors",
              "privacy": "private",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasPropertyUpdated",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "changedProperties",
                  "type": {
                    "text": "PropertyValueMap<any>"
                  }
                },
                {
                  "name": "propertyName",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "fireCustomEvent",
              "return": {
                "type": {
                  "text": "*"
                }
              },
              "parameters": [
                {
                  "name": "eventName",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "detail",
                  "optional": true,
                  "type": {
                    "text": "*"
                  }
                },
                {
                  "name": "bubbles",
                  "default": "false",
                  "optional": true,
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "name": "cancelable",
                  "default": "false",
                  "optional": true,
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "name": "composed",
                  "default": "false",
                  "optional": true,
                  "type": {
                    "text": "boolean"
                  }
                }
              ],
              "description": "Override of default method to support 'composed' flag",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "timeoutPromise",
              "privacy": "private",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "promise",
                  "type": {
                    "text": "Promise<unknown>"
                  },
                  "description": "the promise to timeout"
                },
                {
                  "name": "timeout",
                  "type": {
                    "text": "number"
                  },
                  "description": "the timeout delay"
                },
                {
                  "name": "exception",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "the exception raised if any error occures"
                }
              ],
              "description": "Allows a promise to be timeout \r\nhttps://advancedweb.hu/how-to-add-timeout-to-a-promise-in-javascript/",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "waitForElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "binding",
                  "type": {
                    "text": "IComponentBinding"
                  },
                  "description": "the binding detail"
                },
                {
                  "name": "timeout",
                  "optional": true,
                  "type": {
                    "text": "number"
                  }
                }
              ],
              "description": "Waits for a component to be present on the page and initialized to perform event binding",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            }
          ],
          "attributes": [
            {
              "name": "use-beta",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Flag indicating if the beta endpoint for Microsoft Graph API should be used",
              "fieldName": "useBetaEndpoint"
            },
            {
              "name": "entity-types",
              "type": {
                "text": "EntityType[]"
              },
              "default": "[EntityType.ListItem]",
              "description": "The Microsoft Search entity types to query",
              "fieldName": "entityTypes"
            },
            {
              "name": "query-text",
              "type": {
                "text": "string"
              },
              "description": "The default query text to apply.\r\nQuery string parameter and search box have priority over this value during first load",
              "fieldName": "defaultQueryText"
            },
            {
              "name": "query-template",
              "type": {
                "text": "string"
              },
              "description": "The search query template to use. Support tokens https://learn.microsoft.com/en-us/graph/search-concept-query-template",
              "fieldName": "queryTemplate"
            },
            {
              "name": "default-query-string-parameter",
              "type": {
                "text": "string"
              },
              "description": "If specified, get the default query text from this query string parameter name",
              "fieldName": "defaultQueryStringParameter"
            },
            {
              "name": "fields",
              "type": {
                "text": "string[]"
              },
              "default": "[\"name\",\"title\",\"summary\",\"created\",\"createdBy\",\"filetype\",\"defaultEncodingURL\",\"lastModifiedTime\",\"modifiedBy\",\"path\",\"hitHighlightedSummary\",\"SPSiteURL\",\"SiteTitle\"]",
              "description": "Search managed properties to retrieve for results and usable in the results template. \r\nComma separated. Refer to the [Microsoft Search API documentation](https://learn.microsoft.com/en-us/graph/api/resources/search-api-overview?view=graph-rest-1.0&preserve-view=true#scope-search-based-on-entity-types) to know what properties can be used according to entity types.",
              "fieldName": "selectedFields"
            },
            {
              "name": "sort-properties",
              "type": {
                "text": "ISortFieldConfiguration[]"
              },
              "default": "[]",
              "description": "Sort properties for the request",
              "fieldName": "sortFieldsConfiguration"
            },
            {
              "name": "show-paging",
              "type": {
                "text": "boolean"
              },
              "description": "Flag indicating if the pagination control should be displayed",
              "fieldName": "showPaging"
            },
            {
              "name": "page-size",
              "type": {
                "text": "number"
              },
              "default": "10",
              "description": "The number of results to show per results page",
              "fieldName": "pageSize"
            },
            {
              "name": "pages-number",
              "type": {
                "text": "number"
              },
              "default": "5",
              "description": "The number of pages to display in the pagination control",
              "fieldName": "numberOfPagesToDisplay"
            },
            {
              "name": "enable-result-types",
              "type": {
                "text": "boolean"
              },
              "description": "Flag indicating if Micrsoft Search result types should be applied in results",
              "fieldName": "enableResultTypes"
            },
            {
              "name": "connections",
              "type": {
                "text": "string[]"
              },
              "description": "If \"entityTypes\" contains \"externalItem\", specify the connection id of the external source",
              "fieldName": "connectionIds"
            },
            {
              "name": "enable-modification",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Indicates whether spelling modifications are enabled. If enabled, the user will get the search results for the corrected query in case of no results for the original query with typos.",
              "fieldName": "enableModification"
            },
            {
              "name": "enable-suggestion",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Indicates whether spelling suggestions are enabled. If enabled, the user will get the search results for the original search query and suggestions for spelling correction",
              "fieldName": "enableSuggestion"
            },
            {
              "name": "comp-title",
              "type": {
                "text": "string | ILocalizedString"
              },
              "description": "If specified, shows the title on top of the results",
              "fieldName": "componentTitle"
            },
            {
              "name": "see-all-link",
              "type": {
                "text": "string"
              },
              "description": "If specified, shows a \"See all\" link at top top of the results",
              "fieldName": "seeAllLink"
            },
            {
              "name": "show-count",
              "type": {
                "text": "boolean"
              },
              "description": "If specified, show the results count at the top of the results",
              "fieldName": "showCount"
            },
            {
              "name": "search-filters-id",
              "type": {
                "text": "string"
              },
              "description": "The search filters component ID if connected to a search filters",
              "fieldName": "searchFiltersComponentId"
            },
            {
              "name": "search-input-id",
              "type": {
                "text": "string"
              },
              "description": "The search input component ID if connected to a search input",
              "fieldName": "searchInputComponentId"
            },
            {
              "name": "search-verticals-id",
              "type": {
                "text": "string"
              },
              "description": "The search verticals component ID if connected to a search verticals",
              "fieldName": "searchVerticalsComponentId"
            },
            {
              "name": "search-sort-id",
              "type": {
                "text": "string"
              },
              "description": "The search sort component ID if connected to a search sort component",
              "fieldName": "searchSortComponentId"
            },
            {
              "name": "verticals-keys",
              "type": {
                "text": "string[]"
              },
              "description": "If connected to a search verticals component on the same page, determines on which keys this component should be displayed",
              "fieldName": "selectedVerticalKeys"
            },
            {
              "name": "no-loading",
              "type": {
                "text": "boolean"
              },
              "description": "Flag indicating if the loading indication (spinner/shimmers) should be displayed when fectching the data",
              "fieldName": "noLoadingIndicator"
            },
            {
              "name": "theme",
              "fieldName": "theme",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "name": "enable-debug",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Enable the debug to explore data from context",
              "fieldName": "enableDebugMode",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "name": "initialized",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Property indicating the component has finished its initialization squence, for instance setting default values than can be read from other component\r\nThis property is set as reflected attribute to be able to trigger a mutation for consumer components",
              "fieldName": "isInitialized",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            }
          ],
          "superclass": {
            "name": "BaseComponent",
            "module": "/src/components/BaseComponent"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "SearchResultsComponent",
          "declaration": {
            "name": "SearchResultsComponent",
            "module": "src/components/search-results/SearchResultsComponent.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/services/microsoftSearchService/IMicrosoftSearchService.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/services/microsoftSearchService/MicrosoftSearchService.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "EntityTypesValidCombination",
          "type": {
            "text": "array"
          },
          "default": "[EntityType.Drive, EntityType.DriveItem, EntityType.Site, EntityType.List, EntityType.ListItem]"
        },
        {
          "kind": "class",
          "description": "",
          "name": "MicrosoftSearchService",
          "members": [
            {
              "kind": "field",
              "name": "_useBetaEndPoint",
              "type": {
                "text": "boolean"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "useBetaEndPoint",
              "type": {
                "text": "boolean"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "controller",
              "type": {
                "text": "AbortController"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_microsoftSearchUrl",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "default": "\"https://graph.microsoft.com/v1.0/search/query\""
            },
            {
              "kind": "method",
              "name": "search",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "Promise<IMicrosoftSearchDataSourceData>"
                }
              },
              "parameters": [
                {
                  "name": "searchQuery",
                  "type": {
                    "text": "IMicrosoftSearchQuery"
                  }
                },
                {
                  "name": "culture",
                  "optional": true,
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "abortRequest",
              "privacy": "public"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "EntityTypesValidCombination",
          "declaration": {
            "name": "EntityTypesValidCombination",
            "module": "src/services/microsoftSearchService/MicrosoftSearchService.ts"
          }
        },
        {
          "kind": "js",
          "name": "MicrosoftSearchService",
          "declaration": {
            "name": "MicrosoftSearchService",
            "module": "src/services/microsoftSearchService/MicrosoftSearchService.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/services/tokenService/ITokenService.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/services/tokenService/TokenService.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "TokenService",
          "members": [
            {
              "kind": "field",
              "name": "genericTokenRegexp",
              "privacy": "private",
              "default": "/{[^{]+?[^\\\\]}/gi",
              "description": "This regex only matches expressions enclosed with single, not escaped, curly braces '{}'"
            },
            {
              "kind": "field",
              "name": "tokenValuesList",
              "type": {
                "text": "{ [key: string]: string }"
              },
              "privacy": "private",
              "default": "{\r\n        [BuiltinTokenNames.searchTerms]: undefined,\r\n        [BuiltinTokenNames.verticals]: undefined\r\n    }",
              "description": "The list of static tokens values set by the Web Part as context"
            },
            {
              "kind": "method",
              "name": "setTokenValue",
              "privacy": "public",
              "parameters": [
                {
                  "name": "token",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "value",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getTokenValue",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "string"
                }
              },
              "parameters": [
                {
                  "name": "token",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "resolveTokens",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "string"
                }
              },
              "parameters": [
                {
                  "name": "inputString",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TokenService",
          "declaration": {
            "name": "TokenService",
            "module": "src/services/tokenService/TokenService.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/services/templateService/ITemplateService.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/services/templateService/TemplateService.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "TemplateService",
          "members": [
            {
              "kind": "field",
              "name": "_adaptiveCardsNS",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_markdownIt",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_adaptiveCardsTemplating",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_serializationContext",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "loadAdaptiveCardsResources",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              }
            },
            {
              "kind": "method",
              "name": "getFileContent",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "Promise<string>"
                }
              },
              "parameters": [
                {
                  "name": "fileAbsoluteUrl",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "processAdaptiveCardTemplate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "HTMLElement"
                }
              },
              "parameters": [
                {
                  "name": "templateContent",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "templateContext",
                  "type": {
                    "text": "object"
                  }
                },
                {
                  "name": "theme",
                  "optional": true,
                  "type": {
                    "text": "IThemeDefinition"
                  }
                },
                {
                  "name": "fallbackImageUrl",
                  "optional": true,
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "processResultTypesFromHtml",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "HTMLElement"
                }
              },
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "IDataSourceData"
                  }
                },
                {
                  "name": "templateContent",
                  "type": {
                    "text": "HTMLElement"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_getHostConfiguration",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "{ [key: string]: any }"
                }
              },
              "parameters": [
                {
                  "name": "theme",
                  "optional": true,
                  "type": {
                    "text": "IThemeDefinition"
                  }
                }
              ]
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TemplateService",
          "declaration": {
            "name": "TemplateService",
            "module": "src/services/templateService/TemplateService.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/stories/components/common.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "CommonArgs",
          "type": {
            "text": "Partial<Args>"
          },
          "default": "{\r\n    \"theme\": \"default\"\r\n}"
        },
        {
          "kind": "variable",
          "name": "CommonArgTypes",
          "type": {
            "text": "Partial<ArgTypes<Args>>"
          },
          "default": "{\r\n    \"theme\" :{\r\n        options: [\"default\", \"dark\"],\r\n        control: { type: \"inline-radio\" }\r\n    }\r\n}"
        },
        {
          "kind": "variable",
          "name": "CommonParameters",
          "type": {
            "text": "array"
          },
          "default": "[\r\n    \"theme\"\r\n]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CommonArgs",
          "declaration": {
            "name": "CommonArgs",
            "module": "src/stories/components/common.ts"
          }
        },
        {
          "kind": "js",
          "name": "CommonArgTypes",
          "declaration": {
            "name": "CommonArgTypes",
            "module": "src/stories/components/common.ts"
          }
        },
        {
          "kind": "js",
          "name": "CommonParameters",
          "declaration": {
            "name": "CommonParameters",
            "module": "src/stories/components/common.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/adaptive-card/tests/mocks.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "mockCardContent",
          "type": {
            "text": "object"
          },
          "default": "{\r\n\t\"$schema\": \"http://adaptivecards.io/schemas/adaptive-card.json\",\r\n\t\"type\": \"AdaptiveCard\",\r\n\t\"version\": \"1.3\",\r\n\t\"body\": [{\r\n\t\t\"type\": \"Container\",\r\n\t\t\"items\": [\r\n\t\t\t{\r\n\t\t\t\t\"type\": \"ColumnSet\",\r\n\t\t\t\t\"id\": \"${hitId}\",\r\n\t\t\t\t\"columns\": [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"type\": \"Column\",\r\n\t\t\t\t\t\t\"width\": \"stretch\",\r\n\t\t\t\t\t\t\"id\": \"itemTitle\",\r\n\t\t\t\t\t\t\"items\": [{\r\n\t\t\t\t\t\t\t\"type\": \"TextBlock\",\r\n\t\t\t\t\t\t\t\"weight\": \"bolder\",\r\n\t\t\t\t\t\t\t\"id\": \"trackEvent\",\r\n\t\t\t\t\t\t\t\"spacing\": \"small\",\r\n\t\t\t\t\t\t\t\"text\": \"<div id='eventData' category='SearchResultsEvents' action='SearchResultItemClicked' value='1' dimensions='${jsonStringify([{key:'ViewedResults',value:'https://fakeitem'},{key:'ClickedItemRanks',value:1})])}'>title</div>\",\r\n\t\t\t\t\t\t\t\"size\": \"large\"\r\n\t\t\t\t\t\t}]\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t}\r\n\t\t]\r\n\t}]\r\n}"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "mockCardContent",
          "declaration": {
            "name": "mockCardContent",
            "module": "src/components/adaptive-card/tests/mocks.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/search-filters/tests/mocks.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "basefilterResults",
          "type": {
            "text": "IDataFilterResult[]"
          },
          "default": "[\r\n   {\r\n     \"filterName\":\"FileType\",\r\n     \"values\":[\r\n       {\r\n         \"key\":\"\\\"ǂǂ646f6378\\\"\",\r\n         \"count\": 100,\r\n         \"name\":\"docx\",\r\n         \"value\":\"\\\"ǂǂ646f6378\\\"\",\r\n         \"operator\": 6\r\n       },\r\n       {\r\n         \"key\":\"\\\"ǂǂ70707478\\\"\",\r\n         \"count\": 50,\r\n         \"name\":\"pptx\",\r\n         \"value\":\"\\\"ǂǂ70707478\\\"\",\r\n         \"operator\": 6\r\n       },\r\n       {\r\n         \"key\":\"\\\"ǂǂ706466\\\"\",\r\n         \"count\": 25,\r\n         \"name\":\"pdf\",\r\n         \"value\":\"\\\"ǂǂ706466\\\"\",\r\n         \"operator\": 6\r\n       }\r\n     ]\r\n   },\r\n   {\r\n      \"filterName\":\"ModifiedBy\",\r\n      \"values\":[\r\n         {\r\n            \"key\":\"\\\"ǂǂ557365722031\\\"\",\r\n            \"count\":6043,\r\n            \"name\":\"User 1\",\r\n            \"value\":\"\\\"ǂǂ557365722031\\\"\",\r\n            \"operator\":6\r\n         },\r\n         {\r\n            \"key\":\"\\\"ǂǂ557365722031\\\"\",\r\n            \"count\":5607,\r\n            \"name\":\"User 2\",\r\n            \"value\":\"\\\"ǂǂ557365722031\\\"\",\r\n            \"operator\":6\r\n         },\r\n         {\r\n            \"key\":\"\\\"ǂǂ557365722033\\\"\",\r\n            \"count\":3828,\r\n            \"name\":\"User 3\",\r\n            \"value\":\"\\\"ǂǂ557365722033\\\"\",\r\n            \"operator\":6\r\n         }\r\n      ]\r\n   }\r\n ]"
        },
        {
          "kind": "variable",
          "name": "baseFilterConfiguration",
          "type": {
            "text": "IDataFilterConfiguration[]"
          },
          "default": "[\r\n   {\r\n      filterName: \"FileType\",\r\n      template: BuiltinFilterTemplates.CheckBox,\r\n      displayName: \"FileType\",\r\n      showCount: true,\r\n      operator: FilterConditionOperator.OR,\r\n      isMulti: false,\r\n      sortBy: FilterSortType.ByName,\r\n      sortDirection: FilterSortDirection.Descending,\r\n      maxBuckets: 50,\r\n      sortIdx: 1,\r\n      verticalKeys: [\"tab1\"]\r\n   },\r\n   {\r\n      filterName: \"ModifiedBy\",\r\n      template: BuiltinFilterTemplates.CheckBox,\r\n      displayName: \"LastModifiedTime\",\r\n      showCount: true,\r\n      operator: FilterConditionOperator.OR,\r\n      isMulti: false,\r\n      sortBy: FilterSortType.ByCount,\r\n      sortDirection: FilterSortDirection.Descending,\r\n      maxBuckets: 50,\r\n      sortIdx: 2,\r\n      verticalKeys: [\"tab2\"]\r\n   }\r\n]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "basefilterResults",
          "declaration": {
            "name": "basefilterResults",
            "module": "src/components/search-filters/tests/mocks.ts"
          }
        },
        {
          "kind": "js",
          "name": "baseFilterConfiguration",
          "declaration": {
            "name": "baseFilterConfiguration",
            "module": "src/components/search-filters/tests/mocks.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/search-verticals/tests/mocks.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "baseVerticalSettings",
          "type": {
            "text": "IDataVerticalConfiguration[]"
          },
          "default": "[\r\n    {\r\n        key:\"tab1\",\r\n        tabName: {\r\n            default:\"Tab 1\",\r\n            \"fr-fr\":\"Onglet 1\"\r\n        },\r\n        tabValue:\"\",\r\n        isLink:false,\r\n        linkUrl: \"\",\r\n        openBehavior: PageOpenBehavior.NewTab\r\n    },\r\n    {\r\n        key:\"tab2\",\r\n        tabName: \"Tab 2\",\r\n        tabValue:\"\",\r\n        isLink:false,\r\n        linkUrl:\"\",\r\n        openBehavior: PageOpenBehavior.NewTab\r\n    }\r\n]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "baseVerticalSettings",
          "declaration": {
            "name": "baseVerticalSettings",
            "module": "src/components/search-verticals/tests/mocks.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/search-results/tests/mocks.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "mockResults",
          "type": {
            "text": "IMicrosoftSearchDataSourceData"
          },
          "default": "{\r\n    \"items\": [\r\n        {\r\n        \"hitId\": \"b2e1ebef-2be5-4838-a80c-fc3d960f2dc1\",\r\n        \"rank\": 1,\r\n        \"summary\": \"Lorem ipsum dolor sit amet, <c0>consectetur</c0> adipiscing elit. Nunc sed nunc vel dolor rhoncus pharetra in sit amet neque. Phasellus iaculis odio id metus mattis, eu <c0>auctor</c0> lacus laoreet.<ddd/>\",\r\n        \"resource\": {\r\n            \"@odata.type\": \"#microsoft.graph.listItem\",\r\n            \"fields\": {\r\n            \"title\": \"Document1.pptx\",\r\n            \"created\": \"2023-02-09T14:45:45Z\",\r\n            \"createdBy\": \"John Doe\",\r\n            \"filetype\": \"pptx\",\r\n            \"lastModifiedTime\": \"2023-02-09T14:47:03Z\",\r\n            \"modifiedBy\": \"John Doe\",\r\n            \"path\": \"https://contoso.sharepoint.com/sites/site1/Shared Documents/Document1.pptx\",\r\n            \"hitHighlightedSummary\": \"<c0>SharingLinks</c0>.<c0>b2e1ebef</c0>-<c0>2be5</c0><ddd/>\",\r\n            \"spSiteURL\": \"https://contoso.sharepoint.com/sites/site1\",\r\n            \"siteTitle\": \"Test Site\"\r\n            },\r\n            \"createdBy\": {\r\n            \"user\": {\r\n                \"displayName\": \"John Doe\",\r\n                \"email\": \"john.doe@contoso.com\"\r\n            }\r\n            }\r\n        },\r\n        \"title\": \"Document1.pptx\",\r\n        \"created\": \"2023-02-09T14:45:45Z\",\r\n        \"createdby\": \"John Doe\",\r\n        \"filetype\": \"pptx\",\r\n        \"lastmodifiedtime\": \"2023-02-09T14:47:03Z\",\r\n        \"modifiedby\": \"John Doe\",\r\n        \"path\": \"https://contoso.sharepoint.com/sites/site1/Shared Documents/Search/Microsoft Search 2022/MS Fastrack/RCAP-230823.pptx\",\r\n        \"hithighlightedsummary\": \"Lorem ipsum dolor sit amet, <c0>consectetur</c0> adipiscing elit. Nunc sed nunc vel dolor rhoncus pharetra in sit amet neque. Phasellus iaculis odio id metus mattis, eu <c0>auctor</c0> lacus laoreet.<ddd/>\",\r\n        \"spsiteurl\": \"https://contoso.sharepoint.com/sites/site1\",\r\n        \"sitetitle\": \"Test Site\",\r\n        \"filefamily\": \"powerpoint\"\r\n        },\r\n        {\r\n        \"hitId\": \"75f08a41-3a6d-4f2d-a6c8-d632c3b9eee1\",\r\n        \"rank\": 2,\r\n        \"summary\": \"Lorem ipsum dolor sit amet, <c0>consectetur</c0> adipiscing elit. Nunc sed nunc vel dolor rhoncus pharetra in sit amet neque. Phasellus iaculis odio id metus mattis, eu <c0>auctor</c0> lacus laoreet.<ddd/>\",\r\n        \"resource\": {\r\n            \"@odata.type\": \"#microsoft.graph.listItem\",\r\n            \"fields\": {\r\n            \"title\": \"Document 2\",\r\n            \"created\": \"2022-11-09T14:29:47Z\",\r\n            \"createdBy\": \"John Doe\",\r\n            \"filetype\": \"pptx\",\r\n            \"lastModifiedTime\": \"2022-11-08T16:04:03Z\",\r\n            \"modifiedBy\": \"John Doe\",\r\n            \"path\": \"https://contoso.sharepoint.com/sites/site1/Shared Documents/Document2.pptx\",\r\n            \"hitHighlightedSummary\": \"Lorem ipsum dolor sit amet, <c0>consectetur</c0> adipiscing elit. Nunc sed nunc vel dolor rhoncus pharetra in sit amet neque. Phasellus iaculis odio id metus mattis, eu <c0>auctor</c0> lacus laoreet.<ddd/>\",\r\n            \"spSiteURL\": \"https://contoso.sharepoint.com/sites/site1\",\r\n            \"siteTitle\": \"Test Site\"\r\n            },\r\n            \"createdBy\": {\r\n            \"user\": {\r\n                \"displayName\": \"John Doe\",\r\n                \"email\": \"john.doe@contoso.com\"\r\n            }\r\n            }\r\n        },\r\n        \"title\": \"Document 2\",\r\n        \"created\": \"2022-11-09T14:29:47Z\",\r\n        \"createdby\": \"John Doe\",\r\n        \"filetype\": \"pptx\",\r\n        \"lastmodifiedtime\": \"2022-11-08T16:04:03Z\",\r\n        \"modifiedby\": \"John Doe\",\r\n        \"path\": \"https://contoso.sharepoint.com/sites/site1/Shared Documents/Document2.pptx\",\r\n        \"hithighlightedsummary\": \"Lorem ipsum dolor sit amet, <c0>consectetur</c0> adipiscing elit. Nunc sed nunc vel dolor rhoncus pharetra in sit amet neque. Phasellus iaculis odio id metus mattis, eu <c0>auctor</c0> lacus laoreet.<ddd/>\",\r\n        \"spsiteurl\": \"https://contoso.sharepoint.com/sites/site1\",\r\n        \"sitetitle\": \"Test Site\",\r\n        \"filefamily\": \"powerpoint\"\r\n        },\r\n        {\r\n        \"hitId\": \"e6935c72-5ff4-461c-b565-2e8dedca8f4a\",\r\n        \"rank\": 3,\r\n        \"summary\": \"Lorem ipsum dolor sit amet, <c0>consectetur</c0> adipiscing elit. Nunc sed nunc vel dolor rhoncus pharetra in sit amet neque. Phasellus iaculis odio id metus mattis, eu <c0>auctor</c0> lacus laoreet.<ddd/>\",\r\n        \"resource\": {\r\n            \"@odata.type\": \"#microsoft.graph.listItem\",\r\n            \"fields\": {\r\n            \"title\": \"Document3.pptx\",\r\n            \"created\": \"2022-01-27T14:19:56Z\",\r\n            \"createdBy\": \"John Doe\",\r\n            \"filetype\": \"pptx\",\r\n            \"lastModifiedTime\": \"2022-03-18T14:53:27Z\",\r\n            \"modifiedBy\": \"John Doe\",\r\n            \"path\": \"https://contoso.sharepoint.com/sites/site1/Shared Documents/SPO - Content Classification/SPO CC - SRM Request.pptx\",\r\n            \"hitHighlightedSummary\": \"Lorem ipsum dolor sit amet, <c0>consectetur</c0> adipiscing elit. Nunc sed nunc vel dolor rhoncus pharetra in sit amet neque. Phasellus iaculis odio id metus mattis, eu <c0>auctor</c0> lacus laoreet.<ddd/>\",\r\n            \"spSiteURL\": \"https://contoso.sharepoint.com/sites/site1\",\r\n            \"siteTitle\": \"Test Site\"\r\n            },\r\n            \"createdBy\": {\r\n            \"user\": {\r\n                \"displayName\": \"John Doe\",\r\n                \"email\": \"john.doe@contoso.com\"\r\n            }\r\n            }\r\n        },\r\n        \"title\": \"Document3.pptx\",\r\n        \"created\": \"2022-01-27T14:19:56Z\",\r\n        \"createdby\": \"John Doe\",\r\n        \"filetype\": \"pptx\",\r\n        \"lastmodifiedtime\": \"2022-03-18T14:53:27Z\",\r\n        \"modifiedby\": \"John Doe\",\r\n        \"path\": \"https://contoso.sharepoint.com/sites/site1/Shared Documents/Document3.pptx\",\r\n        \"hithighlightedsummary\": \"Lorem ipsum dolor sit amet, <c0>consectetur</c0> adipiscing elit. Nunc sed nunc vel dolor rhoncus pharetra in sit amet neque. Phasellus iaculis odio id metus mattis, eu <c0>auctor</c0> lacus laoreet.<ddd/>\",\r\n        \"spsiteurl\": \"https://contoso.sharepoint.com/sites/site1\",\r\n        \"sitetitle\": \"Test Site\",\r\n        \"filefamily\": \"powerpoint\"\r\n        },\r\n        {\r\n        \"hitId\": \"9d587ed8-203b-4858-9d5c-4e5e12ed772b\",\r\n        \"rank\": 4,\r\n        \"summary\": \"Lorem ipsum dolor sit amet, <c0>consectetur</c0> adipiscing elit. Nunc sed nunc vel dolor rhoncus pharetra in sit amet neque. Phasellus iaculis odio id metus mattis, eu <c0>auctor</c0> lacus laoreet.<ddd/>\",\r\n        \"resource\": {\r\n            \"@odata.type\": \"#microsoft.graph.listItem\",\r\n            \"fields\": {\r\n            \"title\": \"Document3.pptx\",\r\n            \"created\": \"2022-01-20T21:16:40Z\",\r\n            \"createdBy\": \"John Doe\",\r\n            \"filetype\": \"pptx\",\r\n            \"lastModifiedTime\": \"2022-01-26T17:07:35Z\",\r\n            \"modifiedBy\": \"John Doe\",\r\n            \"path\": \"https://contoso.sharepoint.com/sites/site1/Shared Documents/SPO - Content Classification/SPO CC - Solution overview.pptx\",\r\n            \"hitHighlightedSummary\": \"Lorem ipsum dolor sit amet, <c0>consectetur</c0> adipiscing elit. Nunc sed nunc vel dolor rhoncus pharetra in sit amet neque. Phasellus iaculis odio id metus mattis, eu <c0>auctor</c0> lacus laoreet.<ddd/>\",\r\n            \"spSiteURL\": \"https://contoso.sharepoint.com/sites/site1\",\r\n            \"siteTitle\": \"Test Site\"\r\n            },\r\n            \"createdBy\": {\r\n            \"user\": {\r\n                \"displayName\": \"John Doe\",\r\n                \"email\": \"john.doe@contoso.com\"\r\n            }\r\n            }\r\n        },\r\n        \"title\": \"Document4.pptx\",\r\n        \"created\": \"2022-01-20T21:16:40Z\",\r\n        \"createdby\": \"John Doe\",\r\n        \"filetype\": \"pptx\",\r\n        \"lastmodifiedtime\": \"2022-01-26T17:07:35Z\",\r\n        \"modifiedby\": \"John Doe\",\r\n        \"path\": \"https://contoso.sharepoint.com/sites/site1/Shared Documents/Document4.pptx\",\r\n        \"hithighlightedsummary\": \"Lorem ipsum dolor sit amet, <c0>consectetur</c0> adipiscing elit. Nunc sed nunc vel dolor rhoncus pharetra in sit amet neque. Phasellus iaculis odio id metus mattis, eu <c0>auctor</c0> lacus laoreet.<ddd/>\",\r\n        \"spsiteurl\": \"https://contoso.sharepoint.com/sites/site1\",\r\n        \"sitetitle\": \"Test Site\",\r\n        \"filefamily\": \"powerpoint\"\r\n        },\r\n        {\r\n        \"hitId\": \"59c389bd-e772-4d29-b764-2a8e81777f11\",\r\n        \"rank\": 5,\r\n        \"summary\": \"Lorem ipsum dolor sit amet, <c0>consectetur</c0> adipiscing elit. Nunc sed nunc vel dolor rhoncus pharetra in sit amet neque. Phasellus iaculis odio id metus mattis, eu <c0>auctor</c0> lacus laoreet.<ddd/>\",\r\n        \"resource\": {\r\n            \"@odata.type\": \"#microsoft.graph.listItem\",\r\n            \"fields\": {\r\n            \"title\": \"Document 5\",\r\n            \"created\": \"2022-01-21T20:43:19Z\",\r\n            \"createdBy\": \"John Doe\",\r\n            \"filetype\": \"pptx\",\r\n            \"lastModifiedTime\": \"2022-01-25T15:58:33Z\",\r\n            \"modifiedBy\": \"John Doe\",\r\n            \"path\": \"https://contoso-my.sharepoint.com/personal/john_doe_contoso_com/Documents/Document5.pptx\",\r\n            \"hitHighlightedSummary\": \"Lorem ipsum dolor sit amet, <c0>consectetur</c0> adipiscing elit. Nunc sed nunc vel dolor rhoncus pharetra in sit amet neque. Phasellus iaculis odio id metus mattis, eu <c0>auctor</c0> lacus laoreet.<ddd/>\",\r\n            \"spSiteURL\": \"https://contoso-my.sharepoint.com/personal/john_doe_contoso_com\",\r\n            \"siteTitle\": \"John Doe\"\r\n            },\r\n            \"createdBy\": {\r\n            \"user\": {\r\n                \"displayName\": \"John Doe\",\r\n                \"email\": \"john.doe@contoso.com\"\r\n            }\r\n            }\r\n        },\r\n        \"title\": \"Document 5\",\r\n        \"created\": \"2022-01-21T20:43:19Z\",\r\n        \"createdby\": \"John Doe\",\r\n        \"filetype\": \"pptx\",\r\n        \"lastmodifiedtime\": \"2022-01-25T15:58:33Z\",\r\n        \"modifiedby\": \"John Doe\",\r\n        \"path\": \"https://contoso-my.sharepoint.com/personal/john_doe_contoso_com/Documents/Document5.pptx\",\r\n        \"hithighlightedsummary\": \"Lorem ipsum dolor sit amet, <c0>consectetur</c0> adipiscing elit. Nunc sed nunc vel dolor rhoncus pharetra in sit amet neque. Phasellus iaculis odio id metus mattis, eu <c0>auctor</c0> lacus laoreet.<ddd/>\",\r\n        \"spsiteurl\": \"https://contoso-my.sharepoint.com/personal/john_doe_contoso_com\",\r\n        \"sitetitle\": \"John Doe\",\r\n        \"filefamily\": \"powerpoint\"\r\n        }\r\n    ],\r\n    \"totalCount\": 5\r\n}"
        },
        {
          "kind": "variable",
          "name": "mockCardContent",
          "type": {
            "text": "object"
          },
          "default": "{\r\n\t\"$schema\": \"http://adaptivecards.io/schemas/adaptive-card.json\",\r\n\t\"type\": \"AdaptiveCard\",\r\n\t\"version\": \"1.3\",\r\n\t\"body\": [{\r\n\t\t\"type\": \"Container\",\r\n\t\t\"items\": [\r\n\t\t\t{\r\n\t\t\t\t\"type\": \"ColumnSet\",\r\n\t\t\t\t\"id\": \"${hitId}\",\r\n\t\t\t\t\"columns\": [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"type\": \"Column\",\r\n\t\t\t\t\t\t\"width\": \"stretch\",\r\n\t\t\t\t\t\t\"id\": \"itemTitle\",\r\n\t\t\t\t\t\t\"items\": [{\r\n\t\t\t\t\t\t\t\"type\": \"TextBlock\",\r\n\t\t\t\t\t\t\t\"weight\": \"bolder\",\r\n\t\t\t\t\t\t\t\"id\": \"trackEvent\",\r\n\t\t\t\t\t\t\t\"spacing\": \"small\",\r\n\t\t\t\t\t\t\t\"text\": \"<div id='eventData' category='SearchResultsEvents' action='SearchResultItemClicked' value='1' dimensions='${jsonStringify([{key:'ViewedResults',value:'https://fakeitem'},{key:'ClickedItemRanks',value:1})])}'>title</div>\",\r\n\t\t\t\t\t\t\t\"size\": \"large\"\r\n\t\t\t\t\t\t}]\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t}\r\n\t\t]\r\n\t}]\r\n}"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "mockResults",
          "declaration": {
            "name": "mockResults",
            "module": "src/components/search-results/tests/mocks.ts"
          }
        },
        {
          "kind": "js",
          "name": "mockCardContent",
          "declaration": {
            "name": "mockCardContent",
            "module": "src/components/search-results/tests/mocks.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/stories/components/search-filters/filters.stories.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "BasicFiltersStory",
          "type": {
            "text": "Story"
          }
        },
        {
          "kind": "variable",
          "name": "AggregationsStory",
          "type": {
            "text": "Story"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "src/stories/components/search-filters/filters.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "BasicFiltersStory",
          "declaration": {
            "name": "BasicFiltersStory",
            "module": "src/stories/components/search-filters/filters.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "AggregationsStory",
          "declaration": {
            "name": "AggregationsStory",
            "module": "src/stories/components/search-filters/filters.stories.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/stories/components/search-results/query.stories.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "BasicQueryStory",
          "type": {
            "text": "Story"
          }
        },
        {
          "kind": "variable",
          "name": "AdvancedQueryStory",
          "type": {
            "text": "Story"
          }
        },
        {
          "kind": "variable",
          "name": "ResultTypeQueryStory",
          "type": {
            "text": "Story"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "src/stories/components/search-results/query.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "BasicQueryStory",
          "declaration": {
            "name": "BasicQueryStory",
            "module": "src/stories/components/search-results/query.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "AdvancedQueryStory",
          "declaration": {
            "name": "AdvancedQueryStory",
            "module": "src/stories/components/search-results/query.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "ResultTypeQueryStory",
          "declaration": {
            "name": "ResultTypeQueryStory",
            "module": "src/stories/components/search-results/query.stories.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/stories/components/search-results/styling.stories.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "CustomItemsTemplateStory",
          "type": {
            "text": "Story"
          }
        },
        {
          "kind": "variable",
          "name": "CustomHeaderTemplateStory",
          "type": {
            "text": "Story"
          }
        },
        {
          "kind": "variable",
          "name": "PagingTemplateStory"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "src/stories/components/search-results/styling.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "CustomItemsTemplateStory",
          "declaration": {
            "name": "CustomItemsTemplateStory",
            "module": "src/stories/components/search-results/styling.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "CustomHeaderTemplateStory",
          "declaration": {
            "name": "CustomHeaderTemplateStory",
            "module": "src/stories/components/search-results/styling.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "PagingTemplateStory",
          "declaration": {
            "name": "PagingTemplateStory",
            "module": "src/stories/components/search-results/styling.stories.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/stories/components/search-box/searchbox.stories.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "BasicUsageStory",
          "type": {
            "text": "Story"
          }
        },
        {
          "kind": "variable",
          "name": "RedirectUrlStory",
          "type": {
            "text": "Story"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "src/stories/components/search-box/searchbox.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "BasicUsageStory",
          "declaration": {
            "name": "BasicUsageStory",
            "module": "src/stories/components/search-box/searchbox.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "RedirectUrlStory",
          "declaration": {
            "name": "RedirectUrlStory",
            "module": "src/stories/components/search-box/searchbox.stories.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/stories/components/search-verticals/verticals.stories.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "BasicUsageStory",
          "type": {
            "text": "Story"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "src/stories/components/search-verticals/verticals.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "BasicUsageStory",
          "declaration": {
            "name": "BasicUsageStory",
            "module": "src/stories/components/search-verticals/verticals.stories.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/stories/components/video-player/video-player.stories.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "BasicUsageStory",
          "type": {
            "text": "Story"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "src/stories/components/video-player/video-player.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "BasicUsageStory",
          "declaration": {
            "name": "BasicUsageStory",
            "module": "src/stories/components/video-player/video-player.stories.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/search-filters/sub-components/search-sort/SearchSortComponent.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "SearchSortComponent",
          "members": [
            {
              "kind": "field",
              "name": "sortProperties",
              "type": {
                "text": "ISortFieldConfiguration[]"
              },
              "default": "[]",
              "description": "Available sort properties and configuration",
              "attribute": "sort-properties"
            },
            {
              "kind": "field",
              "name": "onSort",
              "type": {
                "text": "(sortProperties: ISearchSortProperty[]) => void"
              },
              "description": "Callback handler when the sort properties change",
              "parameters": [
                {
                  "description": "the sort properties",
                  "name": "sortProperties"
                }
              ]
            },
            {
              "kind": "field",
              "name": "selectedFieldName",
              "type": {
                "text": "string"
              },
              "default": "null",
              "description": "The current selected field name in the dropdown list"
            },
            {
              "kind": "field",
              "name": "selectedSortDirection",
              "type": {
                "text": "SortFieldDirection"
              }
            },
            {
              "kind": "field",
              "name": "isExpanded",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "localizedSelectedSortFieldName",
              "type": {
                "text": "string"
              },
              "privacy": "protected",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "strings",
              "type": {
                "text": "{ [x: string]: string; }"
              },
              "privacy": "protected",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "onSelectSort",
              "privacy": "public",
              "parameters": [
                {
                  "name": "sortFieldName",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "sortFieldDirection",
                  "type": {
                    "text": "SortFieldDirection"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getSortIcon",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "setDefaultSortProperty",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "theme",
              "attribute": "theme",
              "reflects": true,
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "enableDebugMode",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Enable the debug to explore data from context",
              "attribute": "enable-debug",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "renderedOnce",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Flag indicating if data have been rendered at least once",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "showDebugData",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "isInitialized",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Property indicating the component has finished its initialization squence, for instance setting default values than can be read from other component\r\nThis property is set as reflected attribute to be able to trigger a mutation for consumer components",
              "attribute": "initialized",
              "reflects": true,
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "_eventHanlders",
              "type": {
                "text": "Map<string, {component: HTMLElement, event: string, handler: EventHandler<any>}>"
              },
              "privacy": "public",
              "default": "new Map<string, {component: HTMLElement, event: string, handler: EventHandler<any>}>()",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "componentError",
              "type": {
                "text": "Error"
              },
              "privacy": "public",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "scopedElements",
              "static": true,
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "themeStyles",
              "static": true,
              "description": "Returns styles from theme (i.e. define CSS variables)",
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderDebugMode",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderDebugData",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "any"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "toggleDebugData",
              "privacy": "private",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "bindComponents",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "parameters": [
                {
                  "name": "bindings",
                  "type": {
                    "text": "IComponentBinding[]"
                  },
                  "description": "the bindings to perform"
                }
              ],
              "description": "Binds all connected to the current one by listening all required events.\r\nThe method will wait for the component to be present on the page after a predefined timeout (default 5000ms)",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "unbindComponents",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "bindings",
                  "type": {
                    "text": "IComponentBinding[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "getTheme",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "description": "Get CSS variables values for the component predefined variables",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "getLocalizedString",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "string",
                  "type": {
                    "text": "ILocalizedString | string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "setFASTColors",
              "privacy": "private",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasPropertyUpdated",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "changedProperties",
                  "type": {
                    "text": "PropertyValueMap<any>"
                  }
                },
                {
                  "name": "propertyName",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "fireCustomEvent",
              "return": {
                "type": {
                  "text": "*"
                }
              },
              "parameters": [
                {
                  "name": "eventName",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "detail",
                  "optional": true,
                  "type": {
                    "text": "*"
                  }
                },
                {
                  "name": "bubbles",
                  "default": "false",
                  "optional": true,
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "name": "cancelable",
                  "default": "false",
                  "optional": true,
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "name": "composed",
                  "default": "false",
                  "optional": true,
                  "type": {
                    "text": "boolean"
                  }
                }
              ],
              "description": "Override of default method to support 'composed' flag",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "timeoutPromise",
              "privacy": "private",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "promise",
                  "type": {
                    "text": "Promise<unknown>"
                  },
                  "description": "the promise to timeout"
                },
                {
                  "name": "timeout",
                  "type": {
                    "text": "number"
                  },
                  "description": "the timeout delay"
                },
                {
                  "name": "exception",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "the exception raised if any error occures"
                }
              ],
              "description": "Allows a promise to be timeout \r\nhttps://advancedweb.hu/how-to-add-timeout-to-a-promise-in-javascript/",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "waitForElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "binding",
                  "type": {
                    "text": "IComponentBinding"
                  },
                  "description": "the binding detail"
                },
                {
                  "name": "timeout",
                  "optional": true,
                  "type": {
                    "text": "number"
                  }
                }
              ],
              "description": "Waits for a component to be present on the page and initialized to perform event binding",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            }
          ],
          "attributes": [
            {
              "name": "sort-properties",
              "type": {
                "text": "ISortFieldConfiguration[]"
              },
              "default": "[]",
              "description": "Available sort properties and configuration",
              "fieldName": "sortProperties"
            },
            {
              "name": "theme",
              "fieldName": "theme",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "name": "enable-debug",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Enable the debug to explore data from context",
              "fieldName": "enableDebugMode",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "name": "initialized",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Property indicating the component has finished its initialization squence, for instance setting default values than can be read from other component\r\nThis property is set as reflected attribute to be able to trigger a mutation for consumer components",
              "fieldName": "isInitialized",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            }
          ],
          "superclass": {
            "name": "BaseComponent",
            "module": "/src/components/BaseComponent"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "SearchSortComponent",
          "declaration": {
            "name": "SearchSortComponent",
            "module": "src/components/search-filters/sub-components/search-sort/SearchSortComponent.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/search-filters/sub-components/filters/BaseFilterComponent.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "BaseFilterComponent",
          "members": [
            {
              "kind": "field",
              "name": "filter",
              "type": {
                "text": "IDataFilterResult"
              },
              "description": "Filter information to display"
            },
            {
              "kind": "field",
              "name": "filterConfiguration",
              "type": {
                "text": "IDataFilterConfiguration"
              },
              "description": "Filter confguration"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "description": "Flag indicating if the filter should be disabled"
            },
            {
              "kind": "field",
              "name": "onFilterUpdated",
              "type": {
                "text": "(filterName: string, filterValue: IDataFilterValue, selected: boolean) => void"
              },
              "description": "Callback function when a filter is selected",
              "attribute": "onFilterUpdated"
            },
            {
              "kind": "field",
              "name": "onApplyFilters",
              "type": {
                "text": "(filterName: string) => void"
              },
              "description": "Callback function when filters are submitted",
              "attribute": "onApplyFilters"
            },
            {
              "kind": "field",
              "name": "isExpanded",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "selectedValues",
              "type": {
                "text": "IDataFilterValue[]"
              },
              "default": "[]",
              "description": "The current selected values in the component"
            },
            {
              "kind": "field",
              "name": "submittedFilterValues",
              "type": {
                "text": "IDataFilterValue[]"
              },
              "privacy": "public",
              "description": "The submitted filter values",
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "localizedFilterName",
              "type": {
                "text": "string"
              },
              "privacy": "protected",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "canApplyValues",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "description": "Flag indicating if the selected values can be applied as filters",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "resetSelectedValues",
              "privacy": "protected",
              "description": "Reset all selected values for the current filter in the UI.\r\nCan be called from parent components"
            },
            {
              "kind": "method",
              "name": "clearSelectedValues",
              "privacy": "public",
              "parameters": [
                {
                  "name": "preventApply",
                  "optional": true,
                  "type": {
                    "text": "boolean"
                  },
                  "description": "Set true if you want to prevent new values to be submitted for that filter"
                }
              ],
              "description": "Clear all selected values in the UI and submit empty filters to connected components"
            },
            {
              "kind": "method",
              "name": "onItemUpdated",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "filterValue",
                  "type": {
                    "text": "IDataFilterValue"
                  }
                },
                {
                  "name": "selected",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "isSelectedValue",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "key",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderFilterContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult"
                }
              },
              "description": "The filter content to be implemented by concrete classes"
            },
            {
              "kind": "method",
              "name": "applyFilters",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "processAggregations",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "values",
                  "type": {
                    "text": "IDataFilterResultValue[]"
                  },
                  "description": "the original filter values received from the results"
                }
              ],
              "description": "Process manual filter aggregations according to matched values from configuration"
            },
            {
              "kind": "method",
              "name": "closeMenu",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "toggleMenu",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "blurMenu",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "MouseEvent"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "theme",
              "attribute": "theme",
              "reflects": true,
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "enableDebugMode",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Enable the debug to explore data from context",
              "attribute": "enable-debug",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "renderedOnce",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Flag indicating if data have been rendered at least once",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "showDebugData",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "isInitialized",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Property indicating the component has finished its initialization squence, for instance setting default values than can be read from other component\r\nThis property is set as reflected attribute to be able to trigger a mutation for consumer components",
              "attribute": "initialized",
              "reflects": true,
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "_eventHanlders",
              "type": {
                "text": "Map<string, {component: HTMLElement, event: string, handler: EventHandler<any>}>"
              },
              "privacy": "public",
              "default": "new Map<string, {component: HTMLElement, event: string, handler: EventHandler<any>}>()",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "componentError",
              "type": {
                "text": "Error"
              },
              "privacy": "public",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "scopedElements",
              "static": true,
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "themeStyles",
              "static": true,
              "description": "Returns styles from theme (i.e. define CSS variables)",
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderDebugMode",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderDebugData",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "any"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "toggleDebugData",
              "privacy": "private",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "bindComponents",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "parameters": [
                {
                  "name": "bindings",
                  "type": {
                    "text": "IComponentBinding[]"
                  },
                  "description": "the bindings to perform"
                }
              ],
              "description": "Binds all connected to the current one by listening all required events.\r\nThe method will wait for the component to be present on the page after a predefined timeout (default 5000ms)",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "unbindComponents",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "bindings",
                  "type": {
                    "text": "IComponentBinding[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "getTheme",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "description": "Get CSS variables values for the component predefined variables",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "getLocalizedString",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "string",
                  "type": {
                    "text": "ILocalizedString | string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "setFASTColors",
              "privacy": "private",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasPropertyUpdated",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "changedProperties",
                  "type": {
                    "text": "PropertyValueMap<any>"
                  }
                },
                {
                  "name": "propertyName",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "fireCustomEvent",
              "return": {
                "type": {
                  "text": "*"
                }
              },
              "parameters": [
                {
                  "name": "eventName",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "detail",
                  "optional": true,
                  "type": {
                    "text": "*"
                  }
                },
                {
                  "name": "bubbles",
                  "default": "false",
                  "optional": true,
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "name": "cancelable",
                  "default": "false",
                  "optional": true,
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "name": "composed",
                  "default": "false",
                  "optional": true,
                  "type": {
                    "text": "boolean"
                  }
                }
              ],
              "description": "Override of default method to support 'composed' flag",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "timeoutPromise",
              "privacy": "private",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "promise",
                  "type": {
                    "text": "Promise<unknown>"
                  },
                  "description": "the promise to timeout"
                },
                {
                  "name": "timeout",
                  "type": {
                    "text": "number"
                  },
                  "description": "the timeout delay"
                },
                {
                  "name": "exception",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "the exception raised if any error occures"
                }
              ],
              "description": "Allows a promise to be timeout \r\nhttps://advancedweb.hu/how-to-add-timeout-to-a-promise-in-javascript/",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "waitForElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "binding",
                  "type": {
                    "text": "IComponentBinding"
                  },
                  "description": "the binding detail"
                },
                {
                  "name": "timeout",
                  "optional": true,
                  "type": {
                    "text": "number"
                  }
                }
              ],
              "description": "Waits for a component to be present on the page and initialized to perform event binding",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            }
          ],
          "attributes": [
            {
              "name": "onFilterUpdated",
              "type": {
                "text": "(filterName: string, filterValue: IDataFilterValue, selected: boolean) => void"
              },
              "description": "Callback function when a filter is selected",
              "fieldName": "onFilterUpdated"
            },
            {
              "name": "onApplyFilters",
              "type": {
                "text": "(filterName: string) => void"
              },
              "description": "Callback function when filters are submitted",
              "fieldName": "onApplyFilters"
            },
            {
              "name": "theme",
              "fieldName": "theme",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "name": "enable-debug",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Enable the debug to explore data from context",
              "fieldName": "enableDebugMode",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "name": "initialized",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Property indicating the component has finished its initialization squence, for instance setting default values than can be read from other component\r\nThis property is set as reflected attribute to be able to trigger a mutation for consumer components",
              "fieldName": "isInitialized",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            }
          ],
          "superclass": {
            "name": "BaseComponent",
            "module": "/src/components/BaseComponent"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BaseFilterComponent",
          "declaration": {
            "name": "BaseFilterComponent",
            "module": "src/components/search-filters/sub-components/filters/BaseFilterComponent.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/search-results/sub-components/error-message/ErrorMessageComponent.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ErrorMessageComponent",
          "members": [
            {
              "kind": "field",
              "name": "error",
              "type": {
                "text": "Error"
              },
              "attribute": "error"
            },
            {
              "kind": "field",
              "name": "strings",
              "type": {
                "text": "{ [x: string]: string; }"
              },
              "privacy": "protected",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "theme",
              "attribute": "theme",
              "reflects": true,
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "enableDebugMode",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Enable the debug to explore data from context",
              "attribute": "enable-debug",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "renderedOnce",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Flag indicating if data have been rendered at least once",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "showDebugData",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "isInitialized",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Property indicating the component has finished its initialization squence, for instance setting default values than can be read from other component\r\nThis property is set as reflected attribute to be able to trigger a mutation for consumer components",
              "attribute": "initialized",
              "reflects": true,
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "_eventHanlders",
              "type": {
                "text": "Map<string, {component: HTMLElement, event: string, handler: EventHandler<any>}>"
              },
              "privacy": "public",
              "default": "new Map<string, {component: HTMLElement, event: string, handler: EventHandler<any>}>()",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "componentError",
              "type": {
                "text": "Error"
              },
              "privacy": "public",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "scopedElements",
              "static": true,
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "themeStyles",
              "static": true,
              "description": "Returns styles from theme (i.e. define CSS variables)",
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderDebugMode",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderDebugData",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "any"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "toggleDebugData",
              "privacy": "private",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "bindComponents",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "parameters": [
                {
                  "name": "bindings",
                  "type": {
                    "text": "IComponentBinding[]"
                  },
                  "description": "the bindings to perform"
                }
              ],
              "description": "Binds all connected to the current one by listening all required events.\r\nThe method will wait for the component to be present on the page after a predefined timeout (default 5000ms)",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "unbindComponents",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "bindings",
                  "type": {
                    "text": "IComponentBinding[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "getTheme",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "description": "Get CSS variables values for the component predefined variables",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "getLocalizedString",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "string",
                  "type": {
                    "text": "ILocalizedString | string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "setFASTColors",
              "privacy": "private",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasPropertyUpdated",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "changedProperties",
                  "type": {
                    "text": "PropertyValueMap<any>"
                  }
                },
                {
                  "name": "propertyName",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "fireCustomEvent",
              "return": {
                "type": {
                  "text": "*"
                }
              },
              "parameters": [
                {
                  "name": "eventName",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "detail",
                  "optional": true,
                  "type": {
                    "text": "*"
                  }
                },
                {
                  "name": "bubbles",
                  "default": "false",
                  "optional": true,
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "name": "cancelable",
                  "default": "false",
                  "optional": true,
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "name": "composed",
                  "default": "false",
                  "optional": true,
                  "type": {
                    "text": "boolean"
                  }
                }
              ],
              "description": "Override of default method to support 'composed' flag",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "timeoutPromise",
              "privacy": "private",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "promise",
                  "type": {
                    "text": "Promise<unknown>"
                  },
                  "description": "the promise to timeout"
                },
                {
                  "name": "timeout",
                  "type": {
                    "text": "number"
                  },
                  "description": "the timeout delay"
                },
                {
                  "name": "exception",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "the exception raised if any error occures"
                }
              ],
              "description": "Allows a promise to be timeout \r\nhttps://advancedweb.hu/how-to-add-timeout-to-a-promise-in-javascript/",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "waitForElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "binding",
                  "type": {
                    "text": "IComponentBinding"
                  },
                  "description": "the binding detail"
                },
                {
                  "name": "timeout",
                  "optional": true,
                  "type": {
                    "text": "number"
                  }
                }
              ],
              "description": "Waits for a component to be present on the page and initialized to perform event binding",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            }
          ],
          "attributes": [
            {
              "name": "error",
              "type": {
                "text": "Error"
              },
              "fieldName": "error"
            },
            {
              "name": "theme",
              "fieldName": "theme",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "name": "enable-debug",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Enable the debug to explore data from context",
              "fieldName": "enableDebugMode",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "name": "initialized",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Property indicating the component has finished its initialization squence, for instance setting default values than can be read from other component\r\nThis property is set as reflected attribute to be able to trigger a mutation for consumer components",
              "fieldName": "isInitialized",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            }
          ],
          "superclass": {
            "name": "BaseComponent",
            "module": "/src/components/BaseComponent"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ErrorMessageComponent",
          "declaration": {
            "name": "ErrorMessageComponent",
            "module": "src/components/search-results/sub-components/error-message/ErrorMessageComponent.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/search-results/sub-components/monaco-editor/MonacoEditorComponent.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "MonacoEditorComponent",
          "members": [
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "IDataSourceData"
              },
              "attribute": "value"
            },
            {
              "kind": "field",
              "name": "editor",
              "type": {
                "text": "editor.IStandaloneCodeEditor"
              },
              "default": "null"
            },
            {
              "kind": "method",
              "name": "createEditor",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "theme",
              "attribute": "theme",
              "reflects": true,
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "enableDebugMode",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Enable the debug to explore data from context",
              "attribute": "enable-debug",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "renderedOnce",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Flag indicating if data have been rendered at least once",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "showDebugData",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "isInitialized",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Property indicating the component has finished its initialization squence, for instance setting default values than can be read from other component\r\nThis property is set as reflected attribute to be able to trigger a mutation for consumer components",
              "attribute": "initialized",
              "reflects": true,
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "_eventHanlders",
              "type": {
                "text": "Map<string, {component: HTMLElement, event: string, handler: EventHandler<any>}>"
              },
              "privacy": "public",
              "default": "new Map<string, {component: HTMLElement, event: string, handler: EventHandler<any>}>()",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "componentError",
              "type": {
                "text": "Error"
              },
              "privacy": "public",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "scopedElements",
              "static": true,
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "themeStyles",
              "static": true,
              "description": "Returns styles from theme (i.e. define CSS variables)",
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderDebugMode",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderDebugData",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "any"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "toggleDebugData",
              "privacy": "private",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "bindComponents",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "parameters": [
                {
                  "name": "bindings",
                  "type": {
                    "text": "IComponentBinding[]"
                  },
                  "description": "the bindings to perform"
                }
              ],
              "description": "Binds all connected to the current one by listening all required events.\r\nThe method will wait for the component to be present on the page after a predefined timeout (default 5000ms)",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "unbindComponents",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "bindings",
                  "type": {
                    "text": "IComponentBinding[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "getTheme",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "description": "Get CSS variables values for the component predefined variables",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "getLocalizedString",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "string",
                  "type": {
                    "text": "ILocalizedString | string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "setFASTColors",
              "privacy": "private",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasPropertyUpdated",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "changedProperties",
                  "type": {
                    "text": "PropertyValueMap<any>"
                  }
                },
                {
                  "name": "propertyName",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "fireCustomEvent",
              "return": {
                "type": {
                  "text": "*"
                }
              },
              "parameters": [
                {
                  "name": "eventName",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "detail",
                  "optional": true,
                  "type": {
                    "text": "*"
                  }
                },
                {
                  "name": "bubbles",
                  "default": "false",
                  "optional": true,
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "name": "cancelable",
                  "default": "false",
                  "optional": true,
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "name": "composed",
                  "default": "false",
                  "optional": true,
                  "type": {
                    "text": "boolean"
                  }
                }
              ],
              "description": "Override of default method to support 'composed' flag",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "timeoutPromise",
              "privacy": "private",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "promise",
                  "type": {
                    "text": "Promise<unknown>"
                  },
                  "description": "the promise to timeout"
                },
                {
                  "name": "timeout",
                  "type": {
                    "text": "number"
                  },
                  "description": "the timeout delay"
                },
                {
                  "name": "exception",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "the exception raised if any error occures"
                }
              ],
              "description": "Allows a promise to be timeout \r\nhttps://advancedweb.hu/how-to-add-timeout-to-a-promise-in-javascript/",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "waitForElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "binding",
                  "type": {
                    "text": "IComponentBinding"
                  },
                  "description": "the binding detail"
                },
                {
                  "name": "timeout",
                  "optional": true,
                  "type": {
                    "text": "number"
                  }
                }
              ],
              "description": "Waits for a component to be present on the page and initialized to perform event binding",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            }
          ],
          "attributes": [
            {
              "name": "value",
              "type": {
                "text": "IDataSourceData"
              },
              "fieldName": "value"
            },
            {
              "name": "theme",
              "fieldName": "theme",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "name": "enable-debug",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Enable the debug to explore data from context",
              "fieldName": "enableDebugMode",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "name": "initialized",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Property indicating the component has finished its initialization squence, for instance setting default values than can be read from other component\r\nThis property is set as reflected attribute to be able to trigger a mutation for consumer components",
              "fieldName": "isInitialized",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            }
          ],
          "superclass": {
            "name": "BaseComponent",
            "module": "/src/components/BaseComponent"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "MonacoEditorComponent",
          "declaration": {
            "name": "MonacoEditorComponent",
            "module": "src/components/search-results/sub-components/monaco-editor/MonacoEditorComponent.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/search-results/sub-components/pagination/PaginationComponent.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "PaginationComponent",
          "members": [
            {
              "kind": "field",
              "name": "totalItems",
              "type": {
                "text": "number"
              },
              "description": "The total number of items retrieved from the data source if known."
            },
            {
              "kind": "field",
              "name": "itemsCountPerPage",
              "type": {
                "text": "number"
              },
              "description": "The number of items per page"
            },
            {
              "kind": "field",
              "name": "numberOfPagesToDisplay",
              "type": {
                "text": "number"
              },
              "description": "The number of pages to display in range"
            },
            {
              "kind": "field",
              "name": "onPageNumberUpdated",
              "type": {
                "text": "(pageNumber: number) => void"
              },
              "description": "Handler when a new page is selected"
            },
            {
              "kind": "field",
              "name": "currentPageNumber",
              "type": {
                "text": "number"
              },
              "default": "1",
              "description": "The current page number. Always start from 1"
            },
            {
              "kind": "field",
              "name": "currentRangeStart",
              "type": {
                "text": "number"
              },
              "description": "The current page range start to show"
            },
            {
              "kind": "field",
              "name": "currentRangeEnd",
              "type": {
                "text": "number"
              },
              "description": "The current page range end to show"
            },
            {
              "kind": "field",
              "name": "numberOfPages",
              "type": {
                "text": "number"
              },
              "description": "The total number of pages available"
            },
            {
              "kind": "method",
              "name": "initPagination",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "getButtonClass",
              "privacy": "private",
              "parameters": [
                {
                  "name": "pageNumber",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "setPageNumber",
              "privacy": "public",
              "parameters": [
                {
                  "name": "pageNumber",
                  "type": {
                    "text": "number"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "nextPage",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "previousPage",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "strings",
              "type": {
                "text": "{ [x: string]: any ; }"
              },
              "privacy": "protected",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "theme",
              "attribute": "theme",
              "reflects": true,
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "enableDebugMode",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Enable the debug to explore data from context",
              "attribute": "enable-debug",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "renderedOnce",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Flag indicating if data have been rendered at least once",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "showDebugData",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "isInitialized",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Property indicating the component has finished its initialization squence, for instance setting default values than can be read from other component\r\nThis property is set as reflected attribute to be able to trigger a mutation for consumer components",
              "attribute": "initialized",
              "reflects": true,
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "_eventHanlders",
              "type": {
                "text": "Map<string, {component: HTMLElement, event: string, handler: EventHandler<any>}>"
              },
              "privacy": "public",
              "default": "new Map<string, {component: HTMLElement, event: string, handler: EventHandler<any>}>()",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "componentError",
              "type": {
                "text": "Error"
              },
              "privacy": "public",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "scopedElements",
              "static": true,
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "themeStyles",
              "static": true,
              "description": "Returns styles from theme (i.e. define CSS variables)",
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderDebugMode",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderDebugData",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "any"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "toggleDebugData",
              "privacy": "private",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "bindComponents",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "parameters": [
                {
                  "name": "bindings",
                  "type": {
                    "text": "IComponentBinding[]"
                  },
                  "description": "the bindings to perform"
                }
              ],
              "description": "Binds all connected to the current one by listening all required events.\r\nThe method will wait for the component to be present on the page after a predefined timeout (default 5000ms)",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "unbindComponents",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "bindings",
                  "type": {
                    "text": "IComponentBinding[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "getTheme",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "description": "Get CSS variables values for the component predefined variables",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "getLocalizedString",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "string",
                  "type": {
                    "text": "ILocalizedString | string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "setFASTColors",
              "privacy": "private",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasPropertyUpdated",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "changedProperties",
                  "type": {
                    "text": "PropertyValueMap<any>"
                  }
                },
                {
                  "name": "propertyName",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "fireCustomEvent",
              "return": {
                "type": {
                  "text": "*"
                }
              },
              "parameters": [
                {
                  "name": "eventName",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "detail",
                  "optional": true,
                  "type": {
                    "text": "*"
                  }
                },
                {
                  "name": "bubbles",
                  "default": "false",
                  "optional": true,
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "name": "cancelable",
                  "default": "false",
                  "optional": true,
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "name": "composed",
                  "default": "false",
                  "optional": true,
                  "type": {
                    "text": "boolean"
                  }
                }
              ],
              "description": "Override of default method to support 'composed' flag",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "timeoutPromise",
              "privacy": "private",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "promise",
                  "type": {
                    "text": "Promise<unknown>"
                  },
                  "description": "the promise to timeout"
                },
                {
                  "name": "timeout",
                  "type": {
                    "text": "number"
                  },
                  "description": "the timeout delay"
                },
                {
                  "name": "exception",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "the exception raised if any error occures"
                }
              ],
              "description": "Allows a promise to be timeout \r\nhttps://advancedweb.hu/how-to-add-timeout-to-a-promise-in-javascript/",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "waitForElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "binding",
                  "type": {
                    "text": "IComponentBinding"
                  },
                  "description": "the binding detail"
                },
                {
                  "name": "timeout",
                  "optional": true,
                  "type": {
                    "text": "number"
                  }
                }
              ],
              "description": "Waits for a component to be present on the page and initialized to perform event binding",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            }
          ],
          "superclass": {
            "name": "BaseComponent",
            "module": "/src/components/BaseComponent"
          },
          "attributes": [
            {
              "name": "theme",
              "fieldName": "theme",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "name": "enable-debug",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Enable the debug to explore data from context",
              "fieldName": "enableDebugMode",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "name": "initialized",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Property indicating the component has finished its initialization squence, for instance setting default values than can be read from other component\r\nThis property is set as reflected attribute to be able to trigger a mutation for consumer components",
              "fieldName": "isInitialized",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PaginationComponent",
          "declaration": {
            "name": "PaginationComponent",
            "module": "src/components/search-results/sub-components/pagination/PaginationComponent.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/search-filters/sub-components/search-sort/tests/mocks.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "sortFieldsConfiguration",
          "type": {
            "text": "ISortFieldConfiguration[]"
          },
          "default": "[\r\n    {\r\n      \"sortField\": \"LastModifiedTime\",\r\n      \"sortDirection\": SortFieldDirection.Descending,\r\n      \"isDefaultSort\": false,\r\n      \"isUserSort\": true,\r\n      \"sortFieldDisplayName\": {\r\n        \"fr-fr\": \"Date de modification\",\r\n        \"default\": \"Last modified\"\r\n      }\r\n    },  \r\n    {\r\n      \"sortField\": \"Created\",\r\n      \"sortDirection\": SortFieldDirection.Ascending,\r\n      \"isDefaultSort\": true,\r\n      \"isUserSort\": true,\r\n      \"sortFieldDisplayName\": {\r\n        \"fr-fr\": \"Date de création\",\r\n        \"default\": \"Created\"\r\n      }\r\n    }\r\n]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "sortFieldsConfiguration",
          "declaration": {
            "name": "sortFieldsConfiguration",
            "module": "src/components/search-filters/sub-components/search-sort/tests/mocks.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/search-filters/sub-components/filters/checkbox-filter/CheckboxFilterComponent.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "CheckboxFilterComponent",
          "members": [
            {
              "kind": "field",
              "name": "searchKeyword",
              "type": {
                "text": "string"
              }
            },
            {
              "kind": "field",
              "name": "filteredValues",
              "type": {
                "text": "IDataFilterResultValue[]"
              },
              "default": "[]",
              "description": "List of filtered values"
            },
            {
              "kind": "field",
              "name": "startOffset",
              "type": {
                "text": "number"
              },
              "default": "0"
            },
            {
              "kind": "field",
              "name": "pageSize",
              "type": {
                "text": "number"
              },
              "description": "Number of items to be displayed in the menu. Limit this number to increase performances",
              "default": "50"
            },
            {
              "kind": "field",
              "name": "scopedElements",
              "static": true,
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderFilterContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult"
                }
              },
              "description": "The filter content to be implemented by concrete classes",
              "inheritedFrom": {
                "name": "BaseFilterComponent",
                "module": "src/components/search-filters/sub-components/filters/BaseFilterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "strings",
              "type": {
                "text": "{ [x: string]: string; }"
              },
              "privacy": "protected",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "filterValues",
              "privacy": "public",
              "parameters": [
                {
                  "name": "value",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "sortBySelectedValues",
              "privacy": "private",
              "parameters": [
                {
                  "name": "filters",
                  "type": {
                    "text": "IDataFilterResultValue[]"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "highlightMatches",
              "privacy": "private",
              "parameters": [
                {
                  "name": "value",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "clearSearchKeywords",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "onScroll",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "getFilterAggregation",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "IDataFilterAggregation"
                }
              },
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "filter",
              "type": {
                "text": "IDataFilterResult"
              },
              "description": "Filter information to display",
              "inheritedFrom": {
                "name": "BaseFilterComponent",
                "module": "src/components/search-filters/sub-components/filters/BaseFilterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "filterConfiguration",
              "type": {
                "text": "IDataFilterConfiguration"
              },
              "description": "Filter confguration",
              "inheritedFrom": {
                "name": "BaseFilterComponent",
                "module": "src/components/search-filters/sub-components/filters/BaseFilterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "description": "Flag indicating if the filter should be disabled",
              "inheritedFrom": {
                "name": "BaseFilterComponent",
                "module": "src/components/search-filters/sub-components/filters/BaseFilterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "onFilterUpdated",
              "type": {
                "text": "(filterName: string, filterValue: IDataFilterValue, selected: boolean) => void"
              },
              "description": "Callback function when a filter is selected",
              "attribute": "onFilterUpdated",
              "inheritedFrom": {
                "name": "BaseFilterComponent",
                "module": "src/components/search-filters/sub-components/filters/BaseFilterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "onApplyFilters",
              "type": {
                "text": "(filterName: string) => void"
              },
              "description": "Callback function when filters are submitted",
              "attribute": "onApplyFilters",
              "inheritedFrom": {
                "name": "BaseFilterComponent",
                "module": "src/components/search-filters/sub-components/filters/BaseFilterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "isExpanded",
              "type": {
                "text": "boolean"
              },
              "inheritedFrom": {
                "name": "BaseFilterComponent",
                "module": "src/components/search-filters/sub-components/filters/BaseFilterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "selectedValues",
              "type": {
                "text": "IDataFilterValue[]"
              },
              "default": "[]",
              "description": "The current selected values in the component",
              "inheritedFrom": {
                "name": "BaseFilterComponent",
                "module": "src/components/search-filters/sub-components/filters/BaseFilterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "submittedFilterValues",
              "type": {
                "text": "IDataFilterValue[]"
              },
              "privacy": "public",
              "description": "The submitted filter values",
              "default": "[]",
              "inheritedFrom": {
                "name": "BaseFilterComponent",
                "module": "src/components/search-filters/sub-components/filters/BaseFilterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "localizedFilterName",
              "type": {
                "text": "string"
              },
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseFilterComponent",
                "module": "src/components/search-filters/sub-components/filters/BaseFilterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "canApplyValues",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "description": "Flag indicating if the selected values can be applied as filters",
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseFilterComponent",
                "module": "src/components/search-filters/sub-components/filters/BaseFilterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "resetSelectedValues",
              "privacy": "protected",
              "description": "Reset all selected values for the current filter in the UI.\r\nCan be called from parent components",
              "inheritedFrom": {
                "name": "BaseFilterComponent",
                "module": "src/components/search-filters/sub-components/filters/BaseFilterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "clearSelectedValues",
              "privacy": "public",
              "parameters": [
                {
                  "name": "preventApply",
                  "optional": true,
                  "type": {
                    "text": "boolean"
                  },
                  "description": "Set true if you want to prevent new values to be submitted for that filter"
                }
              ],
              "description": "Clear all selected values in the UI and submit empty filters to connected components",
              "inheritedFrom": {
                "name": "BaseFilterComponent",
                "module": "src/components/search-filters/sub-components/filters/BaseFilterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "onItemUpdated",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "filterValue",
                  "type": {
                    "text": "IDataFilterValue"
                  }
                },
                {
                  "name": "selected",
                  "type": {
                    "text": "boolean"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "BaseFilterComponent",
                "module": "src/components/search-filters/sub-components/filters/BaseFilterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "isSelectedValue",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "key",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "BaseFilterComponent",
                "module": "src/components/search-filters/sub-components/filters/BaseFilterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "applyFilters",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseFilterComponent",
                "module": "src/components/search-filters/sub-components/filters/BaseFilterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "processAggregations",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "values",
                  "type": {
                    "text": "IDataFilterResultValue[]"
                  },
                  "description": "the original filter values received from the results"
                }
              ],
              "description": "Process manual filter aggregations according to matched values from configuration",
              "inheritedFrom": {
                "name": "BaseFilterComponent",
                "module": "src/components/search-filters/sub-components/filters/BaseFilterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "closeMenu",
              "privacy": "public",
              "inheritedFrom": {
                "name": "BaseFilterComponent",
                "module": "src/components/search-filters/sub-components/filters/BaseFilterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "toggleMenu",
              "privacy": "public",
              "inheritedFrom": {
                "name": "BaseFilterComponent",
                "module": "src/components/search-filters/sub-components/filters/BaseFilterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "blurMenu",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "MouseEvent"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "BaseFilterComponent",
                "module": "src/components/search-filters/sub-components/filters/BaseFilterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "theme",
              "attribute": "theme",
              "reflects": true,
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "enableDebugMode",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Enable the debug to explore data from context",
              "attribute": "enable-debug",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "renderedOnce",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Flag indicating if data have been rendered at least once",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "showDebugData",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "isInitialized",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Property indicating the component has finished its initialization squence, for instance setting default values than can be read from other component\r\nThis property is set as reflected attribute to be able to trigger a mutation for consumer components",
              "attribute": "initialized",
              "reflects": true,
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "_eventHanlders",
              "type": {
                "text": "Map<string, {component: HTMLElement, event: string, handler: EventHandler<any>}>"
              },
              "privacy": "public",
              "default": "new Map<string, {component: HTMLElement, event: string, handler: EventHandler<any>}>()",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "componentError",
              "type": {
                "text": "Error"
              },
              "privacy": "public",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "themeStyles",
              "static": true,
              "description": "Returns styles from theme (i.e. define CSS variables)",
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderDebugMode",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderDebugData",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "any"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "toggleDebugData",
              "privacy": "private",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "bindComponents",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "parameters": [
                {
                  "name": "bindings",
                  "type": {
                    "text": "IComponentBinding[]"
                  },
                  "description": "the bindings to perform"
                }
              ],
              "description": "Binds all connected to the current one by listening all required events.\r\nThe method will wait for the component to be present on the page after a predefined timeout (default 5000ms)",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "unbindComponents",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "bindings",
                  "type": {
                    "text": "IComponentBinding[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "getTheme",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "description": "Get CSS variables values for the component predefined variables",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "getLocalizedString",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "string",
                  "type": {
                    "text": "ILocalizedString | string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "setFASTColors",
              "privacy": "private",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasPropertyUpdated",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "changedProperties",
                  "type": {
                    "text": "PropertyValueMap<any>"
                  }
                },
                {
                  "name": "propertyName",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "fireCustomEvent",
              "return": {
                "type": {
                  "text": "*"
                }
              },
              "parameters": [
                {
                  "name": "eventName",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "detail",
                  "optional": true,
                  "type": {
                    "text": "*"
                  }
                },
                {
                  "name": "bubbles",
                  "default": "false",
                  "optional": true,
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "name": "cancelable",
                  "default": "false",
                  "optional": true,
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "name": "composed",
                  "default": "false",
                  "optional": true,
                  "type": {
                    "text": "boolean"
                  }
                }
              ],
              "description": "Override of default method to support 'composed' flag",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "timeoutPromise",
              "privacy": "private",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "promise",
                  "type": {
                    "text": "Promise<unknown>"
                  },
                  "description": "the promise to timeout"
                },
                {
                  "name": "timeout",
                  "type": {
                    "text": "number"
                  },
                  "description": "the timeout delay"
                },
                {
                  "name": "exception",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "the exception raised if any error occures"
                }
              ],
              "description": "Allows a promise to be timeout \r\nhttps://advancedweb.hu/how-to-add-timeout-to-a-promise-in-javascript/",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "waitForElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "binding",
                  "type": {
                    "text": "IComponentBinding"
                  },
                  "description": "the binding detail"
                },
                {
                  "name": "timeout",
                  "optional": true,
                  "type": {
                    "text": "number"
                  }
                }
              ],
              "description": "Waits for a component to be present on the page and initialized to perform event binding",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            }
          ],
          "superclass": {
            "name": "BaseFilterComponent",
            "module": "/src/components/search-filters/sub-components/filters/BaseFilterComponent"
          },
          "attributes": [
            {
              "name": "onFilterUpdated",
              "type": {
                "text": "(filterName: string, filterValue: IDataFilterValue, selected: boolean) => void"
              },
              "description": "Callback function when a filter is selected",
              "fieldName": "onFilterUpdated",
              "inheritedFrom": {
                "name": "BaseFilterComponent",
                "module": "src/components/search-filters/sub-components/filters/BaseFilterComponent.ts"
              }
            },
            {
              "name": "onApplyFilters",
              "type": {
                "text": "(filterName: string) => void"
              },
              "description": "Callback function when filters are submitted",
              "fieldName": "onApplyFilters",
              "inheritedFrom": {
                "name": "BaseFilterComponent",
                "module": "src/components/search-filters/sub-components/filters/BaseFilterComponent.ts"
              }
            },
            {
              "name": "theme",
              "fieldName": "theme",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "name": "enable-debug",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Enable the debug to explore data from context",
              "fieldName": "enableDebugMode",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "name": "initialized",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Property indicating the component has finished its initialization squence, for instance setting default values than can be read from other component\r\nThis property is set as reflected attribute to be able to trigger a mutation for consumer components",
              "fieldName": "isInitialized",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CheckboxFilterComponent",
          "declaration": {
            "name": "CheckboxFilterComponent",
            "module": "src/components/search-filters/sub-components/filters/checkbox-filter/CheckboxFilterComponent.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/search-filters/sub-components/filters/date-filter/DateFilterComponent.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "DateFilterComponent",
          "members": [
            {
              "kind": "field",
              "name": "dayJs",
              "type": {
                "text": "any"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "dateHelper",
              "type": {
                "text": "DateHelper"
              },
              "privacy": "private",
              "default": "new DateHelper()"
            },
            {
              "kind": "field",
              "name": "scopedElements",
              "static": true,
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "fromDate",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "toDate",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "renderFilterContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult"
                }
              },
              "description": "The filter content to be implemented by concrete classes",
              "inheritedFrom": {
                "name": "BaseFilterComponent",
                "module": "src/components/search-filters/sub-components/filters/BaseFilterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "strings",
              "type": {
                "text": "{ [x: string]: string; }"
              },
              "privacy": "protected",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "updateFilterValuesKey",
              "privacy": "private",
              "parameters": [
                {
                  "name": "values",
                  "type": {
                    "text": "IDataFilterResultValue[]"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_getIntervalDate",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Date"
                }
              },
              "parameters": [
                {
                  "name": "unit",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "count",
                  "type": {
                    "text": "number"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_getIntervalDateFromStartDate",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Date"
                }
              },
              "parameters": [
                {
                  "name": "startDate",
                  "type": {
                    "text": "Date"
                  }
                },
                {
                  "name": "unit",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "count",
                  "type": {
                    "text": "number"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_getIntervalForValue",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string"
                }
              },
              "parameters": [
                {
                  "name": "filterValue",
                  "type": {
                    "text": "IDataFilterValue"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_getIntervalFromDateString",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "DateFilterInterval"
                }
              },
              "parameters": [
                {
                  "name": "dateAsString",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onUpdateFromDate",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "InputEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onUpdateToDate",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "kind": "method",
              "name": "applyDateFilters",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "getDateValue",
              "privacy": "private",
              "parameters": [
                {
                  "name": "dateKey",
                  "type": {
                    "text": "DateFilterKeys"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getAllIntervals",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "filter",
              "type": {
                "text": "IDataFilterResult"
              },
              "description": "Filter information to display",
              "inheritedFrom": {
                "name": "BaseFilterComponent",
                "module": "src/components/search-filters/sub-components/filters/BaseFilterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "filterConfiguration",
              "type": {
                "text": "IDataFilterConfiguration"
              },
              "description": "Filter confguration",
              "inheritedFrom": {
                "name": "BaseFilterComponent",
                "module": "src/components/search-filters/sub-components/filters/BaseFilterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "description": "Flag indicating if the filter should be disabled",
              "inheritedFrom": {
                "name": "BaseFilterComponent",
                "module": "src/components/search-filters/sub-components/filters/BaseFilterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "onFilterUpdated",
              "type": {
                "text": "(filterName: string, filterValue: IDataFilterValue, selected: boolean) => void"
              },
              "description": "Callback function when a filter is selected",
              "attribute": "onFilterUpdated",
              "inheritedFrom": {
                "name": "BaseFilterComponent",
                "module": "src/components/search-filters/sub-components/filters/BaseFilterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "onApplyFilters",
              "type": {
                "text": "(filterName: string) => void"
              },
              "description": "Callback function when filters are submitted",
              "attribute": "onApplyFilters",
              "inheritedFrom": {
                "name": "BaseFilterComponent",
                "module": "src/components/search-filters/sub-components/filters/BaseFilterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "isExpanded",
              "type": {
                "text": "boolean"
              },
              "inheritedFrom": {
                "name": "BaseFilterComponent",
                "module": "src/components/search-filters/sub-components/filters/BaseFilterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "selectedValues",
              "type": {
                "text": "IDataFilterValue[]"
              },
              "default": "[]",
              "description": "The current selected values in the component",
              "inheritedFrom": {
                "name": "BaseFilterComponent",
                "module": "src/components/search-filters/sub-components/filters/BaseFilterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "submittedFilterValues",
              "type": {
                "text": "IDataFilterValue[]"
              },
              "privacy": "public",
              "description": "The submitted filter values",
              "default": "[]",
              "inheritedFrom": {
                "name": "BaseFilterComponent",
                "module": "src/components/search-filters/sub-components/filters/BaseFilterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "localizedFilterName",
              "type": {
                "text": "string"
              },
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseFilterComponent",
                "module": "src/components/search-filters/sub-components/filters/BaseFilterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "canApplyValues",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "description": "Flag indicating if the selected values can be applied as filters",
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseFilterComponent",
                "module": "src/components/search-filters/sub-components/filters/BaseFilterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "resetSelectedValues",
              "privacy": "protected",
              "description": "Reset all selected values for the current filter in the UI.\r\nCan be called from parent components",
              "inheritedFrom": {
                "name": "BaseFilterComponent",
                "module": "src/components/search-filters/sub-components/filters/BaseFilterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "clearSelectedValues",
              "privacy": "public",
              "parameters": [
                {
                  "name": "preventApply",
                  "optional": true,
                  "type": {
                    "text": "boolean"
                  },
                  "description": "Set true if you want to prevent new values to be submitted for that filter"
                }
              ],
              "description": "Clear all selected values in the UI and submit empty filters to connected components",
              "inheritedFrom": {
                "name": "BaseFilterComponent",
                "module": "src/components/search-filters/sub-components/filters/BaseFilterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "onItemUpdated",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "filterValue",
                  "type": {
                    "text": "IDataFilterValue"
                  }
                },
                {
                  "name": "selected",
                  "type": {
                    "text": "boolean"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "BaseFilterComponent",
                "module": "src/components/search-filters/sub-components/filters/BaseFilterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "isSelectedValue",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "key",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "BaseFilterComponent",
                "module": "src/components/search-filters/sub-components/filters/BaseFilterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "applyFilters",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseFilterComponent",
                "module": "src/components/search-filters/sub-components/filters/BaseFilterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "processAggregations",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "values",
                  "type": {
                    "text": "IDataFilterResultValue[]"
                  },
                  "description": "the original filter values received from the results"
                }
              ],
              "description": "Process manual filter aggregations according to matched values from configuration",
              "inheritedFrom": {
                "name": "BaseFilterComponent",
                "module": "src/components/search-filters/sub-components/filters/BaseFilterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "closeMenu",
              "privacy": "public",
              "inheritedFrom": {
                "name": "BaseFilterComponent",
                "module": "src/components/search-filters/sub-components/filters/BaseFilterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "toggleMenu",
              "privacy": "public",
              "inheritedFrom": {
                "name": "BaseFilterComponent",
                "module": "src/components/search-filters/sub-components/filters/BaseFilterComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "blurMenu",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "MouseEvent"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "BaseFilterComponent",
                "module": "src/components/search-filters/sub-components/filters/BaseFilterComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "theme",
              "attribute": "theme",
              "reflects": true,
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "enableDebugMode",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Enable the debug to explore data from context",
              "attribute": "enable-debug",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "renderedOnce",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Flag indicating if data have been rendered at least once",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "showDebugData",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "isInitialized",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Property indicating the component has finished its initialization squence, for instance setting default values than can be read from other component\r\nThis property is set as reflected attribute to be able to trigger a mutation for consumer components",
              "attribute": "initialized",
              "reflects": true,
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "_eventHanlders",
              "type": {
                "text": "Map<string, {component: HTMLElement, event: string, handler: EventHandler<any>}>"
              },
              "privacy": "public",
              "default": "new Map<string, {component: HTMLElement, event: string, handler: EventHandler<any>}>()",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "componentError",
              "type": {
                "text": "Error"
              },
              "privacy": "public",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "field",
              "name": "themeStyles",
              "static": true,
              "description": "Returns styles from theme (i.e. define CSS variables)",
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderDebugMode",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderDebugData",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "any"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "toggleDebugData",
              "privacy": "private",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "bindComponents",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "parameters": [
                {
                  "name": "bindings",
                  "type": {
                    "text": "IComponentBinding[]"
                  },
                  "description": "the bindings to perform"
                }
              ],
              "description": "Binds all connected to the current one by listening all required events.\r\nThe method will wait for the component to be present on the page after a predefined timeout (default 5000ms)",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "unbindComponents",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "bindings",
                  "type": {
                    "text": "IComponentBinding[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "getTheme",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "description": "Get CSS variables values for the component predefined variables",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "getLocalizedString",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "string",
                  "type": {
                    "text": "ILocalizedString | string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "setFASTColors",
              "privacy": "private",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasPropertyUpdated",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "changedProperties",
                  "type": {
                    "text": "PropertyValueMap<any>"
                  }
                },
                {
                  "name": "propertyName",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "fireCustomEvent",
              "return": {
                "type": {
                  "text": "*"
                }
              },
              "parameters": [
                {
                  "name": "eventName",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "detail",
                  "optional": true,
                  "type": {
                    "text": "*"
                  }
                },
                {
                  "name": "bubbles",
                  "default": "false",
                  "optional": true,
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "name": "cancelable",
                  "default": "false",
                  "optional": true,
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "name": "composed",
                  "default": "false",
                  "optional": true,
                  "type": {
                    "text": "boolean"
                  }
                }
              ],
              "description": "Override of default method to support 'composed' flag",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "timeoutPromise",
              "privacy": "private",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "promise",
                  "type": {
                    "text": "Promise<unknown>"
                  },
                  "description": "the promise to timeout"
                },
                {
                  "name": "timeout",
                  "type": {
                    "text": "number"
                  },
                  "description": "the timeout delay"
                },
                {
                  "name": "exception",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "the exception raised if any error occures"
                }
              ],
              "description": "Allows a promise to be timeout \r\nhttps://advancedweb.hu/how-to-add-timeout-to-a-promise-in-javascript/",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "kind": "method",
              "name": "waitForElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "binding",
                  "type": {
                    "text": "IComponentBinding"
                  },
                  "description": "the binding detail"
                },
                {
                  "name": "timeout",
                  "optional": true,
                  "type": {
                    "text": "number"
                  }
                }
              ],
              "description": "Waits for a component to be present on the page and initialized to perform event binding",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            }
          ],
          "superclass": {
            "name": "BaseFilterComponent",
            "module": "/src/components/search-filters/sub-components/filters/BaseFilterComponent"
          },
          "attributes": [
            {
              "name": "onFilterUpdated",
              "type": {
                "text": "(filterName: string, filterValue: IDataFilterValue, selected: boolean) => void"
              },
              "description": "Callback function when a filter is selected",
              "fieldName": "onFilterUpdated",
              "inheritedFrom": {
                "name": "BaseFilterComponent",
                "module": "src/components/search-filters/sub-components/filters/BaseFilterComponent.ts"
              }
            },
            {
              "name": "onApplyFilters",
              "type": {
                "text": "(filterName: string) => void"
              },
              "description": "Callback function when filters are submitted",
              "fieldName": "onApplyFilters",
              "inheritedFrom": {
                "name": "BaseFilterComponent",
                "module": "src/components/search-filters/sub-components/filters/BaseFilterComponent.ts"
              }
            },
            {
              "name": "theme",
              "fieldName": "theme",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "name": "enable-debug",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Enable the debug to explore data from context",
              "fieldName": "enableDebugMode",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            },
            {
              "name": "initialized",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Property indicating the component has finished its initialization squence, for instance setting default values than can be read from other component\r\nThis property is set as reflected attribute to be able to trigger a mutation for consumer components",
              "fieldName": "isInitialized",
              "inheritedFrom": {
                "name": "BaseComponent",
                "module": "src/components/BaseComponent.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "DateFilterComponent",
          "declaration": {
            "name": "DateFilterComponent",
            "module": "src/components/search-filters/sub-components/filters/date-filter/DateFilterComponent.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/search-filters/sub-components/filters/checkbox-filter/tests/mocks.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "basefilterResults",
          "type": {
            "text": "IDataFilterResult"
          },
          "default": "{\r\n    \"filterName\":\"FileType\",\r\n    \"values\":[\r\n      {\r\n        \"key\":\"\\\"ǂǂ646f6378\\\"\",\r\n        \"count\": 100,\r\n        \"name\":\"docx\",\r\n        \"value\":\"\\\"ǂǂ646f6378\\\"\",\r\n        \"operator\": 6\r\n      },\r\n      {\r\n        \"key\":\"\\\"ǂǂ70707478\\\"\",\r\n        \"count\": 50,\r\n        \"name\":\"pptx\",\r\n        \"value\":\"\\\"ǂǂ70707478\\\"\",\r\n        \"operator\": 6\r\n      },\r\n      {\r\n        \"key\":\"\\\"ǂǂ706466\\\"\",\r\n        \"count\": 25,\r\n        \"name\":\"pdf\",\r\n        \"value\":\"\\\"ǂǂ706466\\\"\",\r\n        \"operator\": 6\r\n      }\r\n    ]\r\n}"
        },
        {
          "kind": "variable",
          "name": "baseFilterConfiguration",
          "type": {
            "text": "IDataFilterConfiguration"
          },
          "default": "{\r\n    filterName: \"FileType\",\r\n    template: BuiltinFilterTemplates.CheckBox,\r\n    displayName: \"File type\",\r\n    showCount: true,\r\n    operator: FilterConditionOperator.OR,\r\n    isMulti: false,\r\n    sortBy: FilterSortType.ByName,\r\n    sortDirection: FilterSortDirection.Descending,\r\n    maxBuckets: 50,\r\n    sortIdx: 0\r\n}"
        },
        {
          "kind": "variable",
          "name": "aggregatedFilterResults",
          "type": {
            "text": "IDataFilterResult"
          },
          "default": "{\r\n    \"filterName\":\"FileType\",\r\n    \"values\":[\r\n        {\r\n        \"key\":\"\\\"ǂǂ646f6378\\\"\",\r\n        \"count\": 100,\r\n        \"name\":\"docx\",\r\n        \"value\":\"\\\"ǂǂ646f6378\\\"\",\r\n        \"operator\": 6\r\n        },\r\n        {\r\n        \"key\":\"\\\"ǂǂ646F63\\\"\",\r\n        \"count\": 50,\r\n        \"name\":\"doc\",\r\n        \"value\":\"\\\"ǂǂ646F63\\\"\",\r\n        \"operator\": 6\r\n        },\r\n        {\r\n        \"key\":\"\\\"ǂǂ646F636D\\\"\",\r\n        \"count\": 25,\r\n        \"name\":\"docm\",\r\n        \"value\":\"\\\"ǂǂ646F636D\\\"\",\r\n        \"operator\": 6\r\n        },\r\n        {\r\n        \"key\":\"\\\"ǂǂ70707478\\\"\",\r\n        \"count\": 50,\r\n        \"name\":\"pptx\",\r\n        \"value\":\"\\\"ǂǂ70707478\\\"\",\r\n        \"operator\": 6\r\n        },\r\n    ]\r\n}"
        },
        {
          "kind": "variable",
          "name": "aggregatedFilterConfiguration",
          "type": {
            "text": "object"
          },
          "default": "{\r\n    ...baseFilterConfiguration,\r\n    aggregations: [\r\n        {\r\n          \"aggregationName\":{\r\n              \"default\":\"Word document\",\r\n              \"fr-fr\":\"Document Word\",\r\n              \"ro-ro\":\"document Word\"\r\n          },\r\n          \"matchingValues\":[\r\n              \"docx\",\r\n              \"doc\",\r\n              \"docm\"\r\n          ],\r\n          \"aggregationValue\":\"or(\\\"docx\\\",\\\"doc\\\",\\\"docm\\\")\",\r\n          \"aggregationValueIconUrl\":\"https://res-1.cdn.office.net/files/fabric-cdn-prod_20230815.002/assets/item-types/48/docx.svg\"\r\n        }\r\n    ]\r\n}"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "basefilterResults",
          "declaration": {
            "name": "basefilterResults",
            "module": "src/components/search-filters/sub-components/filters/checkbox-filter/tests/mocks.ts"
          }
        },
        {
          "kind": "js",
          "name": "baseFilterConfiguration",
          "declaration": {
            "name": "baseFilterConfiguration",
            "module": "src/components/search-filters/sub-components/filters/checkbox-filter/tests/mocks.ts"
          }
        },
        {
          "kind": "js",
          "name": "aggregatedFilterResults",
          "declaration": {
            "name": "aggregatedFilterResults",
            "module": "src/components/search-filters/sub-components/filters/checkbox-filter/tests/mocks.ts"
          }
        },
        {
          "kind": "js",
          "name": "aggregatedFilterConfiguration",
          "declaration": {
            "name": "aggregatedFilterConfiguration",
            "module": "src/components/search-filters/sub-components/filters/checkbox-filter/tests/mocks.ts"
          }
        }
      ]
    }
  ]
}
